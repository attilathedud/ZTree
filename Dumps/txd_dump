Resident data ends at 4da8, program starts at 4da8, file ends at 18398

Starting analysis pass at address 4da7

End of analysis pass, low address = 4da8, high address = ed2c

[Start of code]

Main routine R0001, 0 locals

       CALL_VS         R0002 -> Gef
       QUIT            

Routine R0002, 0 locals

       CALL_VN         R0418 (#0016,#0049)
       RTRUE           

Routine R0003, 0 locals

       RTRUE           

Routine R0004, 1 local

       LOADB           L00,#00 -> -(SP)
       PULL            Gef
       JE              Gef,#61,#65,#69 [TRUE] L0001
       JE              Gef,#6f,#75,#41 [TRUE] L0001
       JE              Gef,#45,#49,#4f [TRUE] L0001
       JE              Gef,#55 [FALSE] L0002
L0001: RTRUE           
L0002: RFALSE          

Routine R0005, 1 local

       STORE           Gef,L00
       JE              Gef,#07 [FALSE] L0001
       PRINT           "north"
       JUMP            L0013
L0001: JE              Gef,#08 [FALSE] L0002
       PRINT           "south"
       JUMP            L0013
L0002: JE              Gef,#09 [FALSE] L0003
       PRINT           "east"
       JUMP            L0013
L0003: JE              Gef,#0a [FALSE] L0004
       PRINT           "west"
       JUMP            L0013
L0004: JE              Gef,#0b [FALSE] L0005
       PRINT           "northeast"
       JUMP            L0013
L0005: JE              Gef,#0d [FALSE] L0006
       PRINT           "northwest"
       JUMP            L0013
L0006: JE              Gef,#0c [FALSE] L0007
       PRINT           "southeast"
       JUMP            L0013
L0007: JE              Gef,#0e [FALSE] L0008
       PRINT           "southwest"
       JUMP            L0013
L0008: JE              Gef,#0f [FALSE] L0009
       PRINT           "up"
       JUMP            L0013
L0009: JE              Gef,#10 [FALSE] L0010
       PRINT           "down"
       JUMP            L0013
L0010: JE              Gef,#11 [FALSE] L0011
       PRINT           "in"
       JUMP            L0013
L0011: JE              Gef,#12 [FALSE] L0012
       PRINT           "out"
       JUMP            L0013
L0012: CALL_VS         R0112 (#09,L00) -> -(SP)
       RET_POPPED      
L0013: RTRUE           

Routine R0006, 2 locals

       JZ              L00 [FALSE] L0001
       PRINT           "zero"
       RFALSE          
L0001: JL              L00,#00 [FALSE] L0002
       PRINT           "minus "
       SUB             #00,L00 -> L00
L0002: JL              L00,#03e8 [TRUE] L0003
       DIV             L00,#03e8 -> -(SP)
       CALL_2N         R0006 ((SP)+)
       PRINT           " thousand"
       MOD             L00,#03e8 -> L00
       STORE           L01,#01
L0003: JL              L00,#64 [TRUE] L0005
       JE              L01,#01 [FALSE] L0004
       PRINT           ", "
L0004: DIV             L00,#64 -> -(SP)
       CALL_2N         R0006 ((SP)+)
       PRINT           " hundred"
       MOD             L00,#64 -> L00
       STORE           L01,#01
L0005: JZ              L00 [TRUE] RFALSE
       JE              L01,#01 [FALSE] L0006
       PRINT           " and "
L0006: STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0007
       PRINT           "one"
       JUMP            L0034
L0007: JE              Gef,#02 [FALSE] L0008
       PRINT           "two"
       JUMP            L0034
L0008: JE              Gef,#03 [FALSE] L0009
       PRINT           "three"
       JUMP            L0034
L0009: JE              Gef,#04 [FALSE] L0010
       PRINT           "four"
       JUMP            L0034
L0010: JE              Gef,#05 [FALSE] L0011
       PRINT           "five"
       JUMP            L0034
L0011: JE              Gef,#06 [FALSE] L0012
       PRINT           "six"
       JUMP            L0034
L0012: JE              Gef,#07 [FALSE] L0013
       PRINT           "seven"
       JUMP            L0034
L0013: JE              Gef,#08 [FALSE] L0014
       PRINT           "eight"
       JUMP            L0034
L0014: JE              Gef,#09 [FALSE] L0015
       PRINT           "nine"
       JUMP            L0034
L0015: JE              Gef,#0a [FALSE] L0016
       PRINT           "ten"
       JUMP            L0034
L0016: JE              Gef,#0b [FALSE] L0017
       PRINT           "eleven"
       JUMP            L0034
L0017: JE              Gef,#0c [FALSE] L0018
       PRINT           "twelve"
       JUMP            L0034
L0018: JE              Gef,#0d [FALSE] L0019
       PRINT           "thirteen"
       JUMP            L0034
L0019: JE              Gef,#0e [FALSE] L0020
       PRINT           "fourteen"
       JUMP            L0034
L0020: JE              Gef,#0f [FALSE] L0021
       PRINT           "fifteen"
       JUMP            L0034
L0021: JE              Gef,#10 [FALSE] L0022
       PRINT           "sixteen"
       JUMP            L0034
L0022: JE              Gef,#11 [FALSE] L0023
       PRINT           "seventeen"
       JUMP            L0034
L0023: JE              Gef,#12 [FALSE] L0024
       PRINT           "eighteen"
       JUMP            L0034
L0024: JE              Gef,#13 [FALSE] L0025
       PRINT           "nineteen"
       JUMP            L0034
L0025: JL              Gef,#14 [TRUE] L0034
       JG              Gef,#63 [TRUE] L0034
       DIV             L00,#0a -> -(SP)
       PULL            Gef
       JE              Gef,#02 [FALSE] L0026
       PRINT           "twenty"
       JUMP            L0033
L0026: JE              Gef,#03 [FALSE] L0027
       PRINT           "thirty"
       JUMP            L0033
L0027: JE              Gef,#04 [FALSE] L0028
       PRINT           "forty"
       JUMP            L0033
L0028: JE              Gef,#05 [FALSE] L0029
       PRINT           "fifty"
       JUMP            L0033
L0029: JE              Gef,#06 [FALSE] L0030
       PRINT           "sixty"
       JUMP            L0033
L0030: JE              Gef,#07 [FALSE] L0031
       PRINT           "seventy"
       JUMP            L0033
L0031: JE              Gef,#08 [FALSE] L0032
       PRINT           "eighty"
       JUMP            L0033
L0032: JE              Gef,#09 [FALSE] L0033
       PRINT           "ninety"
L0033: MOD             L00,#0a -> -(SP)
       JZ              (SP)+ [TRUE] L0034
       PRINT           "-"
       MOD             L00,#0a -> -(SP)
       CALL_2N         R0006 ((SP)+)
L0034: RTRUE           

Routine R0007, 3 locals

       MOD             L00,#0c -> L02
       JZ              L02 [FALSE] L0001
       STORE           L02,#0c
L0001: JL              L02,#0a [FALSE] L0002
       PRINT           " "
L0002: PRINT_NUM       L02
       PRINT           ":"
       DIV             L01,#0a -> -(SP)
       PRINT_NUM       (SP)+
       MOD             L01,#0a -> -(SP)
       PRINT_NUM       (SP)+
       DIV             L00,#0c -> -(SP)
       JG              (SP)+,#00 [FALSE] L0003
       PRINT           " pm"
       JUMP            L0004
L0003: PRINT           " am"
L0004: RTRUE           

Routine R0008, 1 local

       JE              L00,"l" [FALSE] L0001
       PRINT           "look"
       RTRUE           
L0001: JE              L00,"z" [FALSE] L0002
       PRINT           "wait"
       RTRUE           
L0002: JE              L00,"x" [FALSE] L0003
       PRINT           "examine"
       RTRUE           
L0003: JE              L00,"i","inv","inventory" [FALSE] L0004
       PRINT           "inventory"
       RTRUE           
L0004: RFALSE          

Routine R0009, 1 local

       JE              L00,G14 [FALSE] L0001
       PRINT           "you"
       RTRUE           
L0001: TEST_ATTR       L00,#1e [FALSE] L0002
       PRINT           "those"
       RTRUE           
L0002: TEST_ATTR       L00,#00 [FALSE] L0004
       TEST_ATTR       L00,#1c [FALSE] L0003
       PRINT           "her"
       RTRUE           
L0003: TEST_ATTR       L00,#1d [TRUE] L0004
       PRINT           "him"
       RTRUE           
L0004: PRINT           "that"
       RTRUE           

Routine R0010, 1 local

       JE              L00,G14 [FALSE] L0001
       PRINT           "yourself"
       RTRUE           
L0001: TEST_ATTR       L00,#1e [FALSE] L0002
       PRINT           "them"
       RTRUE           
L0002: TEST_ATTR       L00,#00 [FALSE] L0004
       TEST_ATTR       L00,#1c [FALSE] L0003
       PRINT           "her"
       RTRUE           
L0003: TEST_ATTR       L00,#1d [TRUE] L0004
       PRINT           "him"
       RTRUE           
L0004: PRINT           "it"
       RTRUE           

Routine R0011, 1 local

       TEST_ATTR       L00,#1e [TRUE] L0001
       JE              L00,G14 [FALSE] L0002
L0001: PRINT           "are"
       JUMP            L0003
L0002: PRINT           "is"
L0003: RTRUE           

Routine R0012, 1 local

       JE              L00,G14 [FALSE] L0001
       PRINT           "You"
       RTRUE           
L0001: TEST_ATTR       L00,#1e [FALSE] L0002
       PRINT           "Those"
       RTRUE           
L0002: TEST_ATTR       L00,#00 [FALSE] L0004
       TEST_ATTR       L00,#1c [FALSE] L0003
       PRINT           "She"
       RTRUE           
L0003: TEST_ATTR       L00,#1d [TRUE] L0004
       PRINT           "He"
       RTRUE           
L0004: PRINT           "That"
       RTRUE           

Routine R0013, 1 local

       JE              L00,G14 [FALSE] L0001
       PRINT           "You're"
       RTRUE           
L0001: TEST_ATTR       L00,#1e [FALSE] L0002
       PRINT           "They're"
       RTRUE           
L0002: TEST_ATTR       L00,#00 [FALSE] L0004
       TEST_ATTR       L00,#1c [FALSE] L0003
       PRINT           "She's"
       RTRUE           
L0003: TEST_ATTR       L00,#1d [TRUE] L0004
       PRINT           "He's"
       RTRUE           
L0004: PRINT           "That's"
       RTRUE           

Routine R0014, 2 locals

       JE              Ge9,#1008 [FALSE] L0001
       PRINT           "
>"
       RTRUE           
L0001: JE              Ge9,#1007 [FALSE] L0066
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0002
       PRINT_PADDR     S043
       NEW_LINE        
       RTRUE           
L0002: JE              Gef,#02 [FALSE] L0003
       PRINT_RET       "Nothing to do!"
L0003: JE              Gef,#03 [FALSE] L0004
       PRINT           " You have died "
       JUMP            L0065
L0004: JE              Gef,#04 [FALSE] L0005
       PRINT           " You have won "
       JUMP            L0065
L0005: JE              Gef,#05 [FALSE] L0008
       PRINT_PADDR     S044
       PRINT           ", UNDO your last move"
       JZ              #01 [TRUE] L0006
       PRINT_PADDR     S045
L0006: JE              G15,#02 [FALSE] L0007
       JZ              #0001 [FALSE] L0007
       PRINT_PADDR     S046
L0007: PRINT_RET       " or QUIT?"
L0008: JE              Gef,#06 [FALSE] L0009
       PRINT_PADDR     S047
       NEW_LINE        
       RTRUE           
L0009: JE              Gef,#07 [FALSE] L0010
       PRINT_PADDR     S048
       NEW_LINE        
       RTRUE           
L0010: JE              Gef,#08 [FALSE] L0011
       PRINT_PADDR     S049
       NEW_LINE        
       RTRUE           
L0011: JE              Gef,#09 [FALSE] L0012
       PRINT_RET       "
It is now pitch dark in here!"
L0012: JE              Gef,#0a [FALSE] L0013
       PRINT_RET       "I beg your pardon?"
L0013: JE              Gef,#0b [FALSE] L0014
       PRINT_PADDR     S050
       NEW_LINE        
       RTRUE           
L0014: JE              Gef,#0c [FALSE] L0015
       PRINT_PADDR     S051
       NEW_LINE        
       RTRUE           
L0015: JE              Gef,#0d [FALSE] L0016
       PRINT_RET       "[Previous turn undone.]"
L0016: JE              Gef,#0e [FALSE] L0017
       PRINT_RET       "Sorry, that can't be corrected."
L0017: JE              Gef,#0f [FALSE] L0018
       PRINT_RET       "Think nothing of it."
L0018: JE              Gef,#10 [FALSE] L0019
       PRINT_PADDR     S052
       NEW_LINE        
       RTRUE           
L0019: JE              Gef,#11 [FALSE] L0020
       PRINT_PADDR     S053
       NEW_LINE        
       RTRUE           
L0020: JE              Gef,#12 [FALSE] L0021
       PRINT           "yourself"
       JUMP            L0065
L0021: JE              Gef,#13 [FALSE] L0022
       PRINT_RET       "As good-looking as ever."
L0022: JE              Gef,#14 [FALSE] L0023
       PRINT_PADDR     S054
       NEW_LINE        
       RTRUE           
L0023: JE              Gef,#15 [FALSE] L0024
       PRINT_RET       "You can hardly repeat that."
L0024: JE              Gef,#16 [FALSE] L0025
       PRINT_RET       "You can't begin with a comma."
L0025: JE              Gef,#17 [FALSE] L0026
       PRINT_PADDR     S055
       NEW_LINE        
       RTRUE           
L0026: JE              Gef,#18 [FALSE] L0027
       PRINT           "You can't talk to "
       CALL_2N         R0103 (L01)
       PRINT_RET       "."
L0027: JE              Gef,#19 [FALSE] L0028
       PRINT_PADDR     S056
       NEW_LINE        
       RTRUE           
L0028: JE              Gef,#1a [FALSE] L0029
       PRINT           "(first taking "
       CALL_2N         R0103 (G43)
       PRINT_RET       ")"
L0029: JE              Gef,#1b [FALSE] L0030
       PRINT_PADDR     S057
       NEW_LINE        
       RTRUE           
L0030: JE              Gef,#1c [FALSE] L0031
       PRINT_PADDR     S058
       JUMP            L0065
L0031: JE              Gef,#1d [FALSE] L0032
       PRINT_RET       "I didn't understand that number."
L0032: JE              Gef,#1e [FALSE] L0033
       PRINT_RET       "You can't see any such thing."
L0033: JE              Gef,#1f [FALSE] L0034
       PRINT_PADDR     S059
       NEW_LINE        
       RTRUE           
L0034: JE              Gef,#20 [FALSE] L0035
       PRINT_RET       "You aren't holding that!"
L0035: JE              Gef,#21 [FALSE] L0036
       PRINT_PADDR     S060
       NEW_LINE        
       RTRUE           
L0036: JE              Gef,#22 [FALSE] L0037
       PRINT_PADDR     S061
       NEW_LINE        
       RTRUE           
L0037: JE              Gef,#23 [FALSE] L0038
       PRINT           "I'm not sure what ""
       PRINT_ADDR      G68
       PRINT_RET       "" refers to."
L0038: JE              Gef,#24 [FALSE] L0039
       PRINT_PADDR     S062
       NEW_LINE        
       RTRUE           
L0039: JE              Gef,#25 [FALSE] L0040
       PRINT_PADDR     S063
       NEW_LINE        
       RTRUE           
L0040: JE              Gef,#26 [FALSE] L0041
       PRINT_RET       "That's not a verb I recognise."
L0041: JE              Gef,#27 [FALSE] L0042
       PRINT_PADDR     S064
       NEW_LINE        
       RTRUE           
L0042: JE              Gef,#28 [FALSE] L0043
       PRINT           "You can't see ""
       PRINT_ADDR      G68
       PRINT           "" ("
       CALL_2N         R0103 (G69)
       PRINT_RET       ") at the moment."
L0043: JE              Gef,#29 [FALSE] L0044
       PRINT_PADDR     S065
       NEW_LINE        
       RTRUE           
L0044: JE              Gef,#2a [FALSE] L0049
       JZ              L01 [FALSE] L0045
       PRINT           "None"
       JUMP            L0046
L0045: PRINT           "Only "
       CALL_2N         R0106 (L01)
L0046: PRINT           " of those "
       JE              L01,#01 [FALSE] L0047
       PRINT           "is"
       JUMP            L0048
L0047: PRINT           "are"
L0048: PRINT_RET       " available."
L0049: JE              Gef,#2b [FALSE] L0050
       PRINT_RET       "Nothing to do!"
L0050: JE              Gef,#2c [FALSE] L0051
       PRINT_RET       "There are none at all available!"
L0051: JE              Gef,#2d [FALSE] L0052
       PRINT           "Who do you mean, "
       JUMP            L0065
L0052: JE              Gef,#2e [FALSE] L0053
       PRINT           "Which do you mean, "
       JUMP            L0065
L0053: JE              Gef,#2f [FALSE] L0054
       PRINT_PADDR     S066
       NEW_LINE        
       RTRUE           
L0054: JE              Gef,#30 [FALSE] L0056
       PRINT           "Whom do you want"
       JE              G37,G14 [TRUE] L0055
       PRINT           " "
       CALL_2N         R0103 (G37)
L0055: PRINT           " to "
       CALL_1N         R0036
       PRINT           "?
"
       JUMP            L0065
L0056: JE              Gef,#31 [FALSE] L0058
       PRINT           "What do you want"
       JE              G37,G14 [TRUE] L0057
       PRINT           " "
       CALL_2N         R0103 (G37)
L0057: PRINT           " to "
       CALL_1N         R0036
       PRINT           "?
"
       JUMP            L0065
L0058: JE              Gef,#32 [FALSE] L0062
       PRINT           "Your score has just gone "
       JG              L01,#00 [FALSE] L0059
       PRINT           "up"
       JUMP            L0060
L0059: SUB             #00,L01 -> L01
       PRINT           "down"
L0060: PRINT           " by "
       CALL_2N         R0106 (L01)
       PRINT           " point"
       JG              L01,#01 [FALSE] L0061
       PRINT           "s"
L0061: JUMP            L0065
L0062: JE              Gef,#33 [FALSE] L0063
       PRINT_PADDR     S067
       NEW_LINE        
       RTRUE           
L0063: JE              Gef,#34 [FALSE] L0064
       PRINT           "
Type a number from 1 to "
       PRINT_NUM       L01
       PRINT_RET       ", 0 to redisplay or press ENTER."
L0064: JE              Gef,#35 [FALSE] L0065
       PRINT_RET       "
[Please press SPACE.]"
L0065: RTRUE           
L0066: JE              Ge9,#1006 [FALSE] L0089
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0067
       PRINT           " (providing light)"
       JUMP            L0088
L0067: JE              Gef,#02 [FALSE] L0068
       PRINT           " (which "
       CALL_2N         R0011 (L01)
       PRINT           " closed)"
       JUMP            L0088
L0068: JE              Gef,#03 [FALSE] L0069
       PRINT           " (closed and providing light)"
       JUMP            L0088
L0069: JE              Gef,#04 [FALSE] L0070
       PRINT           " (which "
       CALL_2N         R0011 (L01)
       PRINT           " empty)"
       JUMP            L0088
L0070: JE              Gef,#05 [FALSE] L0071
       PRINT           " (empty and providing light)"
       JUMP            L0088
L0071: JE              Gef,#06 [FALSE] L0072
       PRINT           " (which "
       CALL_2N         R0011 (L01)
       PRINT           " closed and empty)"
       JUMP            L0088
L0072: JE              Gef,#07 [FALSE] L0073
       PRINT_PADDR     S068
       JUMP            L0088
L0073: JE              Gef,#08 [FALSE] L0074
       PRINT           " (providing light and being worn"
       JUMP            L0088
L0074: JE              Gef,#09 [FALSE] L0075
       PRINT           " (providing light"
       JUMP            L0088
L0075: JE              Gef,#0a [FALSE] L0076
       PRINT           " (being worn"
       JUMP            L0088
L0076: JE              Gef,#0b [FALSE] L0077
       PRINT           " (which "
       CALL_2N         R0011 (L01)
       PRINT           " "
       JUMP            L0088
L0077: JE              Gef,#0c [FALSE] L0078
       PRINT           "open"
       JUMP            L0088
L0078: JE              Gef,#0d [FALSE] L0079
       PRINT           "open but empty"
       JUMP            L0088
L0079: JE              Gef,#0e [FALSE] L0080
       PRINT           "closed"
       JUMP            L0088
L0080: JE              Gef,#0f [FALSE] L0081
       PRINT           "closed and locked"
       JUMP            L0088
L0081: JE              Gef,#10 [FALSE] L0082
       PRINT           " and empty"
       JUMP            L0088
L0082: JE              Gef,#11 [FALSE] L0083
       PRINT           " (which "
       CALL_2N         R0011 (L01)
       PRINT           " empty)"
       JUMP            L0088
L0083: JE              Gef,#12 [FALSE] L0084
       PRINT           " containing "
       JUMP            L0088
L0084: JE              Gef,#13 [FALSE] L0085
       PRINT           " (on "
       JUMP            L0088
L0085: JE              Gef,#14 [FALSE] L0086
       PRINT           ", on top of "
       JUMP            L0088
L0086: JE              Gef,#15 [FALSE] L0087
       PRINT           " (in "
       JUMP            L0088
L0087: JE              Gef,#16 [FALSE] L0088
       PRINT           ", inside "
L0088: RTRUE           
L0089: JE              Ge9,#00 [FALSE] L0094
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0090
       PRINT           "At the moment, "
       JUMP            L0093
L0090: JE              Gef,#02 [FALSE] L0091
       PRINT           "means "
       JUMP            L0093
L0091: JE              Gef,#03 [FALSE] L0092
       PRINT           "is unset"
       JUMP            L0093
L0092: JE              Gef,#04 [FALSE] L0093
       PRINT_PADDR     S069
       NEW_LINE        
       RTRUE           
L0093: RTRUE           
L0094: JE              Ge9,#1003 [FALSE] L0097
       CALL_2N         R0104 (L01)
       TEST_ATTR       L01,#1e [FALSE] L0095
       PRINT           " have"
       JUMP            L0096
L0095: PRINT           " has"
L0096: PRINT_RET       " better things to do."
L0097: JE              Ge9,#01 [FALSE] L0100
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0098
       PRINT           "Please answer yes or no."
       JUMP            L0099
L0098: JE              Gef,#02 [FALSE] L0099
       PRINT           "Are you sure you want to quit? "
L0099: RTRUE           
L0100: JE              Ge9,#02 [FALSE] L0103
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0101
       PRINT_PADDR     S070
       JUMP            L0102
L0101: JE              Gef,#02 [FALSE] L0102
       PRINT_RET       "Failed."
L0102: RTRUE           
L0103: JE              Ge9,#03 [FALSE] L0106
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0104
       PRINT_RET       "Restore failed."
L0104: JE              Gef,#02 [FALSE] L0105
       PRINT_RET       "Ok."
L0105: RTRUE           
L0106: JE              Ge9,#04 [FALSE] L0109
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0107
       PRINT_RET       "Save failed."
L0107: JE              Gef,#02 [FALSE] L0108
       PRINT_RET       "Ok."
L0108: RTRUE           
L0109: JE              Ge9,#05 [FALSE] L0112
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0110
       PRINT_PADDR     S071
       NEW_LINE        
       RTRUE           
L0110: JE              Gef,#02 [FALSE] L0111
       PRINT_PADDR     S072
       NEW_LINE        
       RTRUE           
L0111: RTRUE           
L0112: JE              Ge9,#06 [FALSE] L0116
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0113
       PRINT_RET       "Transcripting is already on."
L0113: JE              Gef,#02 [FALSE] L0114
       PRINT_RET       "Start of a transcript of"
L0114: JE              Gef,#03 [FALSE] L0115
       PRINT_PADDR     S073
       NEW_LINE        
       RTRUE           
L0115: RTRUE           
L0116: JE              Ge9,#07 [FALSE] L0120
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0117
       PRINT_RET       "Transcripting is already off."
L0117: JE              Gef,#02 [FALSE] L0118
       PRINT_RET       "
End of transcript."
L0118: JE              Gef,#03 [FALSE] L0119
       PRINT_PADDR     S074
       NEW_LINE        
       RTRUE           
L0119: RTRUE           
L0120: JE              Ge9,#08 [FALSE] L0121
       PRINT_RET       "Score notification on."
L0121: JE              Ge9,#09 [FALSE] L0122
       PRINT_RET       "Score notification off."
L0122: JE              Ge9,#0a [FALSE] L0123
       PRINT           "You have visited: "
       RTRUE           
L0123: JE              Ge9,#0b [FALSE] L0134
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0124
       PRINT_RET       "Objects you have handled:
"
L0124: JE              Gef,#02 [FALSE] L0125
       PRINT_RET       "None."
L0125: JE              Gef,#03 [FALSE] L0126
       PRINT           "   (worn)"
       JUMP            L0133
L0126: JE              Gef,#04 [FALSE] L0127
       PRINT           "   (held)"
       JUMP            L0133
L0127: JE              Gef,#05 [FALSE] L0128
       PRINT           "   (given away)"
       JUMP            L0133
L0128: JE              Gef,#06 [FALSE] L0129
       PRINT           "   (in "
       CALL_2N         R0105 (L01)
       PRINT           ")"
       JUMP            L0133
L0129: JE              Gef,#07 [FALSE] L0130
       PRINT           "   (in "
       CALL_2N         R0103 (L01)
       PRINT           ")"
       JUMP            L0133
L0130: JE              Gef,#08 [FALSE] L0131
       PRINT           "   (inside "
       CALL_2N         R0103 (L01)
       PRINT           ")"
       JUMP            L0133
L0131: JE              Gef,#09 [FALSE] L0132
       PRINT           "   (on "
       CALL_2N         R0103 (L01)
       PRINT           ")"
       JUMP            L0133
L0132: JE              Gef,#0a [FALSE] L0133
       PRINT           "   (lost)"
L0133: RTRUE           
L0134: JE              Ge9,#0c [FALSE] L0138
       JZ              G15 [TRUE] L0135
       PRINT           "In that game you scored "
       JUMP            L0136
L0135: PRINT           "You have so far scored "
L0136: PRINT_NUM       G0f
       PRINT           " out of a possible "
       PRINT_NUM       #0032
       PRINT           ", in "
       PRINT_NUM       G0a
       PRINT           " turn"
       JG              G0a,#01 [FALSE] L0137
       PRINT           "s"
L0137: RTRUE           
L0138: JE              Ge9,#0d [FALSE] L0145
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0141
       JZ              G15 [TRUE] L0139
       PRINT           "The score was "
       JUMP            L0140
L0139: PRINT           "The score is "
L0140: PRINT_RET       "made up as follows:
"
L0141: JE              Gef,#02 [FALSE] L0142
       PRINT_RET       "finding sundry items"
L0142: JE              Gef,#03 [FALSE] L0143
       PRINT_RET       "visiting various places"
L0143: JE              Gef,#04 [FALSE] L0144
       PRINT           "total (out of "
       PRINT_NUM       #0032
       PRINT_RET       ")"
L0144: RTRUE           
L0145: JE              Ge9,#0e [FALSE] L0148
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0146
       PRINT_RET       "You are carrying nothing."
L0146: JE              Gef,#02 [FALSE] L0147
       PRINT           "You are carrying"
L0147: RTRUE           
L0148: JE              Ge9,#0f [FALSE] L0172
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0149
       PRINT_RET       "Taken."
L0149: JE              Gef,#02 [FALSE] L0150
       PRINT_RET       "You are always self-possessed."
L0150: JE              Gef,#03 [FALSE] L0151
       PRINT           "I don't suppose "
       CALL_2N         R0103 (L01)
       PRINT_RET       " would care for that."
L0151: JE              Gef,#04 [FALSE] L0154
       PRINT           "You'd have to get "
       TEST_ATTR       L01,#14 [FALSE] L0152
       PRINT           "off "
       JUMP            L0153
L0152: PRINT           "out of "
L0153: CALL_2N         R0103 (L01)
       PRINT_RET       " first."
L0154: JE              Gef,#05 [FALSE] L0155
       PRINT           "You already have "
       CALL_2N         R0009 (L01)
       PRINT_RET       "."
L0155: JE              Gef,#06 [FALSE] L0158
       TEST_ATTR       G2d,#1e [FALSE] L0156
       PRINT           "Those seem "
       JUMP            L0157
L0156: PRINT           "That seems "
L0157: PRINT           "to belong to "
       CALL_2N         R0103 (L01)
       PRINT_RET       "."
L0158: JE              Gef,#07 [FALSE] L0161
       TEST_ATTR       G2d,#1e [FALSE] L0159
       PRINT           "Those seem "
       JUMP            L0160
L0159: PRINT           "That seems "
L0160: PRINT           "to be a part of "
       CALL_2N         R0103 (L01)
       PRINT_RET       "."
L0161: JE              Gef,#08 [FALSE] L0162
       CALL_2N         R0012 (L01)
       PRINT           " "
       CALL_2N         R0011 (L01)
       PRINT_RET       "n't available."
L0162: JE              Gef,#09 [FALSE] L0163
       CALL_2N         R0104 (L01)
       PRINT           " "
       CALL_2N         R0011 (L01)
       PRINT_RET       "n't open."
L0163: JE              Gef,#0a [FALSE] L0166
       TEST_ATTR       L01,#1e [FALSE] L0164
       PRINT           "They're "
       JUMP            L0165
L0164: PRINT           "That's "
L0165: PRINT_RET       "hardly portable."
L0166: JE              Gef,#0b [FALSE] L0169
       TEST_ATTR       L01,#1e [FALSE] L0167
       PRINT           "They're "
       JUMP            L0168
L0167: PRINT           "That's "
L0168: PRINT_RET       "fixed in place."
L0169: JE              Gef,#0c [FALSE] L0170
       PRINT_PADDR     S075
       NEW_LINE        
       RTRUE           
L0170: JE              Gef,#0d [FALSE] L0171
       PRINT           "(putting "
       CALL_2N         R0103 (L01)
       PRINT           " into "
       CALL_2N         R0103 (#0000)
       PRINT_RET       " to make room)"
L0171: RTRUE           
L0172: JE              Ge9,#10 [FALSE] L0179
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0175
       TEST_ATTR       L01,#1e [FALSE] L0173
       CALL_2N         R0104 (L01)
       PRINT           " are "
       JUMP            L0174
L0173: CALL_2N         R0104 (L01)
       PRINT           " is "
L0174: PRINT_RET       "already here."
L0175: JE              Gef,#02 [FALSE] L0176
       PRINT           "You haven't got "
       CALL_2N         R0009 (L01)
       PRINT_RET       "."
L0176: JE              Gef,#03 [FALSE] L0177
       PRINT           "(first taking "
       CALL_2N         R0103 (L01)
       PRINT_RET       " off)"
L0177: JE              Gef,#04 [FALSE] L0178
       PRINT_RET       "Dropped."
L0178: RTRUE           
L0179: JE              Ge9,#11 [FALSE] L0187
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0182
       TEST_ATTR       L01,#1e [FALSE] L0180
       PRINT           "They are"
       JUMP            L0181
L0180: PRINT           "It is "
L0181: PRINT_RET       " unfortunately closed."
L0182: JE              Gef,#02 [FALSE] L0185
       TEST_ATTR       L01,#1e [FALSE] L0183
       PRINT           "But they aren't"
       JUMP            L0184
L0183: PRINT           "But it isn't"
L0184: PRINT_RET       " there now."
L0185: JE              Gef,#03 [FALSE] L0186
       PRINT_RET       "Removed."
L0186: RTRUE           
L0187: JE              Ge9,#12 [FALSE] L0196
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0188
       PRINT           "You need to be holding "
       CALL_2N         R0103 (L01)
       PRINT           " before you can put "
       CALL_2N         R0010 (L01)
       PRINT_RET       " on top of something else."
L0188: JE              Gef,#02 [FALSE] L0189
       PRINT_PADDR     S076
       NEW_LINE        
       RTRUE           
L0189: JE              Gef,#03 [FALSE] L0190
       PRINT           "Putting things on "
       CALL_2N         R0103 (L01)
       PRINT_RET       " would achieve nothing."
L0190: JE              Gef,#04 [FALSE] L0191
       PRINT_RET       "You lack the dexterity."
L0191: JE              Gef,#05 [FALSE] L0192
       PRINT           "(first taking "
       CALL_2N         R0010 (L01)
       PRINT_RET       " off)
"
L0192: JE              Gef,#06 [FALSE] L0193
       PRINT           "There is no more room on "
       CALL_2N         R0103 (L01)
       PRINT_RET       "."
L0193: JE              Gef,#07 [FALSE] L0194
       PRINT_RET       "Done."
L0194: JE              Gef,#08 [FALSE] L0195
       PRINT           "You put "
       CALL_2N         R0103 (L01)
       PRINT           " on "
       CALL_2N         R0103 (G2e)
       PRINT_RET       "."
L0195: RTRUE           
L0196: JE              Ge9,#13 [FALSE] L0206
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0197
       PRINT           "You need to be holding "
       CALL_2N         R0103 (L01)
       PRINT           " before you can put "
       CALL_2N         R0010 (L01)
       PRINT_RET       " into something else."
L0197: JE              Gef,#02 [FALSE] L0198
       CALL_2N         R0012 (L01)
       PRINT_RET       " can't contain things."
L0198: JE              Gef,#03 [FALSE] L0199
       CALL_2N         R0104 (L01)
       PRINT           " "
       CALL_2N         R0011 (L01)
       PRINT_RET       " closed."
L0199: JE              Gef,#04 [FALSE] L0200
       PRINT           "You'll need to take "
       CALL_2N         R0010 (L01)
       PRINT_RET       " off first."
L0200: JE              Gef,#05 [FALSE] L0201
       PRINT_PADDR     S077
       NEW_LINE        
       RTRUE           
L0201: JE              Gef,#06 [FALSE] L0202
       PRINT           "(first taking "
       CALL_2N         R0010 (L01)
       PRINT_RET       " off)
"
L0202: JE              Gef,#07 [FALSE] L0203
       PRINT           "There is no more room in "
       CALL_2N         R0103 (L01)
       PRINT_RET       "."
L0203: JE              Gef,#08 [FALSE] L0204
       PRINT_RET       "Done."
L0204: JE              Gef,#09 [FALSE] L0205
       PRINT           "You put "
       CALL_2N         R0103 (L01)
       PRINT           " into "
       CALL_2N         R0103 (G2e)
       PRINT_RET       "."
L0205: RTRUE           
L0206: JE              Ge9,#14 [FALSE] L0210
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0207
       CALL_2N         R0104 (L01)
       PRINT_RET       " can't contain things."
L0207: JE              Gef,#02 [FALSE] L0208
       CALL_2N         R0104 (L01)
       PRINT           " "
       CALL_2N         R0011 (L01)
       PRINT_RET       " closed."
L0208: JE              Gef,#03 [FALSE] L0209
       CALL_2N         R0104 (L01)
       PRINT           " "
       CALL_2N         R0011 (L01)
       PRINT_RET       " empty already."
L0209: RTRUE           
L0210: JE              Ge9,#15 [FALSE] L0216
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0211
       PRINT           "You aren't holding "
       CALL_2N         R0103 (L01)
       PRINT_RET       "."
L0211: JE              Gef,#02 [FALSE] L0212
       PRINT           "You juggle "
       CALL_2N         R0103 (L01)
       PRINT_PADDR     S078
       NEW_LINE        
       RTRUE           
L0212: JE              Gef,#03 [FALSE] L0215
       CALL_2N         R0104 (L01)
       TEST_ATTR       L01,#1e [FALSE] L0213
       PRINT           " don't"
       JUMP            L0214
L0213: PRINT           " doesn't"
L0214: PRINT_RET       " seem interested."
L0215: RTRUE           
L0216: JE              Ge9,#16 [FALSE] L0219
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0217
       PRINT           "You aren't holding "
       CALL_2N         R0103 (L01)
       PRINT_RET       "."
L0217: JE              Gef,#02 [FALSE] L0218
       CALL_2N         R0104 (L01)
       PRINT           " "
       CALL_2N         R0011 (L01)
       PRINT_RET       " unimpressed."
L0218: RTRUE           
L0219: JE              Ge9,#17 [FALSE] L0237
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0222
       PRINT           "But you're already "
       TEST_ATTR       L01,#14 [FALSE] L0220
       PRINT           "on "
       JUMP            L0221
L0220: PRINT           "in "
L0221: CALL_2N         R0103 (L01)
       PRINT_RET       "."
L0222: JE              Gef,#02 [FALSE] L0225
       TEST_ATTR       L01,#1e [FALSE] L0223
       PRINT           "They're"
       JUMP            L0224
L0223: PRINT           "That's"
L0224: PRINT_RET       " not something you can enter."
L0225: JE              Gef,#03 [FALSE] L0226
       PRINT           "You can't get into the closed "
       CALL_2N         R0105 (L01)
       PRINT_RET       "."
L0226: JE              Gef,#04 [FALSE] L0227
       PRINT_PADDR     S079
       NEW_LINE        
       RTRUE           
L0227: JE              Gef,#05 [FALSE] L0230
       PRINT           "You get "
       TEST_ATTR       L01,#14 [FALSE] L0228
       PRINT           "onto "
       JUMP            L0229
L0228: PRINT           "into "
L0229: CALL_2N         R0103 (L01)
       PRINT_RET       "."
L0230: JE              Gef,#06 [FALSE] L0233
       PRINT           "(getting "
       TEST_ATTR       L01,#14 [FALSE] L0231
       PRINT           "off "
       JUMP            L0232
L0231: PRINT           "out of "
L0232: CALL_2N         R0103 (L01)
       PRINT_RET       ")"
L0233: JE              Gef,#07 [FALSE] L0236
       TEST_ATTR       L01,#14 [FALSE] L0234
       PRINT           "(getting onto "
       CALL_2N         R0103 (L01)
       PRINT_RET       ")
"
L0234: TEST_ATTR       L01,#04 [FALSE] L0235
       PRINT           "(getting into "
       CALL_2N         R0103 (L01)
       PRINT_RET       ")
"
L0235: PRINT           "(entering "
       CALL_2N         R0103 (L01)
       PRINT_RET       ")
"
L0236: RTRUE           
L0237: JE              Ge9,#18 [FALSE] L0238
       PRINT           "But you aren't on "
       CALL_2N         R0103 (L01)
       PRINT_RET       " at the moment."
L0238: JE              Ge9,#19 [FALSE] L0244
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0239
       PRINT_PADDR     S080
       NEW_LINE        
       RTRUE           
L0239: JE              Gef,#02 [FALSE] L0240
       PRINT           "You can't get out of the closed "
       CALL_2N         R0105 (L01)
       PRINT_RET       "."
L0240: JE              Gef,#03 [FALSE] L0243
       PRINT           "You get "
       TEST_ATTR       L01,#14 [FALSE] L0241
       PRINT           "off "
       JUMP            L0242
L0241: PRINT           "out of "
L0242: CALL_2N         R0103 (L01)
       PRINT_RET       "."
L0243: RTRUE           
L0244: JE              Ge9,#1a [FALSE] L0245
       PRINT_PADDR     S081
       NEW_LINE        
       RTRUE           
L0245: JE              Ge9,#1b [FALSE] L0255
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0248
       PRINT           "You'll have to get "
       TEST_ATTR       L01,#14 [FALSE] L0246
       PRINT           "off "
       JUMP            L0247
L0246: PRINT           "out of "
L0247: CALL_2N         R0103 (L01)
       PRINT_RET       " first."
L0248: JE              Gef,#02 [FALSE] L0249
       PRINT_RET       "You can't go that way."
L0249: JE              Gef,#03 [FALSE] L0250
       PRINT           "You are unable to climb "
       CALL_2N         R0103 (L01)
       PRINT_RET       "."
L0250: JE              Gef,#04 [FALSE] L0251
       PRINT           "You are unable to descend by "
       CALL_2N         R0103 (L01)
       PRINT_RET       "."
L0251: JE              Gef,#05 [FALSE] L0252
       PRINT           "You can't, since "
       CALL_2N         R0103 (L01)
       PRINT           " "
       CALL_2N         R0011 (L01)
       PRINT_RET       " in the way."
L0252: JE              Gef,#06 [FALSE] L0254
       PRINT           "You can't, since "
       CALL_2N         R0103 (L01)
       TEST_ATTR       L01,#1e [FALSE] L0253
       PRINT_RET       " lead nowhere."
L0253: PRINT_RET       " leads nowhere."
L0254: RTRUE           
L0255: JE              Ge9,#1c [FALSE] L0256
       PRINT_PADDR     S082
       NEW_LINE        
       RTRUE           
L0256: JE              Ge9,#1d [FALSE] L0257
       PRINT_PADDR     S083
       NEW_LINE        
       RTRUE           
L0257: JE              Ge9,#1e [FALSE] L0258
       PRINT_PADDR     S084
       NEW_LINE        
       RTRUE           
L0258: JE              Ge9,#1f [FALSE] L0272
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0259
       PRINT           " (on "
       CALL_2N         R0103 (L01)
       PRINT           ")"
       JUMP            L0271
L0259: JE              Gef,#02 [FALSE] L0260
       PRINT           " (in "
       CALL_2N         R0103 (L01)
       PRINT           ")"
       JUMP            L0271
L0260: JE              Gef,#03 [FALSE] L0261
       PRINT           " (as "
       PRINT_OBJ       L01
       PRINT           ")"
       JUMP            L0271
L0261: JE              Gef,#04 [FALSE] L0263
       PRINT           "
On "
       CALL_2N         R0103 (L01)
       ADD             #0008,#0010 -> -(SP)
       ADD             (SP)+,#0080 -> -(SP)
       ADD             (SP)+,#0040 -> -(SP)
       ADD             (SP)+,#0400 -> -(SP)
       ADD             (SP)+,#0800 -> -(SP)
       GET_CHILD       L01 -> -(SP) [FALSE] L0262
L0262: CALL_VN         R0122 ((SP)+,(SP)+)
       PRINT_RET       "."
L0263: JE              L01,G02 [TRUE] L0266
       TEST_ATTR       L01,#14 [FALSE] L0264
       PRINT           "
On "
       JUMP            L0265
L0264: PRINT           "
In "
L0265: CALL_2N         R0103 (L01)
       PRINT           " you"
       JUMP            L0267
L0266: PRINT           "
You"
L0267: PRINT           " can "
       JE              L00,#05 [FALSE] L0268
       PRINT           "also "
L0268: PRINT           "see "
       ADD             #0008,#0200 -> -(SP)
       ADD             (SP)+,#0010 -> -(SP)
       ADD             (SP)+,#0080 -> -(SP)
       ADD             (SP)+,#0040 -> -(SP)
       ADD             (SP)+,#0800 -> -(SP)
       GET_CHILD       L01 -> -(SP) [FALSE] L0269
L0269: CALL_VN         R0122 ((SP)+,(SP)+)
       JE              L01,G02 [TRUE] L0270
       PRINT_RET       "."
L0270: PRINT_RET       " here."
L0271: RTRUE           
L0272: JE              Ge9,#20 [FALSE] L0277
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0273
       PRINT_PADDR     S085
       NEW_LINE        
       RTRUE           
L0273: JE              Gef,#02 [FALSE] L0274
       PRINT           "You see nothing special about "
       CALL_2N         R0103 (L01)
       PRINT_RET       "."
L0274: JE              Gef,#03 [FALSE] L0276
       CALL_2N         R0104 (L01)
       PRINT           " "
       CALL_2N         R0011 (L01)
       PRINT           " currently switched "
       TEST_ATTR       L01,#0d [FALSE] L0275
       PRINT_RET       "on."
L0275: PRINT_RET       "off."
L0276: RTRUE           
L0277: JE              Ge9,#21 [FALSE] L0280
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0278
       PRINT_RET       "But it's dark."
L0278: JE              Gef,#02 [FALSE] L0279
       PRINT_RET       "You find nothing of interest."
L0279: RTRUE           
L0280: JE              Ge9,#22 [FALSE] L0290
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0281
       PRINT_RET       "But it's dark."
L0281: JE              Gef,#02 [FALSE] L0282
       PRINT           "There is nothing on "
       CALL_2N         R0103 (L01)
       PRINT_RET       "."
L0282: JE              Gef,#03 [FALSE] L0284
       PRINT           "On "
       CALL_2N         R0103 (L01)
       ADD             #0040,#0008 -> -(SP)
       ADD             (SP)+,#0400 -> -(SP)
       ADD             (SP)+,#0800 -> -(SP)
       GET_CHILD       L01 -> -(SP) [FALSE] L0283
L0283: CALL_VN         R0122 ((SP)+,(SP)+)
       PRINT_RET       "."
L0284: JE              Gef,#04 [FALSE] L0285
       PRINT_RET       "You find nothing of interest."
L0285: JE              Gef,#05 [FALSE] L0286
       PRINT           "You can't see inside, since "
       CALL_2N         R0103 (L01)
       PRINT           " "
       CALL_2N         R0011 (L01)
       PRINT_RET       " closed."
L0286: JE              Gef,#06 [FALSE] L0287
       CALL_2N         R0104 (L01)
       PRINT           " "
       CALL_2N         R0011 (L01)
       PRINT_RET       " empty."
L0287: JE              Gef,#07 [FALSE] L0289
       PRINT           "In "
       CALL_2N         R0103 (L01)
       ADD             #0040,#0008 -> -(SP)
       ADD             (SP)+,#0400 -> -(SP)
       ADD             (SP)+,#0800 -> -(SP)
       GET_CHILD       L01 -> -(SP) [FALSE] L0288
L0288: CALL_VN         R0122 ((SP)+,(SP)+)
       PRINT_RET       "."
L0289: RTRUE           
L0290: JE              Ge9,#23 [FALSE] L0299
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0293
       TEST_ATTR       L01,#1e [FALSE] L0291
       PRINT           "They don't "
       JUMP            L0292
L0291: PRINT           "That doesn't "
L0292: PRINT_PADDR     S086
       NEW_LINE        
       RTRUE           
L0293: JE              Gef,#02 [FALSE] L0294
       CALL_2N         R0013 (L01)
       PRINT_RET       " unlocked at the moment."
L0294: JE              Gef,#03 [FALSE] L0297
       TEST_ATTR       L01,#1e [FALSE] L0295
       PRINT           "Those don't "
       JUMP            L0296
L0295: PRINT           "That doesn't "
L0296: PRINT_RET       "seem to fit the lock."
L0297: JE              Gef,#04 [FALSE] L0298
       PRINT           "You unlock "
       CALL_2N         R0103 (L01)
       PRINT_RET       "."
L0298: RTRUE           
L0299: JE              Ge9,#24 [FALSE] L0309
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0302
       TEST_ATTR       L01,#1e [FALSE] L0300
       PRINT           "They don't "
       JUMP            L0301
L0300: PRINT           "That doesn't "
L0301: PRINT_PADDR     S087
       NEW_LINE        
       RTRUE           
L0302: JE              Gef,#02 [FALSE] L0303
       CALL_2N         R0013 (L01)
       PRINT_RET       " locked at the moment."
L0303: JE              Gef,#03 [FALSE] L0304
       PRINT           "First you'll have to close "
       CALL_2N         R0103 (L01)
       PRINT_RET       "."
L0304: JE              Gef,#04 [FALSE] L0307
       TEST_ATTR       L01,#1e [FALSE] L0305
       PRINT           "Those don't "
       JUMP            L0306
L0305: PRINT           "That doesn't "
L0306: PRINT_RET       "seem to fit the lock."
L0307: JE              Gef,#05 [FALSE] L0308
       PRINT           "You lock "
       CALL_2N         R0103 (L01)
       PRINT_RET       "."
L0308: RTRUE           
L0309: JE              Ge9,#25 [FALSE] L0313
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0310
       CALL_2N         R0013 (L01)
       PRINT_RET       " not something you can switch."
L0310: JE              Gef,#02 [FALSE] L0311
       CALL_2N         R0013 (L01)
       PRINT_RET       " already on."
L0311: JE              Gef,#03 [FALSE] L0312
       PRINT           "You switch "
       CALL_2N         R0103 (L01)
       PRINT_RET       " on."
L0312: RTRUE           
L0313: JE              Ge9,#26 [FALSE] L0317
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0314
       CALL_2N         R0013 (L01)
       PRINT_RET       " not something you can switch."
L0314: JE              Gef,#02 [FALSE] L0315
       CALL_2N         R0013 (L01)
       PRINT_RET       " already off."
L0315: JE              Gef,#03 [FALSE] L0316
       PRINT           "You switch "
       CALL_2N         R0103 (L01)
       PRINT_RET       " off."
L0316: RTRUE           
L0317: JE              Ge9,#27 [FALSE] L0327
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0318
       CALL_2N         R0013 (L01)
       PRINT_RET       " not something you can open."
L0318: JE              Gef,#02 [FALSE] L0321
       TEST_ATTR       L01,#1e [FALSE] L0319
       PRINT           "They seem "
       JUMP            L0320
L0319: PRINT           "It seems "
L0320: PRINT_RET       "to be locked."
L0321: JE              Gef,#03 [FALSE] L0322
       CALL_2N         R0013 (L01)
       PRINT_RET       " already open."
L0322: JE              Gef,#04 [FALSE] L0325
       PRINT           "You open "
       CALL_2N         R0103 (L01)
       PRINT           ", revealing "
       ADD             #0008,#0040 -> -(SP)
       ADD             (SP)+,#0800 -> -(SP)
       GET_CHILD       L01 -> -(SP) [FALSE] L0323
L0323: CALL_VS         R0122 ((SP)+,(SP)+) -> -(SP)
       JZ              (SP)+ [FALSE] L0324
       PRINT_RET       "nothing."
L0324: PRINT_RET       "."
L0325: JE              Gef,#05 [FALSE] L0326
       PRINT           "You open "
       CALL_2N         R0103 (L01)
       PRINT_RET       "."
L0326: RTRUE           
L0327: JE              Ge9,#28 [FALSE] L0331
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0328
       CALL_2N         R0013 (L01)
       PRINT_RET       " not something you can close."
L0328: JE              Gef,#02 [FALSE] L0329
       CALL_2N         R0013 (L01)
       PRINT_RET       " already closed."
L0329: JE              Gef,#03 [FALSE] L0330
       PRINT           "You close "
       CALL_2N         R0103 (L01)
       PRINT_RET       "."
L0330: RTRUE           
L0331: JE              Ge9,#29 [FALSE] L0334
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0332
       PRINT           "You're not wearing "
       CALL_2N         R0009 (L01)
       PRINT_RET       "."
L0332: JE              Gef,#02 [FALSE] L0333
       PRINT           "You take off "
       CALL_2N         R0103 (L01)
       PRINT_RET       "."
L0333: RTRUE           
L0334: JE              Ge9,#2a [FALSE] L0339
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0335
       PRINT           "You can't wear "
       CALL_2N         R0009 (L01)
       PRINT_RET       "!"
L0335: JE              Gef,#02 [FALSE] L0336
       PRINT           "You're not holding "
       CALL_2N         R0009 (L01)
       PRINT_RET       "!"
L0336: JE              Gef,#03 [FALSE] L0337
       PRINT           "You're already wearing "
       CALL_2N         R0009 (L01)
       PRINT_RET       "!"
L0337: JE              Gef,#04 [FALSE] L0338
       PRINT           "You put on "
       CALL_2N         R0103 (L01)
       PRINT_RET       "."
L0338: RTRUE           
L0339: JE              Ge9,#2b [FALSE] L0342
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0340
       CALL_2N         R0013 (L01)
       PRINT_RET       " plainly inedible."
L0340: JE              Gef,#02 [FALSE] L0341
       PRINT           "You eat "
       CALL_2N         R0103 (L01)
       PRINT_RET       ". Not bad."
L0341: RTRUE           
L0342: JE              Ge9,#2c,#2d [FALSE] L0343
       PRINT_RET       "That was a rhetorical question."
L0343: JE              Ge9,#2e [FALSE] L0344
       PRINT_PADDR     S088
       NEW_LINE        
       RTRUE           
L0344: JE              Ge9,#2f [FALSE] L0345
       PRINT_PADDR     S089
       NEW_LINE        
       RTRUE           
L0345: JE              Ge9,#30 [FALSE] L0346
       PRINT_PADDR     S090
       NEW_LINE        
       RTRUE           
L0346: JE              Ge9,#31 [FALSE] L0347
       PRINT_RET       "That seems unnecessary."
L0347: JE              Ge9,#32 [FALSE] L0348
       PRINT_RET       "Keep your mind on the game."
L0348: JE              Ge9,#33 [FALSE] L0349
       PRINT_RET       "What a good idea."
L0349: JE              Ge9,#34 [FALSE] L0350
       PRINT_RET       "You smell nothing unexpected."
L0350: JE              Ge9,#35 [FALSE] L0351
       PRINT_RET       "You hear nothing unexpected."
L0351: JE              Ge9,#36 [FALSE] L0352
       PRINT_RET       "You taste nothing unexpected."
L0352: JE              Ge9,#37 [FALSE] L0356
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0353
       PRINT_RET       "Keep your hands to yourself!"
L0353: JE              Gef,#02 [FALSE] L0354
       PRINT_RET       "You feel nothing unexpected."
L0354: JE              Gef,#03 [FALSE] L0355
       PRINT_RET       "If you think that'll help."
L0355: RTRUE           
L0356: JE              Ge9,#38 [FALSE] L0357
       PRINT_PADDR     S091
       NEW_LINE        
       RTRUE           
L0357: JE              Ge9,#39 [FALSE] L0358
       PRINT           "Cutting "
       CALL_2N         R0009 (L01)
       PRINT_RET       " up would achieve little."
L0358: JE              Ge9,#3a [FALSE] L0359
       PRINT_PADDR     S092
       NEW_LINE        
       RTRUE           
L0359: JE              Ge9,#3b,#3c [FALSE] L0360
       PRINT_PADDR     S093
       NEW_LINE        
       RTRUE           
L0360: JE              Ge9,#3d [FALSE] L0361
       PRINT_PADDR     S094
       NEW_LINE        
       RTRUE           
L0361: JE              Ge9,#3e [FALSE] L0362
       PRINT_PADDR     S095
       NEW_LINE        
       RTRUE           
L0362: JE              Ge9,#3f [FALSE] L0363
       PRINT_RET       "Oh, don't apologise."
L0363: JE              Ge9,#40 [FALSE] L0364
       PRINT_PADDR     S096
       NEW_LINE        
       RTRUE           
L0364: JE              Ge9,#41 [FALSE] L0365
       PRINT_RET       "Quite."
L0365: JE              Ge9,#42 [FALSE] L0366
       PRINT_PADDR     S097
       NEW_LINE        
       RTRUE           
L0366: JE              Ge9,#43 [FALSE] L0367
       PRINT_PADDR     S098
       NEW_LINE        
       RTRUE           
L0367: JE              Ge9,#44 [FALSE] L0368
       PRINT_PADDR     S099
       NEW_LINE        
       RTRUE           
L0368: JE              Ge9,#45 [FALSE] L0369
       PRINT           "You can't usefully blow "
       CALL_2N         R0009 (L01)
       PRINT_RET       "."
L0369: JE              Ge9,#46 [FALSE] L0370
       PRINT_RET       "You achieve nothing by this."
L0370: JE              Ge9,#47 [FALSE] L0371
       PRINT           "No, you can't set "
       CALL_2N         R0009 (L01)
       PRINT_RET       "."
L0371: JE              Ge9,#48 [FALSE] L0372
       PRINT           "No, you can't set "
       CALL_2N         R0009 (L01)
       PRINT_RET       " to anything."
L0372: JE              Ge9,#49 [FALSE] L0373
       PRINT_RET       "You wave, feeling foolish."
L0373: JE              Ge9,#4a [FALSE] L0376
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0374
       PRINT           "But you aren't holding "
       CALL_2N         R0009 (L01)
       PRINT_RET       "."
L0374: JE              Gef,#02 [FALSE] L0375
       PRINT           "You look ridiculous waving "
       CALL_2N         R0103 (L01)
       PRINT_RET       "."
L0375: RTRUE           
L0376: JE              Ge9,#4b,#4c,#4d [FALSE] L0383
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0379
       TEST_ATTR       L01,#1e [FALSE] L0377
       PRINT           "Those are "
       JUMP            L0378
L0377: PRINT           "It is "
L0378: PRINT_RET       "fixed in place."
L0379: JE              Gef,#02 [FALSE] L0380
       PRINT_RET       "You are unable to."
L0380: JE              Gef,#03 [FALSE] L0381
       PRINT_RET       "Nothing obvious happens."
L0381: JE              Gef,#04 [FALSE] L0382
       PRINT_PADDR     S100
       NEW_LINE        
       RTRUE           
L0382: RTRUE           
L0383: JE              Ge9,#4e [FALSE] L0387
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0384
       PRINT_PADDR     S101
       NEW_LINE        
       RTRUE           
L0384: JE              Gef,#02 [FALSE] L0385
       PRINT_RET       "That's not a direction."
L0385: JE              Gef,#03 [FALSE] L0386
       PRINT_RET       "Not that way you can't."
L0386: RTRUE           
L0387: JE              Ge9,#4f [FALSE] L0390
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0388
       PRINT_RET       "Keep your hands to yourself."
L0388: JE              Gef,#02 [FALSE] L0389
       PRINT_RET       "You achieve nothing by this."
L0389: RTRUE           
L0390: JE              Ge9,#50 [FALSE] L0393
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0391
       PRINT_RET       "Futile."
L0391: JE              Gef,#02 [FALSE] L0392
       PRINT_PADDR     S102
       NEW_LINE        
       RTRUE           
L0392: RTRUE           
L0393: JE              Ge9,#51 [FALSE] L0396
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0394
       PRINT_RET       "You talk to yourself a while."
L0394: JE              Gef,#02 [FALSE] L0395
       PRINT_RET       "This provokes no reaction."
L0395: RTRUE           
L0396: JE              Ge9,#52,#53 [FALSE] L0397
       PRINT_RET       "There is no reply."
L0397: JE              Ge9,#54 [FALSE] L0398
       PRINT_RET       "Nothing is on sale."
L0398: JE              Ge9,#55 [FALSE] L0399
       PRINT_RET       "Your singing is abominable."
L0399: JE              Ge9,#56 [FALSE] L0400
       PRINT_PADDR     S103
       NEW_LINE        
       RTRUE           
L0400: JE              Ge9,#57 [FALSE] L0401
       PRINT_RET       "Time passes."
L0401: JE              Ge9,#58 [FALSE] L0402
       PRINT_PADDR     S104
       NEW_LINE        
       RTRUE           
L0402: JE              Ge9,#59 [FALSE] L0403
       PRINT_PADDR     S105
       CALL_2N         R0103 (L01)
       PRINT_RET       "."
L0403: RTRUE           

Routine R0015, 0 locals

       CALL_VS         R0240 (#1007,#11) -> -(SP)
       RET_POPPED      

Routine R0016, 0 locals

       CALL_VS         R0240 (#1007,#12) -> -(SP)
       RET_POPPED      

Routine R0017, 0 locals

       CALL_VS         R0240 (#1007,#13) -> -(SP)
       RET_POPPED      

Routine R0018, 1 local

       JE              L00,#0f [FALSE] L0001
       STORE           G54,#01
       STORE           G55,#0f
       RTRUE           
L0001: LOADB           L00,#00 -> -(SP)
       AND             (SP)+,#0f -> G54
       ADD             L00,#01 -> -(SP)
       LOADW           (SP)+,#00 -> G55
       RTRUE           

Routine R0019, 2 locals

       STORE           L01,#00
L0001: JL              L01,#20 [FALSE] L0002
       STOREW          #2d83,L01,#0f
       STOREW          #2d03,L01,#01
       STOREW          #2d43,L01,#0f
       INC             L01
       JUMP            L0001
L0002: LOADB           L00,#01 -> -(SP)
       LOADB           L00,#00 -> -(SP)
       MUL             #0100,(SP)+ -> -(SP)
       ADD             (SP)+,(SP)+ -> G51
       AND             G51,#0400 -> -(SP)
       JZ              (SP)+ [FALSE] L0003
       PUSH            #00
       JUMP            L0004
L0003: PUSH            #01
L0004: PULL            G52
       AND             G51,#03ff -> G51
       DEC             L00
       STORE           G4d,#00
       STORE           L01,#00
L0005: ADD             L00,#03 -> L00
       LOADB           L00,#00 -> -(SP)
       JE              (SP)+,#0f [FALSE] L0006
       JUMP            L0008
L0006: STOREW          #2d83,L01,L00
       CALL_2N         R0018 (L00)
       JE              G54,#02 [TRUE] L0007
       INC             G4d
L0007: STOREW          #2d03,L01,G54
       STOREW          #2d43,L01,G55
       INC             L01
       JUMP            L0005
L0008: ADD             L00,#01 -> -(SP)
       RET_POPPED      

Routine R0020, 2 locals

       LOADB           L00,#01 -> -(SP)
       ADD             #02,(SP)+ -> -(SP)
       STOREB          L00,(SP)+,#00
       TOKENISE        L00,L01
       RTRUE           

Routine R0021, 1 local

       CALL_2N         R0023 (L00)
       RFALSE          

Routine R0022, 8 locals

       CALL_1N         R0092
L0001: STORE           L03,#00
L0002: JL              L03,#40 [FALSE] L0003
       LOADB           L00,L03 -> -(SP)
       STOREB          #3130,L03,(SP)+
       INC             L03
       JUMP            L0002
L0003: STOREB          L00,#00,#78
       STOREB          L01,#00,#40
       CALL_2N         R0240 (#1008)
       CALL_1N         R0400
       STORE           Gef,#00
       STORE           Gec,L00
       STOREB          Gec,#01,#00
       CALL_1N         R0099
       READ            Gec,L01 -> Gef
       LOADB           L01,#01 -> L02
       JZ              L02 [FALSE] L0004
       CALL_VN         R0240 (#1007,#0a)
       JUMP            L0001
L0004: LOADW           L01,#01 -> L04
       JE              L04,"oops","o","oops" [FALSE] L0005
       JUMP            L0016
L0005: JE              L04,"undo","undo","undo" [FALSE] L0012
       LOADB           #2fbc,#01 -> -(SP)
       JE              (SP)+,#01 [FALSE] L0012
       JE              G0a,#01 [FALSE] L0006
       CALL_VN         R0240 (#1007,#0b)
       JUMP            L0001
L0006: JZ              G07 [FALSE] L0007
       CALL_VN         R0240 (#1007,#06)
       JUMP            L0001
L0007: JE              G07,#01 [FALSE] L0008
       JUMP            L0010
L0008: JE              G08,#01 [FALSE] L0009
       CALL_VN         R0240 (#1007,#0c)
       JUMP            L0001
L0009: RESTORE_UNDO    -> L03
       JZ              L03 [FALSE] L0011
L0010: CALL_VN         R0240 (#1007,#07)
L0011: JUMP            L0001
L0012: SAVE_UNDO       -> L03
       STORE           G08,#00
       STORE           G07,#02
       JE              L03,#ffff [FALSE] L0013
       STORE           G07,#00
L0013: JZ              L03 [FALSE] L0014
       STORE           G07,#01
L0014: JE              L03,#02 [FALSE] L0015
       SET_TEXT_STYLE  BOLDFACE
       CALL_2N         R0105 (G02)
       PRINT           "
"
       SET_TEXT_STYLE  ROMAN
       CALL_VN         R0240 (#1007,#0d)
       STORE           G08,#01
       JUMP            L0001
L0015: RET             L02
L0016: JZ              G7c [FALSE] L0017
       CALL_VN         R0240 (#1007,#0e)
       JUMP            L0001
L0017: JE              L02,#01 [FALSE] L0018
       CALL_VN         R0240 (#1007,#0f)
       JUMP            L0001
L0018: JG              L02,#02 [FALSE] L0019
       CALL_VN         R0240 (#1007,#10)
       JUMP            L0001
L0019: STORE           L03,#00
L0020: JG              L03,#78 [TRUE] L0021
       LOADB           L00,L03 -> -(SP)
       STOREB          #2ffd,L03,(SP)+
       INC             L03
       JUMP            L0020
L0021: LOADB           L01,#09 -> L06
       LOADB           L01,#08 -> L07
       STORE           L03,#00
L0022: JL              L03,#40 [FALSE] L0023
       LOADB           #3130,L03 -> -(SP)
       STOREB          L00,L03,(SP)+
       INC             L03
       JUMP            L0022
L0023: CALL_VN         R0020 (L00,L01)
       MUL             #04,G7c -> -(SP)
       ADD             (SP)+,#01 -> -(SP)
       LOADB           L01,(SP)+ -> L04
       MUL             #04,G7c -> -(SP)
       LOADB           L01,(SP)+ -> L05
       STORE           L03,#00
L0024: JL              L03,L05 [FALSE] L0025
       ADD             L03,L04 -> -(SP)
       STOREB          L00,(SP)+,#20
       INC             L03
       JUMP            L0024
L0025: JL              L05,L07 [FALSE] L0028
       STORE           L03,#78
L0026: ADD             L04,L07 -> -(SP)
       JL              L03,(SP)+ [TRUE] L0027
       SUB             L03,L07 -> -(SP)
       ADD             (SP)+,L05 -> -(SP)
       LOADB           L00,(SP)+ -> -(SP)
       STOREB          L00,L03,(SP)+
       DEC             L03
       JUMP            L0026
L0027: SUB             L07,L05 -> -(SP)
       LOADB           L00,#01 -> -(SP)
       ADD             (SP)+,(SP)+ -> -(SP)
       STOREB          L00,#01,(SP)+
L0028: STORE           L03,#00
L0029: JL              L03,L07 [FALSE] L0030
       ADD             L03,L06 -> -(SP)
       LOADB           #2ffd,(SP)+ -> -(SP)
       ADD             L03,L04 -> -(SP)
       STOREB          L00,(SP)+,(SP)+
       INC             L03
       JUMP            L0029
L0030: CALL_VN         R0020 (L00,L01)
       LOADB           L01,#01 -> L02
       RET             L02

Routine R0023, 11 locals

       JE              G41,#01 [FALSE] L0003
       STORE           L05,#00
L0001: JL              L05,#08 [FALSE] L0002
       LOADW           #2c63,L05 -> -(SP)
       STOREW          L00,L05,(SP)+
       INC             L05
       JUMP            L0001
L0002: STORE           G41,#00
       RTRUE           
L0003: JE              G7e,#01 [FALSE] L0004
       STORE           G7e,#00
       CALL_VN         R0020 (#2f43,#2fbc)
       JUMP            L0005
L0004: CALL_VN         R0022 (#2f43,#2fbc)
L0005: STORE           G36,#01
       LOADB           #2fbc,#01 -> G78
       STORE           G77,#01
       CALL_1N         R0003
       CALL_VN         R0020 (#2f43,#2fbc)
       CALL_1N         R0401
       LOADB           #2fbc,#01 -> G78
       STORE           L07,#00
       STORE           G7a,#01
       STORE           G37,G14
       CALL_2S         R0024 (G14) -> G38
       STORE           G7b,#00
L0006: STORE           G6d,#00
       STORE           G51,#ffff
L0007: STORE           G77,G7a
       CALL_1S         R0057 -> G79
       JE              G79,#ffff [FALSE] L0008
       STORE           G45,#01
       JUMP            L0077
L0008: JE              G79,"g",S040 OR "again" [FALSE] L0009
       STORE           G79,S040 OR "again"
L0009: JE              G79,S040 OR "again" [FALSE] L0014
       JE              G37,G14 [TRUE] L0010
       CALL_VN         R0240 (#1007,#14)
       JUMP            L0004
L0010: LOADB           #30b7,#01 -> -(SP)
       JZ              (SP)+ [FALSE] L0011
       CALL_VN         R0240 (#1007,#15)
       JUMP            L0004
L0011: STORE           L05,#00
L0012: JL              L05,#78 [FALSE] L0013
       LOADB           #30b7,L05 -> -(SP)
       STOREB          #2f43,L05,(SP)+
       INC             L05
       JUMP            L0012
L0013: JUMP            L0005
L0014: JE              G79,S040 OR "again" [TRUE] L0016
       STORE           L05,#00
L0015: JL              L05,#78 [FALSE] L0016
       LOADB           #2f43,L05 -> -(SP)
       STOREB          #30b7,L05,(SP)+
       INC             L05
       JUMP            L0015
L0016: JZ              G7b [FALSE] L0021
       CALL_VS         R0086 (G37,#1c) -> L05
       JL              L05,#00 [FALSE] L0017
       STORE           G7b,G7a
       SUB             #00,L05 -> L05
L0017: JE              L05,#01 [FALSE] L0018
       STOREW          L00,#00,G2a
       STOREW          L00,#01,G2d
       STOREW          L00,#02,G2e
       RTRUE           
L0018: JZ              L05 [TRUE] L0019
       STORE           G79,L05
       DEC             G77
       DEC             G7a
       JUMP            L0020
L0019: STORE           G77,G7a
       CALL_1S         R0056 -> G79
L0020: JUMP            L0022
L0021: STORE           G7b,#00
L0022: JZ              G79 [TRUE] L0023
       LOADB           G79,#06 -> -(SP)
       AND             (SP)+,#01 -> -(SP)
       JZ              (SP)+ [FALSE] L0036
L0023: STORE           G77,G7a
       STORE           G5d,#00
       STORE           G56,#00
       CALL_VS         R0030 (#06,#00,#00) -> L09
       JE              L09,#2710 [FALSE] L0024
       JUMP            L0005
L0024: JZ              L09 [TRUE] L0025
       STOREW          L00,#00,#1b
       STOREW          L00,#01,#01
       STOREW          L00,#02,L09
       JUMP            L0104
L0025: JE              G37,G14 [FALSE] L0029
       STORE           L06,#02
L0026: JG              L06,G78 [TRUE] L0028
       CALL_1S         R0056 -> L05
       JE              L05,"comma," [FALSE] L0027
       JUMP            L0030
L0027: INC             L06
       JUMP            L0026
L0028: CALL_2S         R0403 (G79) -> G79
       JZ              G79 [TRUE] L0029
       JUMP            L0036
L0029: STORE           G45,#0c
       JUMP            L0077
L0030: SUB             G77,#01 -> L06
       JE              L06,#01 [FALSE] L0031
       CALL_VN         R0240 (#1007,#16)
       JUMP            L0004
L0031: STORE           G77,#01
       STORE           G58,#01
       STORE           G6c,#01
       CALL_VS         R0030 (G14,G38,#06) -> L09
       STORE           G6c,#00
       JE              L09,#2710 [FALSE] L0032
       JUMP            L0005
L0032: JZ              L09 [FALSE] L0033
       CALL_VN         R0240 (#1007,#17)
       JUMP            L0004
L0033: TEST_ATTR       L09,#00 [TRUE] L0034
       TEST_ATTR       L09,#16 [TRUE] L0034
       CALL_VN         R0240 (#1007,#18,L09)
       JUMP            L0004
L0034: JE              G77,L06 [TRUE] L0035
       CALL_VN         R0240 (#1007,#19)
       JUMP            L0004
L0035: CALL_2N         R0072 (L09)
       ADD             L06,#01 -> G7a
       STORE           G37,L09
       CALL_2S         R0024 (L09) -> G38
       JUMP            L0007
L0036: LOADB           G79,#06 -> -(SP)
       AND             (SP)+,#02 -> -(SP)
       DIV             (SP)+,#02 -> G39
       JE              G39,#01 [FALSE] L0037
       JE              G37,G14 [TRUE] L0037
       STORE           G45,#0c
       STORE           G39,#00
       JUMP            L0077
L0037: LOADB           G79,#07 -> -(SP)
       SUB             #ff,(SP)+ -> L05
       LOADW           #00,#07 -> -(SP)
       LOADW           (SP)+,L05 -> L01
       LOADB           L01,#00 -> -(SP)
       SUB             (SP)+,#01 -> L03
       STORE           G68,#ffff
       STORE           G69,#ffff
       STORE           G45,#01
       STORE           G46,#01
       ADD             L01,#01 -> L04
       STORE           L02,#00
L0038: JG              L02,L03 [TRUE] L0077
       STORE           L05,#00
L0039: JL              L05,#20 [FALSE] L0040
       STOREW          #2d83,L05,#0f
       STOREW          #2d03,L05,#01
       STOREW          #2d43,L05,#0f
       INC             L05
       JUMP            L0039
L0040: CALL_2S         R0019 (L04) -> L04
       STORE           G43,#00
       STORE           G4e,#00
       STORE           G49,#00
       STORE           G4a,#00
       STORE           G3c,#00
       STORE           G3d,#00
       STOREW          #2be3,#00,#00
       STORE           G5c,#00
       STORE           G44,#01
       ADD             G7a,#01 -> G77
       STORE           G53,#ffff
       STORE           G5d,#00
       STORE           L05,#00
       STORE           L0a,#00
       STORE           G47,#00
L0041: LOADW           #2d83,G47 -> -(SP)
       JE              (SP)+,#0f [TRUE] L0051
       STORE           G6d,#00
       LOADW           #2d03,G47 -> -(SP)
       JE              (SP)+,#02 [TRUE] L0042
       INC             L05
L0042: LOADW           #2d03,G47 -> -(SP)
       JE              (SP)+,#01 [FALSE] L0050
       LOADW           #2d43,G47 -> -(SP)
       JE              (SP)+,#02 [FALSE] L0043
       STORE           L0a,#01
L0043: LOADW           #2d43,G47 -> -(SP)
       JE              (SP)+,#04,#05 [FALSE] L0050
       JE              L05,#01 [FALSE] L0050
       INC             G47
       LOADW           #2d03,G47 -> -(SP)
       JE              (SP)+,#02 [FALSE] L0049
L0044: LOADW           #2d03,G47 -> -(SP)
       JE              (SP)+,#02 [FALSE] L0045
       INC             G47
       JUMP            L0044
L0045: LOADW           #2d03,G47 -> -(SP)
       JE              (SP)+,#01 [FALSE] L0049
       LOADW           #2d43,G47 -> -(SP)
       JZ              (SP)+ [FALSE] L0049
L0046: JG              G77,G78 [TRUE] L0049
       SUB             G47,#01 -> -(SP)
       LOADW           #2d43,(SP)+ -> -(SP)
       CALL_1S         R0056 -> -(SP)
       JE              (SP)+,(SP)+ [FALSE] L0048
       CALL_VS         R0030 (G38,G37,#00) -> L09
       JE              L09,#2710 [FALSE] L0047
       JUMP            L0005
L0047: JL              L09,#02 [TRUE] L0048
       STORE           G53,L09
L0048: JUMP            L0046
L0049: JUMP            L0051
L0050: INC             G47
       JUMP            L0041
L0051: STORE           G66,#00
       JZ              L0a [TRUE] L0052
       JE              G4d,#01 [FALSE] L0052
       JE              G51,#0f [FALSE] L0052
       STORE           G66,#01
L0052: STORE           G43,#00
       STORE           G4e,#00
       STORE           G49,#00
       STORE           G4a,#00
       STORE           G3c,#00
       STORE           G3d,#00
       STOREW          #2be3,#00,#00
       STORE           G44,#01
       ADD             G7a,#01 -> G77
       STORE           G47,#01
L0053: STOREW          #2c83,G47,#ffff
       STORE           G6d,#00
       SUB             G47,#01 -> -(SP)
       LOADW           #2d83,(SP)+ -> L08
       LOADW           #2d83,G47 -> G58
       JE              L08,#0f [TRUE] L0056
       STORE           G6c,#00
       SUB             G47,#01 -> -(SP)
       CALL_VS         R0029 (L00,(SP)+) -> L09
       STORE           G6c,#00
       JE              L09,#2710 [FALSE] L0054
       JUMP            L0005
L0054: JZ              L09 [FALSE] L0055
       JUMP            L0073
L0055: JUMP            L0072
L0056: JG              G77,G78 [TRUE] L0061
       CALL_1S         R0056 -> L09
       JE              L09,"then","then","then" [TRUE] L0057
       JE              L09,"comma," [FALSE] L0058
L0057: STORE           G7e,#01
       SUB             G77,#01 -> G7f
       JUMP            L0061
L0058: STORE           L0a,#00
L0059: JL              L0a,#20 [FALSE] L0060
       LOADW           #2c83,L0a -> -(SP)
       STOREW          #2cc3,L0a,(SP)+
       INC             L0a
       JUMP            L0059
L0060: STORE           G48,G47
       STORE           G44,#02
       JUMP            L0073
L0061: JL              G49,#01 [TRUE] L0062
       LOADW           L00,#02 -> -(SP)
       JZ              (SP)+ [FALSE] L0062
       LOADW           L00,#03 -> -(SP)
       CALL_2S         R0032 ((SP)+) -> L09
       JZ              L09 [TRUE] L0062
       STORE           G44,L09
       JUMP            L0073
L0062: JL              G49,#02 [TRUE] L0063
       LOADW           L00,#03 -> -(SP)
       JZ              (SP)+ [FALSE] L0063
       LOADW           L00,#02 -> -(SP)
       CALL_2S         R0032 ((SP)+) -> L09
       JZ              L09 [TRUE] L0063
       STORE           G44,L09
       JUMP            L0073
L0063: JE              G66,#02 [FALSE] L0064
       LOADW           L00,#02 -> -(SP)
       JE              (SP)+,G37 [FALSE] L0064
       STORE           G45,#11
       JUMP            L0077
L0064: STORE           G7c,#00
       JZ              G4e [TRUE] L0065
       PRINT           "("
       CALL_2N         R0036 (G4e)
       PRINT           ")
"
L0065: STOREW          L00,#00,G51
       STOREW          L00,#01,G49
       JZ              G52 [TRUE] L0066
       JE              G49,#02 [FALSE] L0066
       LOADW           L00,#02 -> L05
       LOADW           L00,#03 -> -(SP)
       STOREW          L00,#02,(SP)+
       STOREW          L00,#03,L05
       JE              G4a,#02 [FALSE] L0066
       STORE           L05,G4b
       STORE           G4b,G4c
       STORE           G4c,L05
L0066: JG              G49,#00 [FALSE] L0067
       LOADW           L00,#02 -> -(SP)
       JL              (SP)+,#02 [TRUE] L0067
       LOADW           L00,#02 -> -(SP)
       CALL_2N         R0072 ((SP)+)
L0067: JZ              G43 [TRUE] L0070
       JE              G37,G14 [FALSE] L0070
       STORE           G41,#01
       STORE           L05,#00
L0068: JL              L05,#08 [FALSE] L0069
       LOADW           L00,L05 -> -(SP)
       STOREW          #2c63,L05,(SP)+
       INC             L05
       JUMP            L0068
L0069: STOREW          L00,#00,#0f
       STOREW          L00,#01,#01
       STOREW          L00,#02,G43
       CALL_VN         R0240 (#1007,#1a,G43)
L0070: JE              G7e,#01 [FALSE] L0071
       STORE           G77,G7f
       JUMP            L0104
L0071: RTRUE           
L0072: INC             G47
       JUMP            L0053
L0073: JG              G44,G45 [FALSE] L0074
       STORE           G45,G44
L0074: JE              G44,#12 [TRUE] L0075
       JG              G44,G46 [FALSE] L0075
       STORE           G46,G44
L0075: JE              G66,#02 [FALSE] L0076
       JE              G44,#11 [FALSE] L0076
       JUMP            L0077
L0076: INC             L02
       JUMP            L0038
L0077: STORE           G44,G45
       JE              G37,G14 [TRUE] L0080
       JG              G7b,#00 [FALSE] L0078
       STORE           G7a,G7b
       JUMP            L0006
L0078: STORE           G77,G7a
       CALL_1S         R0056 -> G3c
       JE              G3c,"comma," [FALSE] L0079
       CALL_1S         R0056 -> G3c
       INC             G7a
L0079: CALL_2S         R0060 (G7a) -> G3d
       STOREW          L00,#00,#1009
       STOREW          L00,#01,#02
       STOREW          L00,#02,#01
       STORE           G4b,G3c
       STOREW          L00,#03,G37
       STORE           G3f,G7a
       SUB             G78,G3f -> -(SP)
       ADD             (SP)+,#01 -> G40
       RTRUE           
L0080: CALL_2S         R0405 (G44) -> -(SP)
       JZ              (SP)+ [TRUE] L0081
       JUMP            L0004
L0081: STORE           G68,G6a
       STORE           G69,G6b
       JE              G44,#01 [FALSE] L0082
       CALL_VN         R0240 (#1007,#1b)
       STORE           G7c,#01
L0082: JE              G44,#02 [FALSE] L0085
       CALL_VN         R0240 (#1007,#1c)
       STORE           L0a,#00
L0083: JL              L0a,#20 [FALSE] L0084
       LOADW           #2cc3,L0a -> -(SP)
       STOREW          #2c83,L0a,(SP)+
       INC             L0a
       JUMP            L0083
L0084: STORE           G47,G48
       CALL_2N         R0036 (#00)
       PRINT           ".
"
L0085: JE              G44,#03 [FALSE] L0086
       CALL_VN         R0240 (#1007,#1d)
L0086: JE              G44,#04 [FALSE] L0087
       CALL_VN         R0240 (#1007,#1e)
       STORE           G7c,G7d
L0087: JE              G44,#05 [FALSE] L0088
       CALL_VN         R0240 (#1007,#1f)
L0088: JE              G44,#06 [FALSE] L0089
       CALL_VN         R0240 (#1007,#20)
       STORE           G7c,G7d
L0089: JE              G44,#07 [FALSE] L0090
       CALL_VN         R0240 (#1007,#21)
L0090: JE              G44,#08 [FALSE] L0091
       CALL_VN         R0240 (#1007,#22)
L0091: JE              G44,#09 [FALSE] L0092
       CALL_VN         R0240 (#1007,#23)
L0092: JE              G44,#0a [FALSE] L0093
       CALL_VN         R0240 (#1007,#24)
L0093: JE              G44,#0b [FALSE] L0094
       CALL_VN         R0240 (#1007,#25)
L0094: JE              G44,#0c [FALSE] L0095
       CALL_VN         R0240 (#1007,#26)
L0095: JE              G44,#0d [FALSE] L0096
       CALL_VN         R0240 (#1007,#27)
L0096: JE              G44,#0e [FALSE] L0098
       JE              G69,#ffff [FALSE] L0097
       CALL_VN         R0240 (#1007,#23)
       JUMP            L0098
L0097: CALL_VN         R0240 (#1007,#28)
L0098: JE              G44,#0f [FALSE] L0099
       CALL_VN         R0240 (#1007,#29)
L0099: JE              G44,#10 [FALSE] L0100
       CALL_VN         R0240 (#1007,#2a,G5b)
L0100: JE              G44,#11 [FALSE] L0102
       JE              G5a,#64 [FALSE] L0101
       CALL_VN         R0240 (#1007,#2b)
       JUMP            L0102
L0101: CALL_VN         R0240 (#1007,#2c)
L0102: JE              G44,#12 [FALSE] L0103
       STORE           G6f,#03
       CALL_1S         G6e -> -(SP)
       JE              (SP)+,#ffff [FALSE] L0103
       STORE           G45,G46
       JUMP            L0077
L0103: JUMP            L0004
L0104: JG              G77,G78 [TRUE] RTRUE
       CALL_1S         R0056 -> L05
       JE              L05,"then","then","then" [TRUE] L0105
       JE              L05,"comma," [FALSE] L0112
L0105: JG              G77,G78 [FALSE] L0106
       STORE           G7e,#00
       RTRUE           
L0106: CALL_2S         R0058 (G7a) -> L05
       CALL_2S         R0058 (G77) -> L06
L0107: JL              L05,L06 [FALSE] L0108
       STOREB          L05,#00,#20
       INC             L05
       JUMP            L0107
L0108: CALL_1S         R0056 -> L05
       JE              L05,S040 OR "again","g",S040 OR "again" [FALSE] L0111
       SUB             G77,#02 -> -(SP)
       CALL_2S         R0058 ((SP)+) -> -(SP)
       SUB             (SP)+,#2f43 -> L05
       JG              G77,G78 [FALSE] L0109
       STORE           L06,#77
       JUMP            L0110
L0109: CALL_2S         R0058 (G77) -> -(SP)
       SUB             (SP)+,#2f43 -> L06
L0110: JL              L05,L06 [FALSE] L0111
       STOREB          #30b7,L05,#20
       INC             L05
       JUMP            L0110
L0111: CALL_VN         R0020 (#2f43,#2fbc)
       STORE           G7e,#01
       RTRUE           
L0112: STORE           G45,#02
       JUMP            L0077

Routine R0024, 2 locals

       GET_PARENT      L00 -> L01
L0001: GET_PARENT      L01 -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       TEST_ATTR       L01,#17 [TRUE] L0002
       TEST_ATTR       L01,#14 [TRUE] L0002
       TEST_ATTR       L01,#04 [FALSE] L0003
       TEST_ATTR       L01,#0e [FALSE] L0003
L0002: GET_PARENT      L01 -> L01
       JUMP            L0001
L0003: JE              L00,G14 [FALSE] L0004
       JE              G02,#13 [FALSE] L0004
       RET             #13
L0004: RET             L01

Routine R0025, 0 locals

       STORE           G5d,#00
       STORE           G5e,#00
       STORE           G5f,#00
       STORE           G60,#00
       STORE           G63,#00
       STORE           G61,#00
       STORE           G62,#0fff
       STORE           G64,#00
       RTRUE           

Routine R0026, 7 locals

       CALL_1N         R0025
       JG              G77,G78 [FALSE] L0001
       RFALSE          
L0001: STORE           L03,#01
L0002: JZ              L03 [TRUE] L0019
       CALL_1S         R0057 -> L01
       STORE           L03,#00
       STORE           L02,#01
       JUMP            L0004
L0003: ADD             L02,#04 -> L02
L0004: LOADW           #31a2,#00 -> -(SP)
       JG              L02,(SP)+ [TRUE] L0011
       LOADW           #31a2,L02 -> -(SP)
       JE              L01,(SP)+ [FALSE] L0010
       STORE           L03,#01
       ADD             L02,#02 -> -(SP)
       LOADW           #31a2,(SP)+ -> L05
       JE              L05,#0101 [TRUE] L0005
       STORE           G5d,#01
L0005: STORE           G63,#01
       ADD             L02,#01 -> -(SP)
       LOADW           #31a2,(SP)+ -> -(SP)
       AND             G62,(SP)+ -> G62
       JE              L05,#0100 [FALSE] L0008
       ADD             L02,#03 -> -(SP)
       LOADW           #31a2,(SP)+ -> L04
       STORE           Gef,L04
       JE              Gef,#00 [FALSE] L0006
       OR              G5e,#02 -> G5e
       JUMP            L0008
L0006: JE              Gef,#01 [FALSE] L0007
       OR              G5e,#04 -> G5e
       JUMP            L0008
L0007: CALL_2S         R0069 (L04) -> G61
       JE              G61,#ffff [FALSE] L0008
       STORE           G61,#15
L0008: JE              L05,#09 [FALSE] L0009
       OR              G5e,#10 -> G5e
L0009: JE              L05,#fff7 [FALSE] L0010
       OR              G5e,#20 -> G5e
L0010: JUMP            L0003
L0011: JE              L01,"another","other","other" [FALSE] L0012
       STORE           G5d,#01
       STORE           L03,#01
       OR              G5e,#01 -> G5e
L0012: JE              L01,"all","each","every" [TRUE] L0013
       JE              L01,"everythin","both" [FALSE] L0015
L0013: STORE           G5d,#01
       STORE           L03,#01
       STORE           G5f,#64
       JE              G66,#01 [FALSE] L0014
       STORE           G66,#02
L0014: OR              G5e,#08 -> G5e
L0015: JZ              G65 [TRUE] L0017
       JZ              L00 [TRUE] L0017
       CALL_2S         R0107 (L01) -> L06
       JE              L06,#01 [FALSE] L0016
       STORE           G5d,#01
       STORE           L03,#01
L0016: JG              L06,#01 [FALSE] L0017
       STORE           G60,#01
       STORE           G5d,#01
       STORE           L03,#01
       STORE           G5f,L06
       SUB             G77,#01 -> G64
       OR              G5e,#08 -> G5e
L0017: JE              L03,#01 [FALSE] L0018
       CALL_1S         R0057 -> -(SP)
       PULL            Gef
       JE              Gef,"of","of","of" [TRUE] L0018
       JE              Gef,"of" [TRUE] L0018
       DEC             G77
L0018: JUMP            L0002
L0019: DEC             G77
       JG              G5f,#00 [FALSE] L0020
       JZ              L00 [FALSE] L0020
       RET             #07
L0020: RFALSE          

Routine R0027, 1 local

       TEST_ATTR       L00,#00 [TRUE] RTRUE
       TEST_ATTR       L00,#16 [FALSE] RFALSE
       JE              G51,#53,#52,#51 [TRUE] RTRUE
       JE              G51,#5a [TRUE] RTRUE
       RFALSE          

Routine R0028, 2 locals

       LOADW           #2d43,L01 -> -(SP)
       JE              (SP)+,L00 [FALSE] L0001
       RET             L00
L0001: LOADW           #2d83,L01 -> -(SP)
       LOADB           (SP)+,#00 -> -(SP)
       AND             (SP)+,#20 -> -(SP)
       JZ              (SP)+ [FALSE] L0002
       RET             #ffff
L0002: LOADW           #2d43,L01 -> -(SP)
       JE              (SP)+,L00 [FALSE] L0003
       RET             L00
L0003: INC             L01
       LOADW           #2d83,L01 -> -(SP)
       JE              (SP)+,#0f [TRUE] L0004
       LOADW           #2d83,L01 -> -(SP)
       LOADB           (SP)+,#00 -> -(SP)
       AND             (SP)+,#10 -> -(SP)
       JZ              (SP)+ [FALSE] L0002
L0004: RET             #ffff

Routine R0029, 13 locals

       LOADW           #2d83,L01 -> L02
       CALL_2N         R0018 (L02)
       STORE           G56,#00
       STORE           G36,#01
       STORE           Gef,G54
       JE              Gef,#01 [FALSE] L0020
       STORE           Gef,G55
       JE              Gef,#07 [FALSE] L0004
       CALL_2S         R0060 (G77) -> L03
       CALL_1S         R0056 -> G3c
       JE              L03,#fc18 [FALSE] L0001
       STORE           L03,G3c
L0001: STORE           G3d,L03
       JZ              G4a [FALSE] L0002
       STORE           G4b,L03
       JUMP            L0003
L0002: STORE           G4c,L03
L0003: INC             G4a
       STORE           L09,#01
       JUMP            L0077
L0004: JE              Gef,#08 [FALSE] L0008
       PUSH            G77
       INC             G77
       CALL_2S         R0060 ((SP)+) -> L03
       JE              L03,#fc18 [FALSE] L0005
       STORE           G44,#03
       RFALSE          
L0005: PUSH            G4a
       INC             G4a
       JZ              (SP)+ [FALSE] L0006
       STORE           G4b,L03
       JUMP            L0007
L0006: STORE           G4c,L03
L0007: STORE           L09,#01
       JUMP            L0077
L0008: JE              Gef,#06 [FALSE] L0011
       JE              G51,#52,#53,#5a [TRUE] L0009
       JE              G51,#51 [FALSE] L0010
L0009: STORE           G6c,#01
L0010: JUMP            L0019
L0011: JE              Gef,#09 [FALSE] L0019
       STORE           G3f,G77
       ADD             L01,#01 -> -(SP)
       LOADW           #2d03,(SP)+ -> -(SP)
       JE              (SP)+,#02 [TRUE] L0012
       ADD             L01,#01 -> -(SP)
       LOADW           #2d83,(SP)+ -> -(SP)
       JE              (SP)+,#0f [TRUE] L0012
       CALL_2N         R0112 (#0d)
L0012: CALL_1S         R0057 -> L04
       JE              L04,#ffff [TRUE] L0013
       ADD             L01,#01 -> -(SP)
       CALL_VS         R0028 (L04,(SP)+) -> -(SP)
       JE              (SP)+,#ffff [TRUE] L0012
L0013: DEC             G77
       SUB             G77,G3f -> G40
       JZ              G40 [FALSE] L0014
       RTRUE           
L0014: JE              G51,#53,#52,#51 [FALSE] L0018
       STORE           L04,G77
       STORE           G77,G3f
       CALL_1S         R0056 -> G3e
       JE              G3e,"the" [FALSE] L0015
       JG              G40,#01 [FALSE] L0015
       CALL_1S         R0056 -> G3e
L0015: STORE           G77,L04
       PUSH            G4a
       INC             G4a
       JZ              (SP)+ [FALSE] L0016
       STORE           G4b,G3e
       JUMP            L0017
L0016: STORE           G4c,G3e
L0017: STORE           L09,#01
       JUMP            L0077
L0018: RTRUE           
L0019: JUMP            L0039
L0020: JE              Gef,#02 [FALSE] L0027
       LOADB           L02,#00 -> -(SP)
       AND             (SP)+,#10 -> -(SP)
       JZ              (SP)+ [TRUE] L0021
       RTRUE           
L0021: JG              G77,G78 [FALSE] L0024
       JZ              G4e [FALSE] L0022
       JL              G49,G4d [FALSE] L0022
       STORE           G4e,G47
       STORE           G4f,L02
       CALL_2S         R0063 (G55) -> -(SP)
       ADD             #2710,(SP)+ -> -(SP)
       STOREW          #2c83,G47,(SP)+
L0022: JZ              G4e [FALSE] L0023
       RFALSE          
L0023: CALL_2S         R0063 (G55) -> -(SP)
       ADD             #2710,(SP)+ -> -(SP)
       STOREW          #2c83,G47,(SP)+
       RTRUE           
L0024: CALL_1S         R0056 -> L04
       CALL_2S         R0063 (L04) -> -(SP)
       ADD             #2710,(SP)+ -> -(SP)
       STOREW          #2c83,G47,(SP)+
       JE              L04,G55 [FALSE] L0025
       RTRUE           
L0025: CALL_VS         R0028 (L04,L01) -> -(SP)
       JE              (SP)+,#ffff [TRUE] L0026
       RTRUE           
L0026: RFALSE          
L0027: JE              Gef,#06 [FALSE] L0034
       CALL_1S         G55 -> L03
       JL              L03,#ff38 [FALSE] L0028
       ADD             L03,#0100 -> G55
       JUMP            L0039
L0028: JL              L03,#00 [TRUE] RFALSE
       JZ              L03 [FALSE] L0029
       DEC             G4d
       RTRUE           
L0029: JE              L03,#01 [FALSE] L0032
       JZ              G4a [FALSE] L0030
       STORE           G4b,G3e
       JUMP            L0031
L0030: STORE           G4c,G3e
L0031: INC             G4a
L0032: JE              L03,#2710 [FALSE] L0033
       RET             L03
L0033: STORE           L09,L03
       JUMP            L0077
L0034: JE              Gef,#05 [FALSE] L0037
       STORE           G6d,G55
       STORE           G6f,#01
       CALL_1S         G6d -> L03
       JE              L03,#01 [FALSE] L0035
       STORE           G55,#02
       JUMP            L0036
L0035: STORE           G55,#00
L0036: JUMP            L0039
L0037: JE              Gef,#04 [FALSE] L0038
       ADD             #01,G55 -> G56
       STORE           G55,#00
       JUMP            L0039
L0038: JE              Gef,#03 [FALSE] L0039
       STORE           G56,G55
       STORE           G55,#00
L0039: STORE           L02,G55
       STORE           L0c,#00
       JE              L02,#02,#03,#04 [TRUE] L0040
       JE              L02,#05 [FALSE] L0041
L0040: STORE           L0c,#01
L0041: STORE           L0b,#00
       STORE           L08,#01
       STORE           G50,#00
L0042: CALL_1S         R0056 -> L04
       DEC             G77
       STORE           G68,#ffff
       STORE           G69,#ffff
       CALL_2S         R0069 (L04) -> L03
       JZ              L03 [TRUE] L0047
       STORE           G68,L04
       STORE           G69,L03
       JE              L03,#ffff [FALSE] L0047
       STORE           L03,#01
       JUMP            L0044
L0043: ADD             L03,#04 -> L03
L0044: JG              L03,#31a2 [TRUE] L0046
       LOADW           #31a2,L03 -> -(SP)
       JE              L04,(SP)+ [FALSE] L0045
       JUMP            L0047
L0045: JUMP            L0043
L0046: STORE           G6a,G68
       STORE           G6b,G69
       STORE           G44,#09
       RFALSE          
L0047: JE              L04,"me","myself","self" [FALSE] L0048
       STORE           G68,L04
       STORE           G69,G14
L0048: STORE           G65,#01
       STORE           L0a,G77
L0049: CALL_2S         R0026 (L0c) -> L03
       JZ              L03 [TRUE] L0050
       STORE           G44,L03
       RFALSE          
L0050: STORE           G7c,G77
       JE              L02,#01 [TRUE] L0065
       LOADW           #2be3,#00 -> L05
       CALL_VS         R0030 (G38,G37,L02) -> L03
       JE              L03,#2710 [FALSE] L0051
       RET             L03
L0051: JZ              L03 [FALSE] L0053
       JZ              G63 [TRUE] L0052
       CALL_1N         R0025
       STORE           G77,L0a
       JUMP            L0050
L0052: CALL_1S         R0037 -> G44
       JUMP            L0080
L0053: JE              L03,#01 [FALSE] L0059
       JZ              L0b [FALSE] L0054
       STORE           L0b,#01
       JUMP            L0058
L0054: LOADW           #2be3,#00 -> L07
       STOREW          #2be3,#00,L05
       ADD             L05,#01 -> L06
L0055: JG              L06,L07 [TRUE] L0058
       JZ              L08 [TRUE] L0056
       LOADW           #2be3,L06 -> -(SP)
       CALL_2N         R0038 ((SP)+)
       JUMP            L0057
L0056: LOADW           #2be3,L06 -> -(SP)
       CALL_2N         R0039 ((SP)+)
L0057: INC             L06
       JUMP            L0055
L0058: JUMP            L0064
L0059: JZ              G75 [FALSE] L0060
       JZ              G63 [TRUE] L0060
       CALL_1N         R0025
       STORE           G77,L0a
       JUMP            L0050
L0060: JE              L02,#06 [FALSE] L0061
       CALL_2S         R0027 (L03) -> -(SP)
       JZ              (SP)+ [FALSE] L0061
       STORE           G44,#0b
       JUMP            L0080
L0061: JZ              L0b [FALSE] L0062
       STORE           L09,L03
       JUMP            L0064
L0062: JZ              L08 [TRUE] L0063
       CALL_2N         R0038 (L03)
       JUMP            L0064
L0063: CALL_2N         R0039 (L03)
L0064: JUMP            L0071
L0065: CALL_VS         R0030 (G37,G38,L02) -> L03
       JE              L03,#2710 [FALSE] L0066
       RET             L03
L0066: JZ              L03 [FALSE] L0068
       JZ              G63 [TRUE] L0067
       CALL_1N         R0025
       STORE           G77,L0a
       JUMP            L0050
L0067: CALL_1S         R0037 -> G44
       RET             L03
L0068: GET_PARENT      L03 -> L04
       JE              L04,G37 [TRUE] L0070
       JE              G41,#01 [FALSE] L0069
       STORE           G7d,G7c
       STORE           G44,#06
       JUMP            L0080
L0069: STORE           G43,L03
L0070: STORE           L09,L03
L0071: ADD             G7c,G75 -> G77
       CALL_1S         R0056 -> L04
       JE              L04,"and","and","and" [TRUE] L0072
       JE              L04,"but","except","but" [TRUE] L0072
       JE              L04,"comma," [FALSE] L0076
L0072: JZ              L0c [FALSE] L0073
       STORE           G44,#07
       JUMP            L0080
L0073: JE              L04,"but","except","but" [FALSE] L0074
       SUB             #01,L08 -> L08
L0074: JZ              L0b [FALSE] L0075
       STOREW          #2be3,#00,#01
       STOREW          #2be3,#01,L09
       STORE           L0b,#01
L0075: STORE           G50,#01
       STORE           G4e,#00
       JUMP            L0042
L0076: DEC             G77
L0077: JZ              L0b [TRUE] L0078
       STORE           L09,#00
       STORE           G5c,L02
       JUMP            L0079
L0078: JE              G5d,#01 [FALSE] L0079
       AND             G5e,#08 -> -(SP)
       JZ              (SP)+ [TRUE] L0079
       JL              G5f,#64 [FALSE] L0079
       JG              G5f,#01 [FALSE] L0079
       STORE           G5b,#01
       STORE           G5a,G5f
       STORE           G44,#10
       JUMP            L0080
L0079: ADD             G49,#02 -> -(SP)
       STOREW          L00,(SP)+,L09
       INC             G49
       STOREW          #2c83,G47,L09
       RTRUE           
L0080: JZ              G65 [TRUE] L0081
       JE              G60,#01 [FALSE] L0081
       STORE           G65,#00
       STORE           G77,L0a
       JUMP            L0049
L0081: RFALSE          

Routine R0030, 10 locals

       STORE           G75,#00
       STORE           G73,#00
       STORE           G76,G77
       STORE           G72,#00
       CALL_VN         R0043 (L00,L01,L02)
       ADD             G76,G75 -> G77
       JZ              G73 [FALSE] L0001
       INC             G77
       RFALSE          
L0001: JG              G76,G78 [TRUE] L0003
       JE              G73,#01 [FALSE] L0002
       LOADW           #2dc3,#00 -> L04
       RET             L04
L0002: JG              G77,G78 [TRUE] L0003
       CALL_1S         R0056 -> L04
       DEC             G77
       JE              L04,"and","and","and" [TRUE] L0003
       JE              L04,"comma,","then","then" [TRUE] L0003
       JE              L04,"then","but","except" [TRUE] L0003
       JE              L04,"but" [TRUE] L0003
       JE              G58,#0f [TRUE] RFALSE
L0003: STORE           G74,#00
       JE              G73,#01 [FALSE] L0004
       LOADW           #2dc3,#00 -> L04
L0004: JG              G73,#01 [FALSE] L0005
       CALL_2S         R0031 (L02) -> L04
       JE              L04,#ffff [TRUE] RFALSE
       JE              L04,#01 [TRUE] RTRUE
L0005: JZ              L04 [TRUE] L0008
       JZ              G50 [TRUE] L0006
       RET             L04
L0006: JZ              G4e [FALSE] L0007
       STORE           G4e,G47
L0007: STOREW          #2c83,G47,L04
       RET             L04
L0008: JG              G76,G78 [FALSE] L0009
       JUMP            L0035
L0009: JE              L02,#06 [FALSE] L0010
       CALL_VN         R0240 (#1007,#2d)
       JUMP            L0011
L0010: CALL_VN         R0240 (#1007,#2e)
L0011: STORE           L05,G74
       STORE           L09,#00
       STORE           L04,#01
L0012: JG              L04,G74 [TRUE] L0019
L0013: LOADW           #2e43,L09 -> -(SP)
       JE              (SP)+,L04 [TRUE] L0014
       SUB             #00,L04 -> -(SP)
       LOADW           #2e43,L09 -> -(SP)
       JE              (SP)+,(SP)+ [TRUE] L0014
       INC             L09
       JUMP            L0013
L0014: LOADW           #2dc3,L09 -> L06
       LOADW           #2e43,L09 -> -(SP)
       JG              (SP)+,#00 [FALSE] L0015
       CALL_2N         R0103 (L06)
       JUMP            L0016
L0015: CALL_2N         R0102 (L06)
L0016: SUB             L05,#01 -> -(SP)
       JL              L04,(SP)+ [FALSE] L0017
       PRINT           ", "
L0017: SUB             L05,#01 -> -(SP)
       JE              L04,(SP)+ [FALSE] L0018
       PRINT_PADDR     S034
L0018: INC             L04
       JUMP            L0012
L0019: PRINT           "?
"
L0020: STORE           L04,#02
L0021: JL              L04,#78 [FALSE] L0022
       STOREB          #2ffd,L04,#20
       INC             L04
       JUMP            L0021
L0022: CALL_VS         R0022 (#2ffd,#3076) -> L08
       LOADW           #3076,#01 -> L03
       JE              L03,"all","each","every" [TRUE] L0023
       JE              L03,"everythin","both" [FALSE] L0028
L0023: JE              L02,#02,#03,#04 [TRUE] L0024
       JE              L02,#05 [FALSE] L0027
L0024: LOADW           #2be3,#00 -> L07
       STORE           L04,#00
L0025: JL              L04,G73 [FALSE] L0026
       ADD             L07,L04 -> -(SP)
       JL              (SP)+,#3f [FALSE] L0026
       LOADW           #2dc3,L04 -> L06
       ADD             L04,#01 -> -(SP)
       ADD             (SP)+,L07 -> -(SP)
       STOREW          #2be3,(SP)+,L06
       INC             L04
       JUMP            L0025
L0026: ADD             L04,L07 -> -(SP)
       STOREW          #2be3,#00,(SP)+
       RTRUE           
L0027: CALL_VN         R0240 (#1007,#2f)
       JUMP            L0020
L0028: JZ              L03 [TRUE] L0029
       LOADB           L03,#06 -> L05
       AND             L05,#01 -> -(SP)
       JE              #00,(SP)+ [TRUE] L0029
       JE              L03,"long","short","normal" [TRUE] L0029
       JE              L03,"brief","full","verbose" [TRUE] L0029
       CALL_VN         R0065 (#2f43,#2ffd)
       RET             #2710
L0029: CALL_2S         R0058 (G76) -> -(SP)
       SUB             (SP)+,#2f43 -> L06
       LOADB           #2ffd,#01 -> -(SP)
       ADD             (SP)+,#01 -> L07
       LOADB           #2f43,#00 -> -(SP)
       ADD             #2f43,(SP)+ -> -(SP)
       SUB             (SP)+,#01 -> L05
L0030: ADD             #2f43,L06 -> -(SP)
       ADD             (SP)+,L07 -> -(SP)
       JL              L05,(SP)+ [TRUE] L0031
       SUB             L05,L07 -> -(SP)
       LOADB           #00,(SP)+ -> -(SP)
       STOREB          L05,#00,(SP)+
       DEC             L05
       JUMP            L0030
L0031: STORE           L04,#00
L0032: JL              L04,L07 [FALSE] L0033
       ADD             #02,L04 -> -(SP)
       LOADB           #2ffd,(SP)+ -> -(SP)
       ADD             L06,L04 -> -(SP)
       STOREB          #2f43,(SP)+,(SP)+
       INC             L04
       JUMP            L0032
L0033: ADD             L06,L07 -> -(SP)
       SUB             (SP)+,#01 -> -(SP)
       STOREB          #2f43,(SP)+,#20
       LOADB           #2f43,#01 -> -(SP)
       ADD             (SP)+,L07 -> -(SP)
       STOREB          #2f43,#01,(SP)+
       LOADB           #2f43,#00 -> -(SP)
       SUB             (SP)+,#01 -> -(SP)
       LOADB           #2f43,#01 -> -(SP)
       JL              (SP)+,(SP)+ [TRUE] L0034
       LOADB           #2f43,#00 -> -(SP)
       STOREB          #2f43,#01,(SP)+
L0034: RET             #2710
L0035: JE              L02,#06 [FALSE] L0036
       CALL_VN         R0240 (#1007,#30)
       JUMP            L0037
L0036: CALL_VN         R0240 (#1007,#31)
L0037: STORE           L04,#02
L0038: JL              L04,#78 [FALSE] L0039
       STOREB          #2ffd,L04,#20
       INC             L04
       JUMP            L0038
L0039: CALL_VS         R0022 (#2ffd,#3076) -> L08
       LOADW           #3076,#01 -> L03
       JZ              L03 [TRUE] L0040
       LOADB           L03,#06 -> L05
       AND             L05,#01 -> -(SP)
       JE              #00,(SP)+ [TRUE] L0040
       CALL_VN         R0065 (#2f43,#2ffd)
       RET             #2710
L0040: JZ              G4e [TRUE] L0054
       STORE           L05,G4e
L0041: JL              L05,G47 [FALSE] L0054
       LOADW           #2c83,L05 -> -(SP)
       JE              (SP)+,#ffff [FALSE] L0042
       JUMP            L0053
L0042: LOADB           #2f43,#01 -> -(SP)
       ADD             #02,(SP)+ -> L04
       STORE           Gef,#2f43
       STORE           Gee,#01
       LOADB           Gef,Gee -> Ged
       INC             Ged
       STOREB          Gef,Gee,Ged
       PUSH            L04
       INC             L04
       STOREB          #2f43,(SP)+,#20
       JL              G32,#05 [TRUE] L0043
       PRINT_PADDR     S106
       LOADW           #2c83,L05 -> -(SP)
       PRINT_NUM       (SP)+
       PRINT           "]
"
L0043: STOREW          #3076,#01,#00
       LOADW           #2c83,L05 -> -(SP)
       JL              (SP)+,#02 [TRUE] L0049
       LOADW           #2c83,L05 -> -(SP)
       JL              (SP)+,#2710 [FALSE] L0049
       LOADW           #2c83,L05 -> -(SP)
       CALL_2N         R0072 ((SP)+)
       STORE           L06,#01
       JUMP            L0045
L0044: ADD             L06,#03 -> L06
L0045: LOADW           #3188,#00 -> -(SP)
       JG              L06,(SP)+ [TRUE] L0048
       ADD             L06,#02 -> -(SP)
       LOADW           #3188,(SP)+ -> -(SP)
       LOADW           #2c83,L05 -> -(SP)
       JE              (SP)+,(SP)+ [FALSE] L0047
       LOADW           #3188,L06 -> -(SP)
       STOREW          #3076,#01,(SP)+
       JL              G32,#05 [TRUE] L0046
       PRINT           "[Using pronoun '"
       LOADW           #3076,#01 -> -(SP)
       PRINT_ADDR      (SP)+
       PRINT           "']
"
L0046: JUMP            L0048
L0047: JUMP            L0044
L0048: JUMP            L0050
L0049: LOADW           #2c83,L05 -> -(SP)
       SUB             (SP)+,#2710 -> -(SP)
       CALL_2S         R0064 ((SP)+) -> -(SP)
       STOREW          #3076,#01,(SP)+
       JL              G32,#05 [TRUE] L0050
       PRINT           "[Using preposition '"
       LOADW           #3076,#01 -> -(SP)
       PRINT_ADDR      (SP)+
       PRINT           "']
"
L0050: LOADW           #3076,#01 -> -(SP)
       JZ              (SP)+ [TRUE] L0053
       ADD             #2f43,L04 -> L06
       OUTPUT_STREAM   REDIRECT_ENABLE,L06
       LOADW           #3076,#01 -> -(SP)
       PRINT_ADDR      (SP)+
       OUTPUT_STREAM   #fffd
       LOADW           L06,#00 -> L06
       STORE           L07,L04
L0051: ADD             L04,L06 -> -(SP)
       JL              L07,(SP)+ [FALSE] L0052
       ADD             L07,#02 -> -(SP)
       LOADB           #2f43,(SP)+ -> -(SP)
       STOREB          #2f43,L07,(SP)+
       INC             L07
       JUMP            L0051
L0052: ADD             L04,L06 -> L04
       SUB             L04,#02 -> -(SP)
       STOREB          #2f43,#01,(SP)+
L0053: INC             L05
       JUMP            L0041
L0054: LOADB           #2f43,#01 -> -(SP)
       ADD             #02,(SP)+ -> L04
       STORE           Gef,#2f43
       STORE           Gee,#01
       LOADB           Gef,Gee -> Ged
       INC             Ged
       STOREB          Gef,Gee,Ged
       PUSH            L04
       INC             L04
       STOREB          #2f43,(SP)+,#20
       STORE           L05,#00
       JUMP            L0056
L0055: INC             L04
       INC             L05
L0056: LOADB           #2ffd,#01 -> -(SP)
       JL              L05,(SP)+ [FALSE] L0058
       ADD             L05,#02 -> -(SP)
       LOADB           #2ffd,(SP)+ -> -(SP)
       STOREB          #2f43,L04,(SP)+
       STORE           Gef,#2f43
       STORE           Gee,#01
       LOADB           Gef,Gee -> Ged
       INC             Ged
       STOREB          Gef,Gee,Ged
       LOADB           #2f43,#01 -> -(SP)
       JE              (SP)+,#78 [FALSE] L0057
       JUMP            L0058
L0057: JUMP            L0055
L0058: JL              L04,#78 [FALSE] L0059
       STOREB          #2f43,L04,#20
       INC             L04
       JUMP            L0058
L0059: RET             #2710

Routine R0031, 10 locals

       SUB             G73,#01 -> L02
       STORE           L04,#00
       LOADW           #2dc3,#00 -> L05
       STORE           L01,#00
L0001: JG              L01,L02 [TRUE] L0012
       LOADW           #2dc3,L01 -> L06
       STOREW          #2ec3,L01,L04
       STORE           L07,L06
L0002: GET_PARENT      L07 -> L07
       JE              L07,G38,G37,#00 [FALSE] L0002
       JE              L00,#01 [FALSE] L0003
       GET_PARENT      L06 -> -(SP)
       JE              (SP)+,G37 [FALSE] L0003
       INC             L04
       STORE           L05,L06
L0003: JE              L00,#02 [FALSE] L0004
       JE              L07,G38 [FALSE] L0004
       JE              L06,G37 [TRUE] L0004
       TEST_ATTR       L06,#03 [TRUE] L0004
       TEST_ATTR       L06,#11 [TRUE] L0004
       INC             L04
       STORE           L05,L06
L0004: JE              L00,#03 [FALSE] L0005
       GET_PARENT      L06 -> -(SP)
       JE              (SP)+,G37 [FALSE] L0005
       INC             L04
       STORE           L05,L06
L0005: JE              L00,#04,#05 [FALSE] L0010
       JE              G53,#ffff [FALSE] L0008
       JE              L00,#04 [FALSE] L0006
       INC             L04
       STORE           L05,L06
L0006: JE              L00,#05 [FALSE] L0007
       GET_PARENT      L06 -> -(SP)
       JE              (SP)+,G37 [TRUE] L0007
       INC             L04
       STORE           L05,L06
L0007: JUMP            L0010
L0008: JE              L00,#04 [FALSE] L0009
       JE              L06,G53 [TRUE] L0009
       INC             L04
       STORE           L05,L06
L0009: JE              L00,#05 [FALSE] L0010
       JIN             L06,G53 [FALSE] L0010
       INC             L04
       STORE           L05,L06
L0010: JE              L00,#06 [FALSE] L0011
       CALL_2S         R0027 (L06) -> -(SP)
       JE              (SP)+,#01 [FALSE] L0011
       INC             L04
       STORE           L05,L06
L0011: LOADW           #2ec3,L01 -> -(SP)
       SUB             L04,(SP)+ -> -(SP)
       MUL             #03e8,(SP)+ -> -(SP)
       STOREW          #2ec3,L01,(SP)+
       INC             L01
       JUMP            L0001
L0012: JE              L04,#01 [FALSE] L0013
       RET             L05
L0013: JE              L00,#06 [FALSE] L0014
       JZ              L04 [FALSE] L0014
       LOADW           #2dc3,#00 -> -(SP)
       RET_POPPED      
L0014: JZ              G5d [FALSE] L0015
       STORE           G5e,#00
L0015: CALL_1N         R0033
       JZ              G73 [FALSE] L0016
       RET             #ffff
L0016: JE              G5d,#01 [FALSE] L0028
       AND             G5e,#08 -> -(SP)
       JZ              (SP)+ [TRUE] L0028
       JE              L00,#02,#03,#04 [TRUE] L0017
       JE              L00,#05 [TRUE] L0017
       STORE           G44,#07
       RET             #ffff
L0017: STORE           L01,#00
       LOADW           #2be3,#00 -> L09
       CALL_1S         R0034 -> L02
       JUMP            L0019
L0018: CALL_1S         R0034 -> L02
L0019: JE              L02,#ffff [TRUE] L0026
       JL              L01,G5f [FALSE] L0026
       ADD             L01,L09 -> -(SP)
       JL              (SP)+,#3f [FALSE] L0026
       STORE           L08,#00
       TEST_ATTR       L02,#03 [TRUE] L0020
       TEST_ATTR       L02,#1a [TRUE] L0020
       STORE           L08,#01
L0020: JE              L00,#03,#04 [FALSE] L0021
       GET_PARENT      L02 -> -(SP)
       JE              (SP)+,G37 [TRUE] L0021
       STORE           L08,#00
L0021: CALL_VS         R0387 (L02,L08) -> L03
       JE              L03,#01 [FALSE] L0022
       STORE           L08,#01
       JUMP            L0023
L0022: JE              L03,#02 [FALSE] L0023
       STORE           L08,#00
L0023: JE              L08,#01 [FALSE] L0024
       INC             L01
       ADD             L01,L09 -> -(SP)
       STOREW          #2be3,(SP)+,L02
       JUMP            L0025
L0024: STORE           L01,L01
L0025: JUMP            L0018
L0026: JL              L01,G5f [FALSE] L0027
       JL              G5f,#64 [FALSE] L0027
       STORE           G44,#10
       STORE           G5a,G5f
       LOADW           #2be3,#00 -> G5b
       RET             #ffff
L0027: ADD             L01,L09 -> -(SP)
       STOREW          #2be3,#00,(SP)+
       STORE           G5c,L00
       RTRUE           
L0028: STORE           L01,#00
L0029: JL              L01,G73 [FALSE] L0030
       STOREW          #2e43,L01,#00
       INC             L01
       JUMP            L0029
L0030: STORE           L06,#01
       STORE           L01,#00
L0031: JL              L01,G73 [FALSE] L0036
       LOADW           #2e43,L01 -> -(SP)
       JZ              (SP)+ [FALSE] L0035
       PUSH            L06
       INC             L06
       STOREW          #2e43,L01,(SP)+
       STORE           L08,#00
       ADD             L01,#01 -> L02
L0032: JL              L02,G73 [FALSE] L0034
       LOADW           #2e43,L02 -> -(SP)
       JZ              (SP)+ [FALSE] L0033
       LOADW           #2dc3,L02 -> -(SP)
       LOADW           #2dc3,L01 -> -(SP)
       CALL_VS         R0035 ((SP)+,(SP)+) -> -(SP)
       JE              (SP)+,#01 [FALSE] L0033
       STORE           L08,#01
       LOADW           #2e43,L01 -> -(SP)
       STOREW          #2e43,L02,(SP)+
L0033: INC             L02
       JUMP            L0032
L0034: JE              L08,#01 [FALSE] L0035
       SUB             #01,L06 -> -(SP)
       STOREW          #2e43,L01,(SP)+
L0035: INC             L01
       JUMP            L0031
L0036: DEC             L06
       STORE           G74,L06
       JG              L06,#01 [FALSE] L0042
       JZ              G5d [FALSE] L0042
       STORE           L02,#00
       STORE           L04,#00
       STORE           L01,#00
L0037: JL              L01,G73 [FALSE] L0040
       LOADW           #2dc3,L01 -> -(SP)
       CALL_VS         R0387 ((SP)+,#02) -> L03
       JE              L03,L02 [FALSE] L0038
       INC             L04
L0038: JG              L03,L02 [FALSE] L0039
       STORE           L02,L03
       STORE           L04,#01
       LOADW           #2dc3,L01 -> L05
L0039: INC             L01
       JUMP            L0037
L0040: JE              L04,#01 [FALSE] L0041
       RET             L05
L0041: RFALSE          
L0042: JE              L06,#01 [FALSE] L0043
       STORE           G50,#01
L0043: CALL_1S         R0034 -> -(SP)
       RET_POPPED      

Routine R0032, 3 locals

       JE              G5c,#04,#05 [FALSE] L0006
       STORE           L01,#01
       STORE           L02,#00
L0001: LOADW           #2be3,#00 -> -(SP)
       JG              L01,(SP)+ [TRUE] L0005
       JE              G5c,#04 [FALSE] L0002
       LOADW           #2be3,L01 -> -(SP)
       JE              (SP)+,L00 [FALSE] L0003
L0002: JE              G5c,#05 [FALSE] L0004
       LOADW           #2be3,L01 -> -(SP)
       JIN             (SP)+,L00 [FALSE] L0004
L0003: INC             L02
       LOADW           #2be3,L01 -> -(SP)
       STOREW          #2be3,L02,(SP)+
L0004: INC             L01
       JUMP            L0001
L0005: STOREW          #2be3,#00,L02
L0006: JE              G5c,#02 [FALSE] L0014
       JE              G51,#0f [FALSE] L0014
       STORE           L01,#01
       STORE           L02,#00
L0007: LOADW           #2be3,#00 -> -(SP)
       JG              L01,(SP)+ [TRUE] L0009
       GET_PARENT      G37 -> -(SP)
       LOADW           #2be3,L01 -> -(SP)
       GET_PARENT      (SP)+ -> -(SP)
       JE              (SP)+,(SP)+ [FALSE] L0008
       INC             L02
L0008: INC             L01
       JUMP            L0007
L0009: JE              G66,#02 [TRUE] L0010
       JG              L02,#00 [FALSE] L0014
L0010: STORE           L01,#01
       STORE           L02,#00
L0011: LOADW           #2be3,#00 -> -(SP)
       JG              L01,(SP)+ [TRUE] L0013
       GET_PARENT      G37 -> -(SP)
       LOADW           #2be3,L01 -> -(SP)
       GET_PARENT      (SP)+ -> -(SP)
       JE              (SP)+,(SP)+ [FALSE] L0012
       INC             L02
       LOADW           #2be3,L01 -> -(SP)
       STOREW          #2be3,L02,(SP)+
L0012: INC             L01
       JUMP            L0011
L0013: STOREW          #2be3,#00,L02
L0014: LOADW           #2be3,#00 -> L01
       JZ              L01 [FALSE] L0015
       RET             #11
L0015: RFALSE          

Routine R0033, 8 locals

       AND             G5e,#02 -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       ADD             L05,#2d -> L05
L0001: AND             G5e,#04 -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       ADD             L05,#2d -> L05
L0002: AND             G5e,#10 -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       ADD             L05,#2d -> L05
L0003: AND             G5e,#20 -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       ADD             L05,#2d -> L05
L0004: JZ              G61 [TRUE] L0005
       ADD             L05,#2d -> L05
L0005: STORE           L06,#1e
       STORE           L07,#14
       JE              G51,#0f,#11 [FALSE] L0006
       STORE           L06,#14
       STORE           L07,#1e
L0006: STORE           L03,#00
L0007: JL              L03,G73 [FALSE] L0020
       LOADW           #2dc3,L03 -> L02
       GET_PARENT      L02 -> L00
       STORE           L01,#00
       AND             G5e,#02 -> -(SP)
       JZ              (SP)+ [TRUE] L0008
       JE              L00,G37 [FALSE] L0008
       ADD             L01,#2d -> L01
L0008: AND             G5e,#04 -> -(SP)
       JZ              (SP)+ [TRUE] L0009
       JE              L00,G38 [FALSE] L0009
       ADD             L01,#2d -> L01
L0009: AND             G5e,#10 -> -(SP)
       JZ              (SP)+ [TRUE] L0010
       TEST_ATTR       L02,#09 [FALSE] L0010
       ADD             L01,#2d -> L01
L0010: AND             G5e,#20 -> -(SP)
       JZ              (SP)+ [TRUE] L0011
       TEST_ATTR       L02,#09 [TRUE] L0011
       ADD             L01,#2d -> L01
L0011: JZ              G61 [TRUE] L0012
       JE              L00,G61 [FALSE] L0012
       ADD             L01,#2d -> L01
L0012: JL              L01,L05 [FALSE] L0013
       STOREW          #2dc3,L03,#ffff
       JUMP            L0019
L0013: STORE           L01,#00
       TEST_ATTR       L02,#03 [TRUE] L0014
       STORE           L01,#32
L0014: JE              L00,G37 [FALSE] L0015
       ADD             L01,L06 -> L01
       JUMP            L0017
L0015: JE              L00,G38 [FALSE] L0016
       ADD             L01,L07 -> L01
       JUMP            L0017
L0016: JZ              L01 [FALSE] L0017
       JE              L00,#06 [TRUE] L0017
       ADD             L01,#0a -> L01
L0017: CALL_VS         R0387 (L02,#02) -> -(SP)
       ADD             L01,(SP)+ -> L01
       MUL             #02,L01 -> L01
       CALL_2S         R0062 (L02) -> -(SP)
       LOADW           #3170,(SP)+ -> -(SP)
       AND             G62,(SP)+ -> -(SP)
       JZ              (SP)+ [TRUE] L0018
       INC             L01
L0018: LOADW           #2ec3,L03 -> -(SP)
       ADD             (SP)+,L01 -> -(SP)
       STOREW          #2ec3,L03,(SP)+
L0019: INC             L03
       JUMP            L0007
L0020: STORE           L03,#00
L0021: JL              L03,G73 [FALSE] L0027
L0022: LOADW           #2dc3,L03 -> -(SP)
       JE              (SP)+,#ffff [FALSE] L0026
       SUB             G73,#01 -> -(SP)
       JE              L03,(SP)+ [FALSE] L0023
       DEC             G73
       JUMP            L0026
L0023: STORE           L04,L03
L0024: JL              L04,G73 [FALSE] L0025
       ADD             L04,#01 -> -(SP)
       LOADW           #2dc3,(SP)+ -> -(SP)
       STOREW          #2dc3,L04,(SP)+
       INC             L04
       JUMP            L0024
L0025: DEC             G73
       JUMP            L0022
L0026: INC             L03
       JUMP            L0021
L0027: RTRUE           

Routine R0034, 4 locals

       STORE           L00,#00
       STORE           L02,#ffff
       STORE           L03,#00
L0001: JL              L03,G73 [FALSE] L0003
       LOADW           #2dc3,L03 -> -(SP)
       JL              (SP)+,#00 [TRUE] L0002
       LOADW           #2ec3,L03 -> L01
       JG              L01,L02 [FALSE] L0002
       STORE           L02,L01
       STORE           L00,L03
L0002: INC             L03
       JUMP            L0001
L0003: JL              L02,#00 [FALSE] L0004
       RET             #ffff
L0004: LOADW           #2dc3,L00 -> L03
       STOREW          #2dc3,L00,#ffff
       RET             L03

Routine R0035, 9 locals

       JE              L00,L01 [TRUE] RTRUE
       JZ              L00 [TRUE] RFALSE
       JZ              L01 [TRUE] RFALSE
       GET_PARENT      L00 -> -(SP)
       JE              (SP)+,#06 [TRUE] RFALSE
       GET_PARENT      L01 -> -(SP)
       JE              (SP)+,#06 [TRUE] RFALSE
       GET_PROP        L00,#30 -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       GET_PROP        L01,#30 -> -(SP)
       JZ              (SP)+ [TRUE] L0002
L0001: GET_PROP        L01,#30 -> -(SP)
       GET_PROP        L00,#30 -> -(SP)
       JE              (SP)+,(SP)+ [FALSE] RFALSE
       STORE           G33,#1004
       STORE           G34,L00
       STORE           G35,L01
       STORE           L07,G77
       CALL_VS         R0086 (L00,#30) -> L06
       STORE           G77,L07
       JE              L06,#ffff [TRUE] RTRUE
       JE              L06,#fffe [TRUE] RFALSE
L0002: GET_PROP_ADDR   L00,#01 -> L02
       GET_PROP_ADDR   L00,#01 -> Gef
       JZ              Gef [TRUE] L0003
       GET_PROP_LEN    Gef -> Gef
L0003: PUSH            Gef
       DIV             (SP)+,#02 -> L04
       GET_PROP_ADDR   L01,#01 -> L03
       GET_PROP_ADDR   L01,#01 -> Gef
       JZ              Gef [TRUE] L0004
       GET_PROP_LEN    Gef -> Gef
L0004: PUSH            Gef
       DIV             (SP)+,#02 -> L05
       STORE           L06,#00
L0005: JL              L06,L04 [FALSE] L0009
       STORE           L08,#00
       STORE           L07,#00
L0006: JL              L07,L05 [FALSE] L0008
       LOADW           L03,L07 -> -(SP)
       LOADW           L02,L06 -> -(SP)
       JE              (SP)+,(SP)+ [FALSE] L0007
       STORE           L08,#01
L0007: INC             L07
       JUMP            L0006
L0008: JZ              L08 [TRUE] RFALSE
       INC             L06
       JUMP            L0005
L0009: STORE           L07,#00
L0010: JL              L07,L05 [FALSE] L0014
       STORE           L08,#00
       STORE           L06,#00
L0011: JL              L06,L04 [FALSE] L0013
       LOADW           L03,L07 -> -(SP)
       LOADW           L02,L06 -> -(SP)
       JE              (SP)+,(SP)+ [FALSE] L0012
       STORE           L08,#01
L0012: INC             L06
       JUMP            L0011
L0013: JZ              L08 [TRUE] RFALSE
       INC             L07
       JUMP            L0010
L0014: RTRUE           

Routine R0036, 4 locals

       JZ              L00 [FALSE] L0002
       STORE           L01,G79
       CALL_2S         R0008 (L01) -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       CALL_2S         R0404 (L01) -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       PRINT_ADDR      L01
L0001: INC             L00
       STORE           L03,#01
L0002: STORE           L02,L00
L0003: JL              L02,G47 [FALSE] L0011
       LOADW           #2c83,L02 -> L01
       JE              L01,#ffff [FALSE] L0004
       JUMP            L0010
L0004: JZ              L03 [TRUE] L0005
       PRINT_CHAR      ' '
L0005: JZ              L01 [FALSE] L0006
       PRINT_PADDR     S032
       JUMP            L0009
L0006: JE              L01,#01 [FALSE] L0007
       PRINT_PADDR     S033
       JUMP            L0009
L0007: JL              L01,#2710 [TRUE] L0008
       SUB             L01,#2710 -> -(SP)
       CALL_2S         R0064 ((SP)+) -> -(SP)
       PRINT_ADDR      (SP)+
       JUMP            L0009
L0008: CALL_2N         R0103 (L01)
L0009: STORE           L03,#01
L0010: INC             L02
       JUMP            L0003
L0011: RTRUE           

Routine R0037, 3 locals

       STORE           G7d,G7c
       JZ              G6d [TRUE] L0001
       STORE           G6e,G6d
       RET             #12
L0001: DEC             G77
       CALL_1S         R0056 -> L01
       STORE           L02,#04
       JE              L01,G68 [FALSE] L0002
       STORE           G6a,G68
       STORE           G6b,G69
       STORE           L02,#0e
L0002: STORE           L00,G37
L0003: GET_PARENT      L00 -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       GET_PARENT      L00 -> L00
       JUMP            L0003
L0004: TEST_ATTR       L00,#18 [FALSE] L0005
       SUB             G77,#01 -> -(SP)
       CALL_VS         R0052 (L00,(SP)+) -> -(SP)
       JE              (SP)+,#01 [FALSE] L0005
       STORE           L02,#0d
L0005: JG              G44,L02 [FALSE] L0006
       RET             G44
L0006: RET             L02

Routine R0038, 3 locals

       LOADW           #2be3,#00 -> L01
       JE              L01,#3f [FALSE] L0001
       STORE           G3b,#01
       RTRUE           
L0001: STORE           L02,#01
L0002: JG              L02,L01 [TRUE] L0003
       LOADW           #2be3,L02 -> -(SP)
       JE              L00,(SP)+ [TRUE] RTRUE
       INC             L02
       JUMP            L0002
L0003: INC             L01
       STOREW          #2be3,L01,L00
       STOREW          #2be3,#00,L01
       RTRUE           

Routine R0039, 5 locals

       LOADW           #2be3,#00 -> L01
       STORE           L04,#00
       STORE           L02,#01
L0001: JG              L02,L01 [TRUE] L0005
       LOADW           #2be3,L02 -> -(SP)
       JE              L00,(SP)+ [FALSE] L0004
       STORE           L03,L02
L0002: JG              L03,L01 [TRUE] L0003
       ADD             L03,#01 -> -(SP)
       LOADW           #2be3,(SP)+ -> -(SP)
       STOREW          #2be3,L03,(SP)+
       INC             L03
       JUMP            L0002
L0003: DEC             L01
       PUSH            L01
       STOREW          #2be3,#00,(SP)+
       RET             L04
L0004: INC             L02
       JUMP            L0001
L0005: STORE           L04,#09
       RET             L04

Routine R0040, 4 locals

L0001: LOADW           #2be3,#00 -> L01
       STORE           L02,#01
L0002: JG              L02,L01 [TRUE] L0004
       LOADW           #2be3,L02 -> L03
       TEST_ATTR       L03,L00 [TRUE] L0003
       CALL_2N         R0039 (L03)
       JUMP            L0001
L0003: INC             L02
       JUMP            L0002
L0004: RTRUE           

Routine R0041, 1 local

       JG              G56,#00 [FALSE] L0001
       JL              G56,#31 [FALSE] L0001
       SUB             G56,#01 -> -(SP)
       TEST_ATTR       L00,(SP)+ [TRUE] RTRUE
       RFALSE          
L0001: STORE           G2d,L00
       CALL_1S         G56 -> -(SP)
       RET_POPPED      

Routine R0042, 5 locals

       MUL             L00,#02 -> -(SP)
       SUB             (SP)+,#01 -> L03
       MUL             L02,#02 -> -(SP)
       SUB             (SP)+,#01 -> L04
       PUSH            L04
       INC             L04
       LOADW           L01,(SP)+ -> -(SP)
       PUSH            L03
       INC             L03
       STOREW          #2fbc,(SP)+,(SP)+
       LOADW           L01,L04 -> -(SP)
       STOREW          #2fbc,L03,(SP)+
       RTRUE           

Routine R0043, 4 locals

       STORE           L03,#00
       JZ              G6d [TRUE] L0001
       STORE           G6f,#02
       CALL_1S         G6d -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
L0001: JE              G37,L00,L01 [FALSE] L0002
       CALL_2S         R0402 (G37) -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
L0002: JE              L02,#05 [FALSE] L0004
       JE              G53,#ffff [TRUE] L0004
       CALL_2S         R0044 (G53) -> -(SP)
       JE              (SP)+,#01 [FALSE] L0003
       CALL_VN         R0047 (G53,#00,L02)
L0003: JUMP            L0009
L0004: JZ              L00 [TRUE] L0006
       TEST_ATTR       L00,#14 [TRUE] L0005
       TEST_ATTR       L00,#04 [FALSE] L0006
L0005: CALL_VN         R0048 (L00,L00,L02)
L0006: CALL_VN         R0047 (L00,L01,L02)
       JZ              L01 [TRUE] L0008
       TEST_ATTR       L01,#14 [TRUE] L0007
       TEST_ATTR       L01,#04 [FALSE] L0008
L0007: CALL_VN         R0048 (L01,L01,L02)
L0008: CALL_VN         R0047 (L01,#00,L02)
L0009: JE              #13,L00,L01 [FALSE] L0011
       CALL_VN         R0048 (G37,G37,L02)
       GET_PARENT      G37 -> -(SP)
       PULL            Gef
       TEST_ATTR       Gef,#14 [TRUE] L0010
       TEST_ATTR       Gef,#04 [FALSE] L0011
L0010: GET_PARENT      G37 -> -(SP)
       GET_PARENT      G37 -> -(SP)
       CALL_VN         R0048 ((SP)+,(SP)+,L02)
L0011: RTRUE           

Routine R0044, 1 local

       TEST_ATTR       L00,#14 [TRUE] RTRUE
       TEST_ATTR       L00,#17 [TRUE] RTRUE
       TEST_ATTR       L00,#04 [FALSE] L0001
       TEST_ATTR       L00,#0e [TRUE] RTRUE
L0001: RFALSE          

Routine R0045, 1 local

       JE              G6c,#00,#01 [TRUE] L0001
       CALL_2N         R0046 (L00)
       RTRUE           
L0001: STORE           G77,G76
       CALL_2N         R0051 (L00)
       STORE           G72,#01
       RTRUE           

Routine R0046, 3 locals

       STORE           L01,G6c
       STORE           L02,G34
       STORE           Gef,G6c
       JE              Gef,#03 [FALSE] L0003
       GET_PROP        L00,#1a -> -(SP)
       JE              (SP)+,#00,#ffff [FALSE] L0001
       RTRUE           
L0001: JZ              G34 [FALSE] L0002
       CALL_VS         R0086 (L00,#1a) -> G34
L0002: JUMP            L0011
L0003: JE              Gef,#04 [FALSE] L0006
       GET_PROP        L00,#1b -> -(SP)
       JE              (SP)+,#00,#ffff [FALSE] L0004
       RTRUE           
L0004: JZ              G34 [FALSE] L0005
       CALL_VS         R0086 (L00,#1b) -> G34
L0005: JUMP            L0011
L0006: JE              Gef,#02 [FALSE] L0008
       GET_PROP_ADDR   L00,#2c -> -(SP)
       JZ              (SP)+ [FALSE] L0007
       RTRUE           
L0007: CALL_VN         R0084 (L00,#2c)
       JUMP            L0011
L0008: JE              Gef,#06 [FALSE] L0010
       JE              L00,G34 [FALSE] L0009
       STORE           G35,#01
L0009: JUMP            L0011
L0010: JE              Gef,#05 [FALSE] L0011
       CALL_2N         G34 (L00)
       STORE           G34,L02
L0011: STORE           G6c,L01
       RTRUE           

Routine R0047, 3 locals

       JZ              L00 [TRUE] RTRUE
       JZ              G5d [FALSE] L0001
       JE              L00,G38 [FALSE] L0001
       JZ              G6c [FALSE] L0001
       JE              L02,#06 [TRUE] L0001
       CALL_2N         R0047 (#06)
L0001: GET_CHILD       L00 -> -(SP) [FALSE] L0002
L0002: PULL            L00
       JZ              L00 [TRUE] L0004
L0003: CALL_VN         R0048 (L00,L01,L02)
       GET_SIBLING     L00 -> L00 [TRUE] L0003
L0004: RTRUE           

Routine R0048, 6 locals

       JE              L02,#04 [FALSE] L0001
       JE              L00,G53 [FALSE] L0001
       JUMP            L0006
L0001: JE              G6c,#00,#01 [TRUE] L0002
       CALL_2N         R0046 (L00)
       JUMP            L0006
L0002: JG              G76,G78 [TRUE] L0004
       STORE           G77,G76
       CALL_1S         R0055 -> L03
       JE              L03,#01 [FALSE] L0003
       JE              G14,L00 [FALSE] L0003
       CALL_VN         R0050 (L00,#01)
L0003: JL              L03,#02 [TRUE] L0004
       JL              L03,#80 [FALSE] L0004
       LOADW           #3188,L03 -> -(SP)
       JE              (SP)+,L00 [FALSE] L0004
       CALL_VN         R0050 (L00,#01)
L0004: STORE           G77,G76
       CALL_2S         R0051 (L00) -> -(SP)
       JG              (SP)+,#00 [FALSE] L0006
       JG              G64,#00 [FALSE] L0006
       JE              G76,G64 [TRUE] L0006
       STORE           G77,G64
       CALL_2S         R0051 (L00) -> -(SP)
       JG              (SP)+,#00 [FALSE] L0005
       STORE           G76,G64
       CALL_1N         R0025
L0005: STORE           G77,G76
L0006: GET_CHILD       L00 -> -(SP) [FALSE] L0007
L0007: JZ              (SP)+ [TRUE] L0008
       JE              L00,L01 [TRUE] L0008
       CALL_2S         R0044 (L00) -> -(SP)
       JE              (SP)+,#01 [FALSE] L0008
       CALL_VN         R0047 (L00,L01,L02)
L0008: GET_PROP_ADDR   L00,#18 -> L04
       JZ              L04 [TRUE] L0012
       LOADW           L04,#00 -> -(SP)
       CALL_VS         R0109 ((SP)+,G05) -> -(SP)
       JG              (SP)+,#00 [FALSE] L0009
       ADD             #02,L02 -> G70
       CALL_VN         R0086 (L00,#18)
       STORE           G70,#00
       JUMP            L0012
L0009: GET_PROP_ADDR   L00,#18 -> Gef
       JZ              Gef [TRUE] L0010
       GET_PROP_LEN    Gef -> Gef
L0010: STORE           L05,Gef
       STORE           L03,#00
L0011: MUL             #02,L03 -> -(SP)
       JL              (SP)+,L05 [FALSE] L0012
       LOADW           L04,L03 -> -(SP)
       CALL_VN         R0048 ((SP)+,#00,L02)
       INC             L03
       JUMP            L0011
L0012: RTRUE           

Routine R0049, 1 local

       JL              G70,#02 [TRUE] L0001
       SUB             G70,#02 -> -(SP)
       CALL_VN         R0048 (L00,#00,(SP)+)
L0001: JE              G70,#01 [FALSE] L0002
       CALL_2S         R0097 (L00) -> -(SP)
       JE              (SP)+,#01 [FALSE] L0002
       STORE           G71,#01
L0002: RTRUE           

Routine R0050, 3 locals

       JZ              G56 [TRUE] L0001
       CALL_2S         R0041 (L00) -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       RTRUE           
L0001: JL              L01,G75 [TRUE] RTRUE
       JG              L01,G75 [FALSE] L0002
       STORE           G75,L01
       STORE           G73,#00
       JUMP            L0004
L0002: MUL             #02,G73 -> -(SP)
       JL              (SP)+,#80 [FALSE] RTRUE
       STORE           L02,#00
L0003: JL              L02,G73 [FALSE] L0004
       LOADW           #2dc3,L02 -> -(SP)
       JE              (SP)+,L00 [TRUE] RTRUE
       INC             L02
       JUMP            L0003
L0004: PUSH            G73
       INC             G73
       STOREW          #2dc3,(SP)+,L00
       RTRUE           

Routine R0051, 5 locals

       STORE           G67,#00
       JG              G77,G78 [FALSE] L0002
       JZ              G5d [TRUE] L0001
       STORE           G67,#70
L0001: CALL_VN         R0050 (L00,#00)
       RTRUE           
L0002: GET_PROP        L00,#30 -> -(SP)
       JZ              (SP)+ [TRUE] L0009
       STORE           G33,#ffff
       STORE           L04,G77
       CALL_VS         R0086 (L00,#30) -> L02
       JG              L02,#00 [FALSE] L0008
       ADD             L04,L02 -> G77
L0003: JE              G33,#1005 [FALSE] L0004
       OR              G67,#04 -> G67
L0004: AND             G67,#04 -> -(SP)
       JZ              (SP)+ [TRUE] L0007
       JZ              G65 [FALSE] L0005
       STORE           L02,#00
       JUMP            L0007
L0005: JZ              G5d [FALSE] L0006
       STORE           G5d,#01
       STORE           G5e,#00
       STORE           G5f,#00
L0006: OR              G5e,#08 -> G5e
       JZ              G5f [FALSE] L0007
       STORE           G5f,#64
L0007: CALL_VN         R0050 (L00,L02)
       RET             L02
L0008: JZ              L02 [FALSE] L0009
       JUMP            L0014
L0009: STORE           G33,#ffff
       CALL_1S         R0055 -> L03
       JE              L03,#01 [FALSE] L0010
       JE              G14,L00 [FALSE] L0010
       STORE           L02,#01
       JUMP            L0003
L0010: JL              L03,#02 [TRUE] L0011
       JL              L03,#80 [FALSE] L0011
       LOADW           #3188,L03 -> -(SP)
       JE              (SP)+,L00 [FALSE] L0011
       STORE           L02,#01
       JUMP            L0003
L0011: DEC             G77
       STORE           L04,G77
       CALL_2S         R0408 (L00) -> L01
       JL              L01,#00 [FALSE] L0012
       INC             G77
L0012: JG              L01,#00 [FALSE] L0013
       STORE           L02,L01
       JUMP            L0003
L0013: JZ              L01 [TRUE] L0014
       SUB             G77,#01 -> -(SP)
       CALL_VS         R0052 (L00,(SP)+) -> -(SP)
       JZ              (SP)+ [FALSE] L0016
L0014: JZ              G5d [TRUE] L0015
       STORE           L02,#00
       STORE           G33,#ffff
       JUMP            L0003
L0015: RFALSE          
L0016: JL              L01,#00 [FALSE] L0019
       STORE           L01,#01
       LOADB           L03,#06 -> -(SP)
       AND             (SP)+,#74 -> G67
       CALL_1S         R0056 -> L03
L0017: SUB             G77,#01 -> -(SP)
       CALL_VS         R0052 (L00,(SP)+) -> -(SP)
       JZ              (SP)+ [TRUE] L0019
       INC             L01
       JZ              L03 [TRUE] L0018
       LOADB           L03,#06 -> -(SP)
       AND             (SP)+,#74 -> -(SP)
       OR              G67,(SP)+ -> G67
L0018: CALL_1S         R0056 -> L03
       JUMP            L0017
L0019: STORE           L02,L01
       JUMP            L0003

Routine R0052, 6 locals

       JZ              L00 [TRUE] RFALSE
       STORE           L03,G77
       STORE           G77,L01
       CALL_1S         R0057 -> L02
       STORE           G77,L03
       JL              G36,#0100 [TRUE] L0002
       CALL_VS         G36 (L00,L02) -> L03
       JL              L03,#00 [TRUE] L0001
       RET             L03
L0001: SUB             #00,L03 -> L05
       JUMP            L0003
L0002: STORE           L05,G36
L0003: CALL_VS         R0421 (L00,L05) -> L03
       CALL_VS         R0422 (L00,L05) -> -(SP)
       DIV             (SP)+,#02 -> -(SP)
       SUB             (SP)+,#01 -> L04
       STORE           L05,#00
L0004: JG              L05,L04 [TRUE] L0005
       LOADW           L03,L05 -> -(SP)
       JE              L02,(SP)+ [TRUE] RTRUE
       INC             L05
       JUMP            L0004
L0005: RFALSE          

Routine R0053, 6 locals

       CALL_VS         R0421 (L01,L02) -> L03
       CALL_VS         R0422 (L01,L02) -> -(SP)
       DIV             (SP)+,#02 -> -(SP)
       SUB             (SP)+,#01 -> L04
       STORE           L05,#00
L0001: JG              L05,L04 [TRUE] L0002
       LOADW           L03,L05 -> -(SP)
       JE              L00,(SP)+ [TRUE] RTRUE
       INC             L05
       JUMP            L0001
L0002: RFALSE          

Routine R0054, 3 locals

       STORE           L02,#00
L0001: JL              L02,L01 [FALSE] L0002
       LOADB           L00,L02 -> -(SP)
       ADD             #02,L02 -> -(SP)
       STOREB          #2ffd,(SP)+,(SP)+
       INC             L02
       JUMP            L0001
L0002: STOREB          #2ffd,#01,L01
       CALL_VN         R0020 (#2ffd,#3076)
       LOADW           #3076,#01 -> -(SP)
       RET_POPPED      

Routine R0055, 3 locals

       CALL_1S         R0056 -> L00
       JZ              L00 [TRUE] RFALSE
       JE              L00,"me","myself","self" [FALSE] L0001
       RTRUE           
L0001: LOADW           #3188,#00 -> L02
       STORE           L01,#01
       JUMP            L0003
L0002: ADD             L01,#03 -> L01
L0003: JG              L01,L02 [TRUE] L0005
       LOADW           #3188,L01 -> -(SP)
       JE              L00,(SP)+ [FALSE] L0004
       ADD             L01,#02 -> -(SP)
       RET_POPPED      
L0004: JUMP            L0002
L0005: LOADB           L00,#06 -> -(SP)
       AND             (SP)+,#80 -> -(SP)
       JZ              (SP)+ [TRUE] RFALSE
       RET             L00

Routine R0056, 3 locals

       LOADB           #2fbc,#01 -> -(SP)
       JG              G77,(SP)+ [FALSE] L0001
       INC             G77
       RFALSE          
L0001: MUL             G77,#02 -> -(SP)
       SUB             (SP)+,#01 -> L00
       INC             G77
       LOADW           #2fbc,L00 -> L01
       JZ              L01 [FALSE] L0003
       MUL             G77,#04 -> -(SP)
       SUB             (SP)+,#03 -> L02
       LOADB           #2fbc,L02 -> -(SP)
       LOADB           #2f43,(SP)+ -> L00
       JE              L00,#2c [FALSE] L0002
       STORE           L01,"comma,"
L0002: JE              L00,#2e [FALSE] L0003
       STORE           L01,"then"
L0003: RET             L01

Routine R0057, 0 locals

       LOADB           #2fbc,#01 -> -(SP)
       JG              G77,(SP)+ [FALSE] L0001
       INC             G77
       RET             #ffff
L0001: CALL_1S         R0056 -> -(SP)
       RET_POPPED      

Routine R0058, 1 local

       MUL             L00,#04 -> -(SP)
       ADD             (SP)+,#01 -> -(SP)
       LOADB           #2fbc,(SP)+ -> -(SP)
       ADD             #2f43,(SP)+ -> -(SP)
       RET_POPPED      

Routine R0059, 1 local

       MUL             L00,#04 -> -(SP)
       LOADB           #2fbc,(SP)+ -> -(SP)
       RET_POPPED      

Routine R0060, 10 locals

       STORE           L01,G77
       STORE           G77,L00
       CALL_1S         R0056 -> L02
       STORE           G77,L01
       CALL_2S         R0107 (L02) -> L02
       JL              L02,#01 [TRUE] L0001
       RET             L02
L0001: MUL             L00,#04 -> -(SP)
       ADD             (SP)+,#01 -> L01
       LOADB           #2fbc,L01 -> L02
       ADD             L02,#2f43 -> L04
       SUB             L01,#01 -> -(SP)
       LOADB           #2fbc,(SP)+ -> L05
       CALL_VS         R0406 (L04,L05) -> L07
       JZ              L07 [TRUE] L0002
       RET             L07
L0002: JL              L05,#04 [TRUE] L0003
       STORE           L06,#03e8
L0003: JE              L05,#03 [FALSE] L0004
       STORE           L06,#64
L0004: JE              L05,#02 [FALSE] L0005
       STORE           L06,#0a
L0005: JE              L05,#01 [FALSE] L0006
       STORE           L06,#01
L0006: STORE           L07,#00
       STORE           L03,#00
       SUB             L05,#01 -> L05
       STORE           L03,#00
L0007: JG              L03,L05 [TRUE] L0019
       LOADB           L04,L03 -> L09
       JE              L09,#30 [FALSE] L0008
       STORE           L08,#00
       JUMP            L0018
L0008: JE              L09,#31 [FALSE] L0009
       STORE           L08,#01
       JUMP            L0018
L0009: JE              L09,#32 [FALSE] L0010
       STORE           L08,#02
       JUMP            L0018
L0010: JE              L09,#33 [FALSE] L0011
       STORE           L08,#03
       JUMP            L0018
L0011: JE              L09,#34 [FALSE] L0012
       STORE           L08,#04
       JUMP            L0018
L0012: JE              L09,#35 [FALSE] L0013
       STORE           L08,#05
       JUMP            L0018
L0013: JE              L09,#36 [FALSE] L0014
       STORE           L08,#06
       JUMP            L0018
L0014: JE              L09,#37 [FALSE] L0015
       STORE           L08,#07
       JUMP            L0018
L0015: JE              L09,#38 [FALSE] L0016
       STORE           L08,#08
       JUMP            L0018
L0016: JE              L09,#39 [FALSE] L0017
       STORE           L08,#09
       JUMP            L0018
L0017: RET             #fc18
L0018: MUL             L06,L08 -> -(SP)
       ADD             L07,(SP)+ -> L07
       DIV             L06,#0a -> L06
       INC             L03
       JUMP            L0007
L0019: JG              L05,#03 [FALSE] L0020
       STORE           L07,#2710
L0020: RET             L07

Routine R0061, 1 local

       TEST_ATTR       L00,#1c [FALSE] RTRUE
       RFALSE          

Routine R0062, 3 locals

       TEST_ATTR       L00,#00 [TRUE] L0001
       STORE           L01,#06
L0001: TEST_ATTR       L00,#1b [FALSE] L0002
       STORE           L02,#1b
L0002: TEST_ATTR       L00,#1c [FALSE] L0003
       STORE           L02,#1c
L0003: TEST_ATTR       L00,#1d [FALSE] L0004
       STORE           L02,#1d
L0004: JZ              L02 [FALSE] L0006
       JZ              L01 [FALSE] L0005
       STORE           L02,#1b
       JUMP            L0006
L0005: STORE           L02,#1d
L0006: JE              L02,#1c [FALSE] L0007
       ADD             L01,#01 -> L01
L0007: JE              L02,#1d [FALSE] L0008
       ADD             L01,#02 -> L01
L0008: TEST_ATTR       L00,#1e [FALSE] L0009
       ADD             L01,#03 -> L01
L0009: RET             L01

Routine R0063, 1 local

       LOADW           #00,#04 -> -(SP)
       ADD             (SP)+,#07 -> -(SP)
       SUB             L00,(SP)+ -> -(SP)
       DIV             (SP)+,#09 -> -(SP)
       RET_POPPED      

Routine R0064, 1 local

       MUL             #09,L00 -> -(SP)
       LOADW           #00,#04 -> -(SP)
       ADD             (SP)+,#07 -> -(SP)
       ADD             (SP)+,(SP)+ -> -(SP)
       RET_POPPED      

Routine R0065, 4 locals

       LOADB           L00,#00 -> L03
       STORE           L02,#01
L0001: JG              L02,L03 [TRUE] L0002
       LOADB           L01,L02 -> -(SP)
       STOREB          L00,L02,(SP)+
       INC             L02
       JUMP            L0001
L0002: RTRUE           

Routine R0066, 3 locals

       LOADB           #2f43,#01 -> L02
       LOADB           #2f43,#00 -> -(SP)
       JG              L02,(SP)+ [FALSE] L0001
       LOADB           #2f43,#00 -> L02
L0001: ADD             L02,#02 -> L02
L0002: JG              L02,L00 [FALSE] L0003
       SUB             L02,#01 -> -(SP)
       LOADB           #2f43,(SP)+ -> -(SP)
       STOREB          #2f43,L02,(SP)+
       DEC             L02
       JUMP            L0002
L0003: STOREB          #2f43,L00,L01
       LOADB           #2f43,#00 -> -(SP)
       LOADB           #2f43,#01 -> -(SP)
       JL              (SP)+,(SP)+ [FALSE] L0004
       STORE           Gef,#2f43
       STORE           Gee,#01
       LOADB           Gef,Gee -> Ged
       INC             Ged
       STOREB          Gef,Gee,Ged
L0004: RTRUE           

Routine R0067, 4 locals
    Action routine for:
        "nouns"

       CALL_VN         R0240 (#00,#01)
       LOADW           #3188,#00 -> -(SP)
       DIV             (SP)+,#03 -> L02
       JE              G14,#14 [TRUE] L0001
       INC             L02
L0001: JZ              L02 [FALSE] L0002
       CALL_VS         R0240 (#00,#04) -> -(SP)
       RET_POPPED      
L0002: STORE           L00,#01
       STORE           L03,#00
       JUMP            L0004
L0003: ADD             L00,#03 -> L00
L0004: LOADW           #3188,#00 -> -(SP)
       JG              L00,(SP)+ [TRUE] L0009
       PRINT           """
       LOADW           #3188,L00 -> -(SP)
       PRINT_ADDR      (SP)+
       PRINT           "" "
       ADD             L00,#02 -> -(SP)
       LOADW           #3188,(SP)+ -> L01
       JE              L01,#ffff [FALSE] L0005
       CALL_VN         R0240 (#00,#03)
       JUMP            L0006
L0005: CALL_VN         R0240 (#00,#02)
       CALL_2N         R0103 (L01)
L0006: INC             L03
       SUB             L02,#01 -> -(SP)
       JL              L03,(SP)+ [FALSE] L0007
       PRINT           ", "
L0007: SUB             L02,#01 -> -(SP)
       JE              L03,(SP)+ [FALSE] L0008
       PRINT_PADDR     S040
L0008: JUMP            L0003
L0009: JE              G14,#14 [TRUE] L0010
       PRINT           """
       PRINT_ADDR      "me"
       PRINT           "" "
       CALL_VN         R0240 (#00,#02)
       STORE           L02,G14
       STORE           G14,#14
       CALL_2N         R0103 (L02)
       STORE           G14,L02
L0010: PRINT_RET       "."

Routine R0068, 3 locals

       STORE           L02,#01
       JUMP            L0002
L0001: ADD             L02,#03 -> L02
L0002: LOADW           #3188,#00 -> -(SP)
       JG              L02,(SP)+ [TRUE] L0004
       LOADW           #3188,L02 -> -(SP)
       JE              (SP)+,L00 [FALSE] L0003
       ADD             L02,#02 -> -(SP)
       STOREW          #3188,(SP)+,L01
       RTRUE           
L0003: JUMP            L0001
L0004: CALL_2N         R0112 (#0e)
       RTRUE           

Routine R0069, 2 locals

       STORE           L01,#01
       JUMP            L0002
L0001: ADD             L01,#03 -> L01
L0002: LOADW           #3188,#00 -> -(SP)
       JG              L01,(SP)+ [TRUE] L0004
       LOADW           #3188,L01 -> -(SP)
       JE              (SP)+,L00 [FALSE] L0003
       ADD             L01,#02 -> -(SP)
       LOADW           #3188,(SP)+ -> -(SP)
       RET_POPPED      
L0003: JUMP            L0001
L0004: RFALSE          

Routine R0070, 1 local

       CALL_2N         R0072 (L00)
       RTRUE           

Routine R0071, 0 locals

       JE              G81,G84 [TRUE] L0001
       CALL_VN         R0068 ("it",G81)
L0001: JE              G82,G85 [TRUE] L0002
       CALL_VN         R0068 ("him",G82)
L0002: JE              G83,G86 [TRUE] L0003
       CALL_VN         R0068 ("her",G83)
L0003: STORE           G84,G81
       STORE           G85,G82
       STORE           G86,G83
       RTRUE           

Routine R0072, 3 locals

       JE              L00,G14 [FALSE] L0001
       RTRUE           
L0001: CALL_1N         R0071
       CALL_2S         R0062 (L00) -> -(SP)
       LOADW           #3170,(SP)+ -> L02
       STORE           L01,#01
       JUMP            L0003
L0002: ADD             L01,#03 -> L01
L0003: LOADW           #3188,#00 -> -(SP)
       JG              L01,(SP)+ [TRUE] L0005
       ADD             L01,#01 -> -(SP)
       LOADW           #3188,(SP)+ -> -(SP)
       AND             L02,(SP)+ -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       ADD             L01,#02 -> -(SP)
       STOREW          #3188,(SP)+,L00
L0004: JUMP            L0002
L0005: CALL_2S         R0069 ("it") -> G81
       STORE           G84,G81
       CALL_2S         R0069 ("him") -> G82
       STORE           G85,G82
       CALL_2S         R0069 ("her") -> G83
       STORE           G86,G83
       RTRUE           

Routine R0073, 4 locals

       LOADW           #32,#00 -> G06
       LOADW           #00,#08 -> -(SP)
       AND             (SP)+,#01 -> G09
       CALL_VN         R0087 (#26,S028)
       STORE           G17,#13
       STORE           G14,#14
       SUB             #01b7,#ff -> G05
       PUT_PROP        "(self object)",#2d,#0064
       CALL_1S         R0386 -> L01
       STORE           G10,G0f
       INSERT_OBJ      G14,G02
L0001: GET_PARENT      G02 -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       GET_PARENT      G02 -> G02
       JUMP            L0001
L0002: GET_CHILD       G14 -> -(SP) [FALSE] L0003
L0003: PULL            L00
       JZ              L00 [TRUE] L0005
L0004: SET_ATTR        L00,#0c
       CLEAR_ATTR      L00,#03
       GET_SIBLING     L00 -> L00 [TRUE] L0004
L0005: JE              L01,#02 [TRUE] L0006
       CALL_1N         R0110
L0006: CALL_1N         R0126
       GET_PARENT      G14 -> -(SP)
       CALL_2S         R0096 ((SP)+) -> G16
       JZ              G16 [FALSE] L0007
       STORE           G17,G02
       STORE           G02,#13
L0007: CALL_2N         R0076 (#1f)
       STORE           L00,#01
L0008: JG              L00,#64 [TRUE] L0009
       RANDOM          L00 -> L01
       INC             L00
       JUMP            L0008
L0009: STORE           G84,G81
       STORE           G85,G82
       STORE           G86,G83
L0010: JZ              G15 [FALSE] L0045
       CALL_1N         R0071
       CALL_2S         R0069 ("it") -> G84
       CALL_2S         R0069 ("him") -> G85
       CALL_2S         R0069 ("her") -> G86
L0011: JE              G0f,G10 [TRUE] L0013
       JE              G11,#01 [FALSE] L0012
       CALL_1N         R0094
L0012: STORE           G10,G0f
L0013: STOREW          #2bc3,#00,#00
       STOREW          #2bc3,#01,#00
       STOREW          #2bc3,#02,#00
       STOREW          #2bc3,#03,#00
       STORE           G39,#00
       CALL_VN         R0418 (#15,#48,#2bc3)
       LOADW           #2bc3,#00 -> G2a
       JE              G2a,#5b,#5c [FALSE] L0015
       LOADW           #2bc3,#02 -> L00
       LOADW           #2bc3,#03 -> -(SP)
       STOREW          #2bc3,#02,(SP)+
       STOREW          #2bc3,#03,L00
       JE              G2a,#5b [FALSE] L0014
       STORE           G2a,#15
       JUMP            L0015
L0014: STORE           G2a,#16
L0015: JE              G2a,#51 [FALSE] L0016
       LOADW           #2bc3,#02 -> -(SP)
       JE              (SP)+,G14 [FALSE] L0016
       JE              G37,G14 [TRUE] L0016
       STOREW          #2bc3,#02,G37
       STORE           G37,G14
       STORE           G2a,#53
L0016: JE              G2a,#5a [FALSE] L0017
       LOADW           #2bc3,#02 -> -(SP)
       JE              (SP)+,G14 [TRUE] L0017
       JE              G37,G14 [FALSE] L0017
       LOADW           #2bc3,#02 -> G37
       LOADW           #2bc3,#03 -> -(SP)
       STOREW          #2bc3,#02,(SP)+
       STOREW          #2bc3,#03,G14
       STORE           G2a,#15
L0017: JE              G2a,#53,#51,#52 [FALSE] L0018
       STORE           G3c,G4b
L0018: STORE           G3a,#00
       STORE           G42,G41
       STORE           G41,#00
L0019: STORE           G2b,#00
       STORE           G2c,#00
       LOADW           #2bc3,#01 -> L00
       JL              L00,#01 [TRUE] L0020
       LOADW           #2bc3,#02 -> G2b
L0020: JL              L00,#02 [TRUE] L0021
       LOADW           #2bc3,#03 -> G2c
L0021: JE              G2b,#01 [FALSE] L0022
       STORE           G2d,G4b
       JUMP            L0023
L0022: STORE           G2d,G2b
L0023: JE              G2c,#01 [FALSE] L0026
       JE              G2b,#01 [FALSE] L0024
       STORE           G2e,G4c
       JUMP            L0025
L0024: STORE           G2e,G4b
L0025: JUMP            L0027
L0026: STORE           G2e,G2c
L0027: JE              G37,G14 [TRUE] L0030
       CALL_VS         R0086 (G14,#1d) -> L01
       JZ              L01 [FALSE] L0029
       CALL_VS         R0086 (G37,#1d) -> L01
       JZ              L01 [FALSE] L0029
       JE              G2a,#1009 [FALSE] L0028
       STOREW          #2bc3,#03,G37
       STORE           G37,G14
       STORE           G2a,#52
       JUMP            L0019
L0028: CALL_VS         R0082 (G37,#1003) -> -(SP)
       JZ              (SP)+ [FALSE] L0029
       CALL_VN         R0240 (#1003,#01,G37)
L0029: JUMP            L0041
L0030: JZ              L00 [TRUE] L0032
       JE              L00,#01 [FALSE] L0031
       JZ              G2b [FALSE] L0032
L0031: JE              L00,#02 [FALSE] L0033
       JZ              G2b [TRUE] L0033
       JZ              G2c [TRUE] L0033
L0032: CALL_VN2        R0418 (Geb,#004b,G2a,G2d,G2e,#00)
       JUMP            L0041
L0033: STORE           G3a,#01
       LOADW           #2be3,#00 -> L01
       JZ              L01 [FALSE] L0034
       CALL_VN         R0240 (#1007,#02)
       JUMP            L0013
L0034: JZ              G3b [TRUE] L0035
       STORE           G3b,#00
       CALL_VN         R0240 (#1007,#01)
L0035: STORE           L00,G02
       STORE           L02,#01
L0036: JG              L02,L01 [TRUE] L0041
       JZ              G15 [TRUE] L0037
       JUMP            L0041
L0037: JE              G02,L00 [TRUE] L0038
       CALL_VN         R0240 (#1007,#33)
       JUMP            L0041
L0038: LOADW           #2be3,L02 -> L03
       CALL_2N         R0072 (L03)
       CALL_2N         R0105 (L03)
       PRINT           ": "
       JZ              G2b [FALSE] L0039
       STORE           G2b,L03
       CALL_VN2        R0418 (Geb,#004b,G2a,L03,G2e,#00)
       STORE           G2b,#00
       JUMP            L0040
L0039: STORE           G2c,L03
       CALL_VN2        R0418 (Geb,#004b,G2a,G2d,L03,#00)
       STORE           G2c,#00
L0040: INC             L02
       JUMP            L0036
L0041: JE              G41,#01 [FALSE] L0042
       CALL_1N         R0077
       JUMP            L0010
L0042: JZ              G39 [TRUE] L0043
       JUMP            L0010
L0043: JZ              G15 [FALSE] L0044
       CALL_VN         R0418 (Geb,#004a)
L0044: JUMP            L0010
L0045: JE              G15,#02 [TRUE] L0046
       CALL_1N         R0397
L0046: JZ              G15 [FALSE] L0047
       JUMP            L0011
L0047: PRINT           "

    "
       SET_TEXT_STYLE  BOLDFACE
       PRINT           "***"
       JE              G15,#01 [FALSE] L0048
       CALL_VN         R0240 (#1007,#03)
L0048: JE              G15,#02 [FALSE] L0049
       CALL_VN         R0240 (#1007,#04)
L0049: JG              G15,#02 [FALSE] L0050
       PRINT           " "
       CALL_1N         R0393
       PRINT           " "
L0050: PRINT           "***"
       SET_TEXT_STYLE  ROMAN
       PRINT           "


"
       CALL_1N         R0141
       CALL_1N         R0092
L0051: CALL_VN         R0240 (#1007,#05)
L0052: PRINT           "> "
       STORE           Gef,#00
       STORE           Gec,#2f43
       STOREB          Gec,#01,#00
       CALL_1N         R0099
       READ            Gec,#2fbc -> Gef
       LOADW           #2fbc,#01 -> L00
       JE              L00,"q","quit" [FALSE] L0053
       QUIT            
L0053: JE              L00,"restart" [FALSE] L0054
       RESTART         
L0054: JE              L00,"restore" [FALSE] L0055
       CALL_1N         R0132
       JUMP            L0051
L0055: JE              L00,"fullscore","full" [FALSE] L0056
       JZ              #01 [TRUE] L0056
       NEW_LINE        
       CALL_1N         R0144
       JUMP            L0051
L0056: JE              G15,#02 [FALSE] L0057
       JE              L00,"amusing" [FALSE] L0057
       JZ              #0001 [FALSE] L0057
       NEW_LINE        
       CALL_1N         R0392
       JUMP            L0051
L0057: JE              L00,"undo","undo","undo" [FALSE] L0062
       JZ              G07 [FALSE] L0058
       CALL_VN         R0240 (#1007,#06)
       JUMP            L0051
L0058: JE              G07,#01 [FALSE] L0059
       JUMP            L0060
L0059: RESTORE_UNDO    -> L00
       JZ              L00 [FALSE] L0061
L0060: CALL_VN         R0240 (#1007,#07)
L0061: JUMP            L0051
L0062: CALL_VN         R0240 (#1007,#08)
       JUMP            L0052

Routine R0074, 2 locals

       INC             G0a
       JE              G0b,#ffff [TRUE] L0003
       JL              G0c,#00 [TRUE] L0001
       ADD             G0b,G0c -> G0b
       JUMP            L0002
L0001: DEC             G0d
       JZ              G0d [FALSE] L0002
       INC             G0b
       SUB             #00,G0c -> G0d
L0002: MOD             G0b,#05a0 -> G0b
L0003: STORE           L00,#00
L0004: JL              L00,G0e [FALSE] L0009
       JZ              G15 [TRUE] L0005
       RTRUE           
L0005: LOADW           #2b83,L00 -> L01
       JZ              L01 [TRUE] L0008
       AND             L01,#8000 -> -(SP)
       JZ              (SP)+ [TRUE] L0006
       AND             L01,#7fff -> -(SP)
       CALL_VN         R0086 ((SP)+,#2b)
       JUMP            L0008
L0006: GET_PROP        L01,#28 -> -(SP)
       JZ              (SP)+ [FALSE] L0007
       CALL_2N         R0089 (L01)
       CALL_VN         R0086 (L01,#2a)
       JUMP            L0008
L0007: GET_PROP        L01,#28 -> -(SP)
       SUB             (SP)+,#01 -> -(SP)
       PUT_PROP        L01,#28,(SP)+
L0008: INC             L00
       JUMP            L0004
L0009: JZ              G15 [TRUE] L0010
       RTRUE           
L0010: STORE           G6c,#02
       STORE           G79,#00
       CALL_2N         R0046 (G02)
       CALL_2S         R0024 (G14) -> -(SP)
       CALL_VN         R0043 ((SP)+,G14,#00)
       STORE           G6c,#00
       JZ              G15 [TRUE] L0011
       RTRUE           
L0011: CALL_1N         R0391
       JZ              G15 [TRUE] L0012
       RTRUE           
L0012: CALL_1N         R0095
       JZ              G15 [TRUE] L0013
       RTRUE           
L0013: CALL_1N         R0077
       RFALSE          

Routine R0075, 8 locals

       STORE           L04,G2a
       STORE           L05,G2d
       STORE           L06,G2e
       STORE           G2a,L00
       STORE           G2d,L01
       STORE           G2e,L02
       STORE           L03,#00
       JZ              G39 [FALSE] L0001
       CALL_1S         R0080 -> -(SP)
       JZ              (SP)+ [FALSE] L0002
L0001: JL              G2a,#1000 [FALSE] L0002
       LOADW           #3b07,G2a -> -(SP)
       CALL_1N         (SP)+
       STORE           L07,#00
       JUMP            L0003
L0002: STORE           L07,#01
L0003: STORE           G2a,L04
       STORE           G2d,L05
       STORE           G2e,L06
       RFALSE          

Routine R0076, 5 locals

       STORE           L03,G2b
       STORE           L04,G2c
       STORE           G2b,L01
       STORE           G2c,L02
       CALL_VN2        R0418 (#16,#4b,L00,L01,L02,#01)
       STORE           G2b,L03
       STORE           G2c,L04
       RTRUE           

Routine R0077, 1 local

       STORE           L00,#01
L0001: JIN             L00,G14 [FALSE] L0002
       TEST_ATTR       L00,#0c [TRUE] L0002
       SET_ATTR        L00,#0c
       TEST_ATTR       L00,#12 [FALSE] L0002
       ADD             G0f,#0004 -> G0f
       ADD             G13,#0004 -> G13
L0002: INC             L00
       JG              L00,#00b8 [TRUE] L0003
       JUMP            L0001
L0003: RTRUE           

Routine R0078, 7 locals

       STORE           L05,G34
       STORE           L06,G35
       STORE           G34,L00
       STORE           G35,#00
       STORE           L02,G37
       STORE           L03,G38
       STORE           L04,G6c
       STORE           G6c,#06
       JZ              L01 [FALSE] L0001
       STORE           G37,G14
       JUMP            L0002
L0001: STORE           G37,L01
L0002: CALL_2S         R0024 (G37) -> G38
       CALL_VN         R0043 (G38,G37,#00)
       STORE           G6c,L04
       STORE           G37,L02
       STORE           G38,L03
       STORE           G34,L05
       STORE           L05,G35
       STORE           G35,L06
       RET             L05

Routine R0079, 6 locals

       STORE           L02,G34
       STORE           L03,G6c
       STORE           L04,G37
       STORE           L05,G38
       STORE           G34,L00
       JZ              L01 [FALSE] L0001
       STORE           G37,G14
       JUMP            L0002
L0001: STORE           G37,L01
L0002: CALL_2S         R0024 (G37) -> G38
       STORE           G6c,#05
       CALL_VN         R0043 (G38,G37,#00)
       STORE           G34,L02
       STORE           G6c,L03
       STORE           G37,L04
       STORE           G38,L05
       RTRUE           

Routine R0080, 0 locals

       CALL_1S         R0398 -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
       CALL_VS         R0086 (G14,#1d) -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
       JZ              G02 [TRUE] L0001
       CALL_VS         R0086 (G02,#04) -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
L0001: STORE           G6c,#03
       STORE           G34,#00
       CALL_2S         R0024 (G14) -> -(SP)
       CALL_VN         R0043 ((SP)+,G14,#00)
       STORE           G6c,#00
       JZ              G34 [FALSE] RTRUE
       JG              G2b,#01 [FALSE] L0002
       CALL_VS         R0086 (G2b,#04) -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
L0002: RFALSE          

Routine R0081, 0 locals

       STORE           G6c,#04
       STORE           G34,#00
       CALL_2S         R0024 (G14) -> -(SP)
       CALL_VN         R0043 ((SP)+,G14,#00)
       STORE           G6c,#00
       JZ              G34 [FALSE] RTRUE
       JZ              G02 [TRUE] L0001
       CALL_VS         R0086 (G02,#05) -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
L0001: JG              G2b,#01 [FALSE] L0002
       CALL_VS         R0086 (G2b,#05) -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
L0002: CALL_1S         R0399 -> -(SP)
       RET_POPPED      

Routine R0082, 2 locals

       STORE           G30,L01
       CALL_VS         R0086 (L00,#06) -> -(SP)
       RET_POPPED      

Routine R0083, 1 local

       CALL_VS         R0429 (L00) -> -(SP)
       PULL            Gef
       JE              Gef,#00 [FALSE] L0001
       RFALSE          
L0001: JE              Gef,#02,#01 [FALSE] L0002
       RTRUE           
L0002: JE              Gef,#03 [FALSE] L0003
       RET             #02
L0003: JE              Gef,#04 [FALSE] L0004
       RET             #03
L0004: RTRUE           

Routine R0084, 3 locals

       CALL_VS         R0422 (L00,L01) -> -(SP)
       JG              (SP)+,#02 [FALSE] L0001
       CALL_VS         R0086 (L00,L01) -> -(SP)
       RET_POPPED      
L0001: CALL_VS         R0417 (L00,L01) -> -(SP)
       JE              (SP)+,#ffff [TRUE] RFALSE
       CALL_VS         R0417 (L00,L01) -> -(SP)
       CALL_VS         R0429 ((SP)+) -> -(SP)
       PULL            Gef
       JE              Gef,#01,#02,#00 [FALSE] L0002
       CALL_VS         R0112 (#02,L00,L01) -> -(SP)
       RET_POPPED      
L0002: JE              Gef,#04 [FALSE] L0004
       CALL_VS         R0417 (L00,L01) -> -(SP)
       PRINT_PADDR     (SP)+
       JZ              L02 [FALSE] L0003
       NEW_LINE        
L0003: RTRUE           
L0004: JE              Gef,#03 [FALSE] L0005
       CALL_VS         R0086 (L00,L01) -> -(SP)
       RET_POPPED      
L0005: RTRUE           

Routine R0085, 2 locals

       CALL_VS         R0417 (L00,L01) -> -(SP)
       JL              (SP)+,#0100 [FALSE] L0001
       CALL_VS         R0417 (L00,L01) -> -(SP)
       RET_POPPED      
L0001: CALL_VS         R0086 (L00,L01) -> -(SP)
       RET_POPPED      

Routine R0086, 2 locals

       JE              L00,#13 [FALSE] L0001
       JE              L01,#1e,#2e,#23 [TRUE] L0001
       STORE           L00,G17
L0001: CALL_VS         R0421 (L00,L01) -> -(SP)
       JZ              (SP)+ [TRUE] RFALSE
       CALL_VS         R0418 (L00,L01) -> -(SP)
       RET_POPPED      

Routine R0087, 2 locals

       SUB             L00,#01 -> -(SP)
       LOADW           #00,#05 -> -(SP)
       STOREW          (SP)+,(SP)+,L01
       RTRUE           

Routine R0088, 3 locals

       STORE           L02,#00
L0001: JL              L02,G0e [FALSE] L0002
       LOADW           #2b83,L02 -> -(SP)
       JE              (SP)+,L00 [TRUE] RFALSE
       INC             L02
       JUMP            L0001
L0002: STORE           L02,#00
L0003: JL              L02,G0e [FALSE] L0005
       LOADW           #2b83,L02 -> -(SP)
       JZ              (SP)+ [FALSE] L0004
       JUMP            L0006
L0004: INC             L02
       JUMP            L0003
L0005: STORE           L02,G0e
       INC             G0e
       MUL             L02,#02 -> -(SP)
       JL              (SP)+,#40 [TRUE] L0006
       CALL_2N         R0112 (#04)
L0006: GET_PROP_ADDR   L00,#28 -> -(SP)
       JZ              (SP)+ [FALSE] L0007
       CALL_VN         R0112 (#05,L00)
L0007: STOREW          #2b83,L02,L00
       PUT_PROP        L00,#28,L01
       RTRUE           

Routine R0089, 2 locals

       STORE           L01,#00
L0001: JL              L01,G0e [FALSE] L0003
       LOADW           #2b83,L01 -> -(SP)
       JE              (SP)+,L00 [FALSE] L0002
       JUMP            L0004
L0002: INC             L01
       JUMP            L0001
L0003: RFALSE          
L0004: GET_PROP_ADDR   L00,#28 -> -(SP)
       JZ              (SP)+ [FALSE] L0005
       CALL_VN         R0112 (#05,L00)
L0005: STOREW          #2b83,L01,#00
       PUT_PROP        L00,#28,#00
       RTRUE           

Routine R0090, 2 locals

       STORE           L01,#00
L0001: JL              L01,G0e [FALSE] L0002
       ADD             #8000,L00 -> -(SP)
       LOADW           #2b83,L01 -> -(SP)
       JE              (SP)+,(SP)+ [TRUE] RFALSE
       INC             L01
       JUMP            L0001
L0002: STORE           L01,#00
L0003: JL              L01,G0e [FALSE] L0005
       LOADW           #2b83,L01 -> -(SP)
       JZ              (SP)+ [FALSE] L0004
       JUMP            L0006
L0004: INC             L01
       JUMP            L0003
L0005: STORE           L01,G0e
       INC             G0e
       MUL             L01,#02 -> -(SP)
       JL              (SP)+,#40 [TRUE] L0006
       CALL_2N         R0112 (#04)
L0006: ADD             #8000,L00 -> -(SP)
       STOREW          #2b83,L01,(SP)+
       RTRUE           

Routine R0091, 2 locals

       STORE           L01,#00
L0001: JL              L01,G0e [FALSE] L0003
       ADD             #8000,L00 -> -(SP)
       LOADW           #2b83,L01 -> -(SP)
       JE              (SP)+,(SP)+ [FALSE] L0002
       JUMP            L0004
L0002: INC             L01
       JUMP            L0001
L0003: RFALSE          
L0004: STOREW          #2b83,L01,#00
       RTRUE           

Routine R0092, 0 locals

       JE              G0b,#ffff [FALSE] L0001
       STORE           G03,G0f
       STORE           G04,G0a
       JUMP            L0002
L0001: DIV             G0b,#3c -> G03
       MOD             G0b,#3c -> G04
L0002: RTRUE           

Routine R0093, 2 locals

       STORE           G0b,L00
       STORE           G0c,L01
       STORE           G0d,#00
       JL              L01,#00 [FALSE] L0001
       SUB             #00,L01 -> G0d
L0001: RTRUE           

Routine R0094, 0 locals

       PRINT           "
["
       SUB             G0f,G10 -> -(SP)
       CALL_VN         R0240 (#1007,#32,(SP)+)
       PRINT           ".]
"
       RTRUE           

Routine R0095, 2 locals

       STORE           L01,G16
       GET_PARENT      G14 -> -(SP)
       CALL_2S         R0096 ((SP)+) -> G16
       JZ              L01 [FALSE] L0001
       JE              G16,#01 [FALSE] L0001
       STORE           G02,G17
       JZ              L00 [FALSE] L0001
       CALL_2N         R0076 (#1f)
L0001: JE              L01,#01 [FALSE] L0002
       JZ              G16 [FALSE] L0002
       STORE           G17,G02
       STORE           G02,#13
       JZ              L00 [FALSE] L0002
       CALL_1N         R0177
       CALL_VS         R0240 (#1007,#09) -> -(SP)
       RET_POPPED      
L0002: JZ              L01 [FALSE] L0003
       JZ              G16 [FALSE] L0003
       STORE           G02,#13
L0003: RTRUE           

Routine R0096, 2 locals

       JZ              L00 [TRUE] RFALSE
       TEST_ATTR       L00,#09 [TRUE] RTRUE
       GET_CHILD       L00 -> -(SP) [FALSE] L0001
L0001: PULL            L01
       JZ              L01 [TRUE] L0003
L0002: CALL_2S         R0097 (L01) -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       GET_SIBLING     L01 -> L01 [TRUE] L0002
L0003: TEST_ATTR       L00,#04 [FALSE] L0006
       TEST_ATTR       L00,#0e [TRUE] L0004
       TEST_ATTR       L00,#17 [FALSE] L0005
L0004: GET_PARENT      L00 -> -(SP)
       CALL_2S         R0096 ((SP)+) -> -(SP)
       RET_POPPED      
L0005: JUMP            L0008
L0006: TEST_ATTR       L00,#07 [TRUE] L0007
       TEST_ATTR       L00,#17 [TRUE] L0007
       TEST_ATTR       L00,#14 [FALSE] L0008
L0007: GET_PARENT      L00 -> -(SP)
       CALL_2S         R0096 ((SP)+) -> -(SP)
       RET_POPPED      
L0008: RFALSE          

Routine R0097, 3 locals

       JZ              L00 [TRUE] RFALSE
       TEST_ATTR       L00,#09 [TRUE] RTRUE
       TEST_ATTR       L00,#07 [TRUE] L0001
       CALL_2S         R0044 (L00) -> -(SP)
       JE              (SP)+,#01 [FALSE] L0004
L0001: GET_CHILD       L00 -> -(SP) [FALSE] L0002
L0002: PULL            L00
       JZ              L00 [TRUE] L0004
L0003: CALL_2S         R0097 (L00) -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       GET_SIBLING     L00 -> L00 [TRUE] L0003
L0004: GET_PROP_ADDR   L00,#18 -> L02
       GET_PARENT      L00 -> -(SP)
       JZ              (SP)+ [TRUE] L0008
       JZ              L02 [TRUE] L0008
       LOADW           L02,#00 -> -(SP)
       JG              (SP)+,G05 [FALSE] L0005
       STORE           G71,#00
       STORE           G70,#01
       CALL_VN         R0086 (L00,#18)
       STORE           G70,#00
       JE              G71,#01 [TRUE] RTRUE
       JUMP            L0008
L0005: STORE           L01,#00
L0006: GET_PROP_ADDR   L00,#18 -> Gef
       JZ              Gef [TRUE] L0007
       GET_PROP_LEN    Gef -> Gef
L0007: PUSH            Gef
       MUL             #02,L01 -> -(SP)
       JL              (SP)+,(SP)+ [FALSE] L0008
       LOADW           L02,L01 -> -(SP)
       CALL_2S         R0097 ((SP)+) -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       INC             L01
       JUMP            L0006
L0008: RFALSE          

Routine R0098, 3 locals

       JE              G37,G14 [FALSE] L0001
       STORE           G37,L00
L0001: CLEAR_ATTR      G14,#17
       CLEAR_ATTR      G14,#03
       STORE           L02,L00
L0002: GET_PARENT      L02 -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       TEST_ATTR       L02,#00 [FALSE] L0003
       SET_ATTR        L02,#17
L0003: GET_PARENT      L02 -> L02
       JUMP            L0002
L0004: JE              G14,#14 [FALSE] L0005
       PUT_PROP        G14,#2e,S029
L0005: STORE           G14,L00
       JE              G14,#14 [FALSE] L0006
       PUT_PROP        G14,#2e,#ffff
L0006: SET_ATTR        G14,#17
       SET_ATTR        G14,#03
       SET_ATTR        G14,#00
       SET_ATTR        G14,#10
       STORE           L02,G14
L0007: GET_PARENT      L02 -> -(SP)
       JZ              (SP)+ [TRUE] L0008
       GET_PARENT      L02 -> L02
       JUMP            L0007
L0008: STORE           G02,L02
       STORE           G17,G02
       CALL_1N         R0126
       GET_PARENT      G14 -> -(SP)
       CALL_2S         R0096 ((SP)+) -> G16
       JZ              G16 [FALSE] L0009
       STORE           G02,#13
L0009: STORE           G1a,L01
       RTRUE           

Routine R0099, 3 locals

       SPLIT_WINDOW    #01
       SET_WINDOW      #01
       SET_CURSOR      #01,#01
       SET_TEXT_STYLE  REVERSE
       LOADB           #00,#21 -> L00
       SUB             L00,#1a -> L01
       SUB             L00,#0d -> L02
       STORE           Gef,L00
       JL              Gef,#01 [TRUE] L0002
L0001: PRINT_CHAR      ' '
       DEC             Gef
       JZ              Gef [FALSE] L0001
L0002: SET_CURSOR      #01,#02
       CALL_2N         R0105 (G02)
       LOADB           #00,#01 -> -(SP)
       AND             (SP)+,#02 -> -(SP)
       JZ              (SP)+ [FALSE] L0005
       JG              L00,#4c [FALSE] L0003
       SET_CURSOR      #01,L01
       PRINT_PADDR     S025
       PRINT_NUM       G03
       SET_CURSOR      #01,L02
       PRINT_PADDR     S026
       PRINT_NUM       G04
L0003: JG              L00,#3f [FALSE] L0004
       JG              L00,#4c [TRUE] L0004
       SET_CURSOR      #01,L02
       PRINT_NUM       G03
       PRINT           "/"
       PRINT_NUM       G04
L0004: JUMP            L0006
L0005: SET_CURSOR      #01,L01
       PRINT_PADDR     S027
       CALL_VN         R0007 (G03,G04)
L0006: SET_CURSOR      #01,#01
       SET_TEXT_STYLE  ROMAN
       SET_WINDOW      #00
       RTRUE           

Routine R0100, 6 locals

       CALL_VS         R0423 (L00,#31) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       MUL             G80,#01 -> -(SP)
       ADD             L01,(SP)+ -> -(SP)
       GET_PROP_ADDR   L00,#31 -> -(SP)
       LOADW           (SP)+,(SP)+ -> -(SP)
       PRINT_PADDR     (SP)+
       PRINT           " "
       JZ              L02 [TRUE] L0001
       RTRUE           
L0001: CALL_2N         R0101 (L00)
       RTRUE           
L0002: CALL_2S         R0062 (L00) -> L03
       JZ              L02 [TRUE] L0004
       JL              L03,#03 [TRUE] L0003
       JL              L03,#06 [TRUE] L0004
       JL              L03,#09 [FALSE] L0004
L0003: ADD             L03,#03 -> L03
L0004: LOADW           #328e,L03 -> L03
       MUL             L03,#01 -> -(SP)
       ADD             G80,(SP)+ -> -(SP)
       MUL             #0c,(SP)+ -> -(SP)
       ADD             #3276,(SP)+ -> L04
       ADD             L01,#03 -> -(SP)
       LOADW           L04,(SP)+ -> -(SP)
       LOADW           L04,L01 -> -(SP)
       JE              (SP)+,(SP)+ [TRUE] L0005
       STORE           L05,#01
L0005: JZ              G06 [TRUE] L0008
       JZ              L05 [TRUE] L0008
       STOREW          #32a6,#00,#a0
       OUTPUT_STREAM   REDIRECT_ENABLE,#32a6
       JZ              L02 [TRUE] L0006
       CALL_2N         R0106 (L02)
       JUMP            L0007
L0006: CALL_2N         R0101 (L00)
L0007: OUTPUT_STREAM   #fffd
       ADD             #32a6,#02 -> -(SP)
       CALL_2S         R0004 ((SP)+) -> -(SP)
       MUL             #03,(SP)+ -> -(SP)
       ADD             L01,(SP)+ -> L01
L0008: LOADW           L04,L01 -> -(SP)
       PRINT_PADDR     (SP)+
       JZ              L02 [TRUE] L0009
       RTRUE           
L0009: CALL_2N         R0101 (L00)
       RTRUE           

Routine R0101, 1 local

       JZ              L00 [FALSE] L0001
       PRINT_PADDR     S035
       RTRUE           
L0001: CALL_VS         R0429 (L00) -> -(SP)
       PULL            Gef
       JE              Gef,#03 [FALSE] L0002
       PRINT           "<routine "
       PRINT_NUM       L00
       PRINT           ">"
       RTRUE           
L0002: JE              Gef,#04 [FALSE] L0003
       PRINT           "<string ""
       PRINT_PADDR     L00
       PRINT           "">"
       RTRUE           
L0003: JE              Gef,#00 [FALSE] L0004
       PRINT           "<illegal object number "
       PRINT_NUM       L00
       PRINT           ">"
       RTRUE           
L0004: JE              L00,G14 [FALSE] L0005
       PRINT_PADDR     S030
       RTRUE           
L0005: JZ              G5d [TRUE] L0006
       GET_PROP_ADDR   L00,#2f -> -(SP)
       JZ              (SP)+ [TRUE] L0006
       CALL_VS         R0084 (L00,#2f,#01) -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
L0006: GET_PROP_ADDR   L00,#2e -> -(SP)
       JZ              (SP)+ [TRUE] L0007
       CALL_VS         R0084 (L00,#2e,#01) -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
L0007: PRINT_OBJ       L00
       RTRUE           

Routine R0102, 2 locals

       STORE           L01,G5d
       STORE           G5d,#01
       TEST_ATTR       L00,#10 [FALSE] L0001
       STORE           G5d,#ffff
       CALL_2N         R0101 (L00)
       RTRUE           
L0001: CALL_VS         R0423 (L00,#25) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_VN         R0084 (L00,#25,#01)
       PRINT           " "
       CALL_2N         R0101 (L00)
       STORE           G5d,L01
       RTRUE           
L0002: CALL_VN         R0100 (L00,#02)
       STORE           G5d,L01
       RTRUE           

Routine R0103, 2 locals

       STORE           L01,G5d
       STORE           G5d,#00
       TEST_ATTR       L00,#10 [FALSE] L0001
       STORE           G5d,#ffff
       CALL_2N         R0101 (L00)
       STORE           G5d,L01
       RTRUE           
L0001: CALL_VN         R0100 (L00,#01)
       STORE           G5d,L01
       RTRUE           

Routine R0104, 2 locals

       STORE           L01,G5d
       STORE           G5d,#00
       TEST_ATTR       L00,#10 [FALSE] L0001
       STORE           G5d,#ffff
       CALL_2N         R0101 (L00)
       STORE           G5d,L01
       RTRUE           
L0001: CALL_VN         R0100 (L00,#00)
       STORE           G5d,L01
       RTRUE           

Routine R0105, 2 locals

       STORE           L01,G5d
       STORE           G5d,#ffff
       CALL_2N         R0101 (L00)
       STORE           G5d,L01
       RTRUE           

Routine R0106, 1 local

       CALL_2N         R0006 (L00)
       RTRUE           

Routine R0107, 3 locals

       LOADW           #3224,#00 -> L02
       STORE           L01,#01
       JUMP            L0002
L0001: ADD             L01,#02 -> L01
L0002: JG              L01,L02 [TRUE] L0004
       LOADW           #3224,L01 -> -(SP)
       JE              L00,(SP)+ [FALSE] L0003
       ADD             L01,#01 -> -(SP)
       LOADW           #3224,(SP)+ -> -(SP)
       RET_POPPED      
L0003: JUMP            L0001
L0004: RFALSE          

Routine R0108, 1 local

       LOADW           L00,#00 -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       CALL_2S         R0112 (#08) -> -(SP)
       RET_POPPED      
L0001: LOADW           L00,#00 -> -(SP)
       RANDOM          (SP)+ -> -(SP)
       LOADW           L00,(SP)+ -> -(SP)
       RET_POPPED      

Routine R0109, 4 locals

       JE              L00,L01 [FALSE] L0001
       RFALSE          
L0001: JL              L00,#00 [FALSE] L0002
       JL              L01,#00 [TRUE] L0002
       RTRUE           
L0002: JL              L00,#00 [TRUE] L0003
       JL              L01,#00 [FALSE] L0003
       RET             #ffff
L0003: AND             L00,#7fff -> L02
       AND             L01,#7fff -> L03
       JG              L02,L03 [FALSE] L0004
       RTRUE           
L0004: RET             #ffff

Routine R0110, 1 local

       JZ              #3ba6 [TRUE] L0001
       SET_TEXT_STYLE  BOLDFACE
       PRINT_PADDR     S001
       SET_TEXT_STYLE  ROMAN
L0001: JZ              #3ba9 [TRUE] L0002
       PRINT_PADDR     S002
L0002: PRINT           "Release "
       LOADW           #00,#01 -> -(SP)
       AND             (SP)+,#03ff -> -(SP)
       PRINT_NUM       (SP)+
       PRINT           " / Serial number "
       STORE           L00,#12
L0003: JL              L00,#18 [FALSE] L0004
       LOADB           #00,L00 -> -(SP)
       PRINT_CHAR      (SP)+
       INC             L00
       JUMP            L0003
L0004: PRINT           " / Inform v"
       LOADB           #00,#3c -> Gef
       PRINT_CHAR      Gef
       LOADB           #00,#3d -> Gef
       PRINT_CHAR      Gef
       LOADB           #00,#3e -> Gef
       PRINT_CHAR      Gef
       LOADB           #00,#3f -> Gef
       PRINT_CHAR      Gef
       PRINT           " Library "
       PRINT_PADDR     S004
       NEW_LINE        
       RTRUE           

Routine R0111, 0 locals
    Action routine for:
        "version"

       CALL_1N         R0110
       JG              G06,#00 [FALSE] L0001
       PRINT           "Standard interpreter "
       DIV             G06,#0100 -> -(SP)
       PRINT_NUM       (SP)+
       PRINT           "."
       MOD             G06,#0100 -> -(SP)
       PRINT_NUM       (SP)+
       PRINT           " ("
       LOADB           #00,#1e -> -(SP)
       PRINT_NUM       (SP)+
       LOADB           #00,#1f -> -(SP)
       PRINT_CHAR      (SP)+
       PRINT           ") / "
       JUMP            L0002
L0001: PRINT           "Interpreter "
       LOADB           #00,#1e -> -(SP)
       PRINT_NUM       (SP)+
       PRINT           " Version "
       LOADB           #00,#1f -> -(SP)
       PRINT_CHAR      (SP)+
       PRINT           " / "
L0002: PRINT           "Library serial number "
       PRINT_PADDR     S003
       PRINT           "
"
       RTRUE           

Routine R0112, 3 locals

       PRINT           "** Library error "
       PRINT_NUM       L00
       PRINT           " ("
       PRINT_NUM       L01
       PRINT           ","
       PRINT_NUM       L02
       PRINT_RET       ") **"

Routine R0113, 0 locals

       JE              Ge9,#1007 [FALSE] L0001
       JE              G28,#13 [FALSE] L0001
       PRINT_PADDR     S107
       NEW_LINE        
       RTRUE           
L0001: RFALSE          

Routine R0114, 0 locals
    Action routine for:
        "places"

       CALL_1N         R0139
       RTRUE           

Routine R0115, 0 locals
    Action routine for:
        "objects"

       CALL_1N         R0140
       RTRUE           

Routine R0116, 2 locals

L0001: GET_SIBLING     L00 -> L00 [FALSE] L0002
L0002: JZ              L00 [FALSE] L0003
       RFALSE          
L0003: JZ              G1d [TRUE] L0004
       GET_PROP        L00,#19 -> -(SP)
       JE              (SP)+,G1d [TRUE] L0004
       JUMP            L0001
L0004: AND             G1c,#0200 -> -(SP)
       JZ              (SP)+ [TRUE] L0005
       JZ              L01 [FALSE] L0005
       TEST_ATTR       L00,#19 [TRUE] L0005
       JUMP            L0001
L0005: AND             G1c,#0800 -> -(SP)
       JZ              (SP)+ [TRUE] L0007
       TEST_ATTR       L00,#03 [TRUE] L0006
       TEST_ATTR       L00,#11 [FALSE] L0007
L0006: JUMP            L0001
L0007: RET             L00

orphan code fragment:

       RTRUE           

Routine R0117, 1 local

       AND             G1c,#20 -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
       AND             G1c,#10 -> -(SP)
       JZ              (SP)+ [TRUE] RFALSE
       TEST_ATTR       L00,#17 [TRUE] RTRUE
       TEST_ATTR       L00,#14 [TRUE] RTRUE
       TEST_ATTR       L00,#04 [FALSE] L0001
       TEST_ATTR       L00,#0e [TRUE] RTRUE
L0001: RFALSE          

Routine R0118, 2 locals

       GET_CHILD       L00 -> -(SP) [FALSE] L0001
L0001: JZ              (SP)+ [TRUE] L0002
       CALL_2S         R0117 (L00) -> -(SP)
       JZ              (SP)+ [FALSE] RFALSE
L0002: GET_CHILD       L01 -> -(SP) [FALSE] L0003
L0003: JZ              (SP)+ [TRUE] L0004
       CALL_2S         R0117 (L01) -> -(SP)
       JZ              (SP)+ [FALSE] RFALSE
L0004: AND             G1c,#84 -> -(SP)
       JZ              (SP)+ [TRUE] L0008
       TEST_ATTR       L00,#1a [TRUE] L0005
       TEST_ATTR       L01,#1a [TRUE] RFALSE
L0005: TEST_ATTR       L01,#1a [TRUE] L0006
       TEST_ATTR       L00,#1a [TRUE] RFALSE
L0006: TEST_ATTR       L00,#09 [TRUE] L0007
       TEST_ATTR       L01,#09 [TRUE] RFALSE
L0007: TEST_ATTR       L01,#09 [TRUE] L0008
       TEST_ATTR       L00,#09 [TRUE] RFALSE
L0008: CALL_VS         R0035 (L00,L01) -> -(SP)
       RET_POPPED      

Routine R0119, 2 locals

L0001: GET_CHILD       L00 -> -(SP) [FALSE] L0002
L0002: JZ              (SP)+ [TRUE] L0008
       GET_CHILD       L00 -> -(SP) [FALSE] L0003
L0003: GET_PROP        (SP)+,#19 -> -(SP)
       JE              (SP)+,L01 [TRUE] L0005
       GET_CHILD       L00 -> -(SP) [FALSE] L0004
L0004: INSERT_OBJ      (SP)+,"outside"
       JUMP            L0007
L0005: GET_CHILD       L00 -> -(SP) [FALSE] L0006
L0006: INSERT_OBJ      (SP)+,"inside"
L0007: JUMP            L0001
L0008: GET_CHILD       "inside" -> -(SP) [FALSE] L0009
L0009: JZ              (SP)+ [TRUE] L0011
       GET_CHILD       "inside" -> -(SP) [FALSE] L0010
L0010: INSERT_OBJ      (SP)+,L00
       JUMP            L0008
L0011: GET_CHILD       "outside" -> -(SP) [FALSE] L0012
L0012: JZ              (SP)+ [TRUE] L0014
       GET_CHILD       "outside" -> -(SP) [FALSE] L0013
L0013: INSERT_OBJ      (SP)+,L00
       JUMP            L0011
L0014: RTRUE           

Routine R0120, 4 locals

L0001: STORE           L01,L00
       JUMP            L0003
L0002: GET_SIBLING     L01 -> L01 [FALSE] L0003
L0003: JZ              L01 [TRUE] L0013
       GET_PROP        L01,#19 -> L02
       JZ              L02 [TRUE] L0012
       GET_SIBLING     L01 -> L01 [FALSE] L0004
L0004: JZ              L01 [TRUE] L0006
       GET_PROP        L01,#19 -> -(SP)
       JE              (SP)+,L02 [FALSE] L0006
       GET_SIBLING     L01 -> L01 [FALSE] L0005
L0005: JUMP            L0004
L0006: JZ              L01 [TRUE] RFALSE
       GET_SIBLING     L01 -> L03 [FALSE] L0007
L0007: JUMP            L0009
L0008: GET_SIBLING     L03 -> L03 [FALSE] L0009
L0009: JZ              L03 [TRUE] L0012
       GET_PROP        L03,#19 -> -(SP)
       JE              (SP)+,L02 [FALSE] L0011
       GET_PARENT      L00 -> -(SP)
       CALL_VN         R0119 ((SP)+,L02)
       GET_PARENT      L00 -> -(SP)
       GET_CHILD       (SP)+ -> L00 [FALSE] L0010
L0010: JUMP            L0001
L0011: JUMP            L0008
L0012: JUMP            L0002
L0013: RTRUE           

Routine R0121, 1 local

       JZ              L00 [FALSE] L0001
       RTRUE           
L0001: STORE           Gef,L00
       JL              Gef,#01 [TRUE] L0003
L0002: PRINT_CHAR      ' '
       DEC             Gef
       JZ              Gef [FALSE] L0002
L0003: RTRUE           

Routine R0122, 3 locals

       GET_PARENT      L00 -> -(SP)
       GET_CHILD       (SP)+ -> -(SP) [FALSE] L0001
L0001: JE              L00,(SP)+ [FALSE] L0002
       CALL_2N         R0120 (L00)
       GET_PARENT      L00 -> -(SP)
       GET_CHILD       (SP)+ -> L00 [FALSE] L0002
L0002: STORE           G1c,L01
       STORE           G20,#00
       CALL_VN         R0123 (L00,L02)
       RTRUE           

Routine R0123, 15 locals

       JG              L01,#00 [FALSE] L0002
       GET_PARENT      L00 -> -(SP)
       GET_CHILD       (SP)+ -> -(SP) [FALSE] L0001
L0001: JE              L00,(SP)+ [FALSE] L0002
       CALL_2N         R0120 (L00)
       GET_PARENT      L00 -> -(SP)
       GET_CHILD       (SP)+ -> L00 [FALSE] L0002
L0002: JZ              L00 [TRUE] RFALSE
       AND             G1c,#0200 -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       JZ              L01 [FALSE] L0004
       TEST_ATTR       L00,#19 [TRUE] L0004
       GET_SIBLING     L00 -> L00 [FALSE] L0003
L0003: JUMP            L0002
L0004: AND             G1c,#0800 -> -(SP)
       JZ              (SP)+ [TRUE] L0007
       TEST_ATTR       L00,#03 [TRUE] L0005
       TEST_ATTR       L00,#11 [FALSE] L0007
L0005: GET_SIBLING     L00 -> L00 [FALSE] L0006
L0006: JUMP            L0002
L0007: JUMP            L0008
L0008: ADD             #2e43,L02 -> L03
       ADD             #2dc3,L02 -> L04
       STORE           L05,L00
       STORE           L06,#00
       JUMP            L0010
L0009: CALL_VS         R0116 (L05,L01) -> L05
       INC             L06
L0010: JZ              L05 [TRUE] L0012
       ADD             L06,L02 -> -(SP)
       JL              (SP)+,#80 [FALSE] L0012
       STOREB          L03,L06,#00
       GET_PROP        L05,#17 -> -(SP)
       JZ              (SP)+ [TRUE] L0011
       INC             L07
L0011: JUMP            L0009
L0012: AND             G1c,#0400 -> -(SP)
       JZ              (SP)+ [TRUE] L0017
       JE              L06,#01 [FALSE] L0013
       TEST_ATTR       L00,#1e [TRUE] L0013
       PRINT_PADDR     S036
       JUMP            L0014
L0013: PRINT_PADDR     S037
L0014: AND             G1c,#01 -> -(SP)
       JZ              (SP)+ [TRUE] L0015
       PRINT           ":
"
       JUMP            L0016
L0015: PRINT_CHAR      ' '
L0016: SUB             G1c,#0400 -> G1c
L0017: ADD             L02,L06 -> -(SP)
       ADD             (SP)+,#01 -> L02
       JL              L07,#02 [FALSE] L0018
       JUMP            L0068
L0018: STORE           L0b,#01
       STORE           L05,L00
       STORE           L07,#00
       JUMP            L0020
L0019: CALL_VS         R0116 (L05,L01) -> L05
       INC             L07
L0020: JL              L07,L06 [FALSE] L0026
       LOADB           L03,L07 -> -(SP)
       JZ              (SP)+ [FALSE] L0025
       STOREB          L03,L07,L0b
       STOREB          L04,L0b,#01
       CALL_VS         R0116 (L05,L01) -> L09
       ADD             L07,#01 -> L0a
       JUMP            L0022
L0021: CALL_VS         R0116 (L09,L01) -> L09
       INC             L0a
L0022: JZ              L09 [TRUE] L0024
       JL              L0a,L06 [FALSE] L0024
       LOADB           L03,L0a -> -(SP)
       JZ              (SP)+ [FALSE] L0023
       GET_PROP        L05,#17 -> -(SP)
       JZ              (SP)+ [TRUE] L0023
       GET_PROP        L09,#17 -> -(SP)
       JZ              (SP)+ [TRUE] L0023
       CALL_VS         R0118 (L05,L09) -> -(SP)
       JE              (SP)+,#01 [FALSE] L0023
       LOADB           L04,L0b -> -(SP)
       ADD             (SP)+,#01 -> -(SP)
       STOREB          L04,L0b,(SP)+
       STOREB          L03,L0a,L0b
L0023: JUMP            L0021
L0024: INC             L0b
L0025: JUMP            L0019
L0026: DEC             L0b
       STORE           L05,#01
       STORE           L06,L00
       STORE           L07,#00
       JUMP            L0028
L0027: INC             L05
       INC             L0d
L0028: JG              L05,L0b [TRUE] L0032
L0029: LOADB           L03,L07 -> -(SP)
       JE              (SP)+,L05 [TRUE] L0030
       SUB             #00,L05 -> -(SP)
       LOADB           L03,L07 -> -(SP)
       JE              (SP)+,(SP)+ [TRUE] L0030
       INC             L07
       CALL_VS         R0116 (L06,L01) -> L06
       JUMP            L0029
L0030: LOADB           L04,L05 -> L0a
       GET_PROP        L06,#19 -> -(SP)
       JE              (SP)+,#00,G1d [TRUE] L0031
       GET_PROP        L06,#19 -> -(SP)
       CALL_2S         R0083 ((SP)+) -> -(SP)
       JE              (SP)+,#02,#03 [FALSE] L0031
       GET_PROP        L06,#19 -> -(SP)
       JE              (SP)+,L0e [FALSE] L0031
       DEC             L0d
L0031: GET_PROP        L06,#19 -> L0e
       JUMP            L0027
L0032: DEC             L0d
       STORE           L05,#01
       STORE           L06,L00
       STORE           L07,#00
       STORE           L0e,#00
       JUMP            L0034
L0033: INC             L05
       DEC             L0d
L0034: JL              L0d,#00 [TRUE] L0067
L0035: LOADB           L03,L07 -> -(SP)
       JE              (SP)+,L05 [TRUE] L0036
       SUB             #00,L05 -> -(SP)
       LOADB           L03,L07 -> -(SP)
       JE              (SP)+,(SP)+ [TRUE] L0036
       INC             L07
       CALL_VS         R0116 (L06,L01) -> L06
       JUMP            L0035
L0036: GET_PROP        L06,#19 -> -(SP)
       JE              (SP)+,#00,G1d [TRUE] L0056
       GET_PROP        L06,#19 -> -(SP)
       JE              (SP)+,L0e [FALSE] L0037
       INC             L0d
       JUMP            L0066
L0037: CALL_VS         R0116 (L06,L01) -> L08
       JZ              L08 [TRUE] L0038
       GET_PROP        L06,#19 -> -(SP)
       GET_PROP        L08,#19 -> -(SP)
       JE              (SP)+,(SP)+ [TRUE] L0039
L0038: JUMP            L0056
L0039: GET_PROP        L06,#19 -> -(SP)
       CALL_2S         R0083 ((SP)+) -> L08
       JE              L08,#02,#03 [FALSE] L0056
       STORE           L0c,L06
       STORE           G1f,#01
       STORE           L09,L07
       STORE           L0a,L05
L0040: JL              L0a,L0b [FALSE] L0044
       GET_PROP        L06,#19 -> -(SP)
       GET_PROP        L0c,#19 -> -(SP)
       JE              (SP)+,(SP)+ [FALSE] L0044
       INC             L0a
L0041: LOADB           L03,L09 -> -(SP)
       JE              (SP)+,L0a [TRUE] L0042
       SUB             #00,L0a -> -(SP)
       LOADB           L03,L09 -> -(SP)
       JE              (SP)+,(SP)+ [TRUE] L0042
       INC             L09
       CALL_VS         R0116 (L0c,L01) -> L0c
       JUMP            L0041
L0042: GET_PROP        L06,#19 -> -(SP)
       GET_PROP        L0c,#19 -> -(SP)
       JE              (SP)+,(SP)+ [FALSE] L0043
       INC             G1f
L0043: JUMP            L0040
L0044: JE              G1f,#01 [FALSE] L0045
       JUMP            L0056
L0045: AND             G1c,#02 -> -(SP)
       JZ              (SP)+ [TRUE] L0046
       ADD             L01,G20 -> -(SP)
       MUL             #02,(SP)+ -> -(SP)
       CALL_2N         R0121 ((SP)+)
L0046: JE              L08,#03 [FALSE] L0050
       STORE           L0c,#00
       STORE           L09,#00
L0047: JL              L09,G1f [FALSE] L0048
       ADD             L09,L05 -> -(SP)
       LOADB           L04,(SP)+ -> -(SP)
       ADD             L0c,(SP)+ -> L0c
       INC             L09
       JUMP            L0047
L0048: CALL_2N         R0106 (L0c)
       PRINT           " "
       GET_PROP        L06,#19 -> -(SP)
       PRINT_PADDR     (SP)+
       AND             G1c,#08 -> -(SP)
       JZ              (SP)+ [TRUE] L0049
       PRINT           " ("
L0049: AND             G1c,#02 -> -(SP)
       JZ              (SP)+ [TRUE] L0050
       PRINT           ":
"
L0050: STORE           L0c,G1c
       JE              L08,#03 [TRUE] L0051
       STORE           G21,#01
       STORE           G34,L06
       ADD             L01,G20 -> G35
       CALL_VS         R0086 (L06,#19) -> -(SP)
       JE              (SP)+,#01 [FALSE] L0051
       JUMP            L0054
L0051: GET_PROP        L06,#19 -> G1d
       STORE           G1e,L06
       INC             G20
       CALL_VN         R0123 (L06,L01,L02)
       DEC             G20
       STORE           G1d,#00
       STORE           G1e,#00
       JE              L08,#03 [FALSE] L0053
       AND             L0c,#08 -> -(SP)
       JZ              (SP)+ [TRUE] L0052
       PRINT           ")"
L0052: JUMP            L0054
L0053: STORE           G21,#02
       STORE           G34,L06
       ADD             L01,G20 -> G35
       CALL_VN         R0086 (L06,#19)
L0054: AND             L0c,#01 -> -(SP)
       JZ              (SP)+ [TRUE] L0055
       AND             G1c,#01 -> -(SP)
       JZ              (SP)+ [FALSE] L0055
       NEW_LINE        
L0055: STORE           G1c,L0c
       GET_PROP        L06,#19 -> L0e
       JUMP            L0064
L0056: SUB             #00,L0d -> -(SP)
       CALL_VS         R0124 (L06,L01,(SP)+) -> -(SP)
       JE              (SP)+,#01 [FALSE] L0057
       JUMP            L0066
L0057: LOADB           L04,L05 -> -(SP)
       JE              (SP)+,#01 [FALSE] L0061
       AND             G1c,#1000 -> -(SP)
       JZ              (SP)+ [TRUE] L0058
       CALL_2N         R0105 (L06)
       JUMP            L0060
L0058: AND             G1c,#0100 -> -(SP)
       JZ              (SP)+ [TRUE] L0059
       CALL_2N         R0103 (L06)
       JUMP            L0060
L0059: CALL_2N         R0102 (L06)
L0060: JUMP            L0063
L0061: AND             G1c,#0100 -> -(SP)
       JZ              (SP)+ [TRUE] L0062
       LOADB           L04,L05 -> -(SP)
       CALL_VN         R0100 (L06,#01,(SP)+)
L0062: LOADB           L04,L05 -> -(SP)
       CALL_2N         R0106 ((SP)+)
       PRINT           " "
       CALL_VN         R0084 (L06,#17,#01)
L0063: CALL_VN         R0125 (L06,L01,L02)
L0064: AND             G1c,#08 -> -(SP)
       JZ              (SP)+ [TRUE] L0066
       JE              L0d,#01 [FALSE] L0065
       PRINT_PADDR     S040
L0065: JG              L0d,#01 [FALSE] L0066
       PRINT           ", "
L0066: JUMP            L0033
L0067: RTRUE           
L0068: STORE           L0b,L06
       STORE           L05,#01
       STORE           L06,L00
       JUMP            L0070
L0069: CALL_VS         R0116 (L06,L01) -> L06
       INC             L05
       INC             L0d
L0070: JG              L05,L0b [TRUE] L0072
       GET_PROP        L06,#19 -> -(SP)
       JE              (SP)+,#00,G1d [TRUE] L0071
       GET_PROP        L06,#19 -> -(SP)
       CALL_2S         R0083 ((SP)+) -> -(SP)
       JE              (SP)+,#02,#03 [FALSE] L0071
       GET_PROP        L06,#19 -> -(SP)
       JE              (SP)+,L0e [FALSE] L0071
       DEC             L0d
L0071: GET_PROP        L06,#19 -> L0e
       JUMP            L0069
L0072: STORE           L05,#01
       STORE           L06,L00
       STORE           L0e,#00
       JUMP            L0074
L0073: CALL_VS         R0116 (L06,L01) -> L06
       INC             L05
L0074: JG              L05,L0d [TRUE] L0095
       GET_PROP        L06,#19 -> -(SP)
       JE              (SP)+,#00,G1d [TRUE] L0087
       GET_PROP        L06,#19 -> -(SP)
       JE              (SP)+,L0e [FALSE] L0075
       DEC             L05
       JUMP            L0094
L0075: CALL_VS         R0116 (L06,L01) -> L07
       JZ              L07 [TRUE] L0076
       GET_PROP        L06,#19 -> -(SP)
       GET_PROP        L07,#19 -> -(SP)
       JE              (SP)+,(SP)+ [TRUE] L0077
L0076: JUMP            L0087
L0077: GET_PROP        L06,#19 -> -(SP)
       CALL_2S         R0083 ((SP)+) -> L07
       JE              L07,#02,#03 [FALSE] L0087
       AND             G1c,#02 -> -(SP)
       JZ              (SP)+ [TRUE] L0078
       ADD             L01,G20 -> -(SP)
       MUL             #02,(SP)+ -> -(SP)
       CALL_2N         R0121 ((SP)+)
L0078: JE              L07,#03 [FALSE] L0081
       STORE           L0c,L06
       STORE           L09,#00
L0079: CALL_VS         R0116 (L0c,L01) -> L0c
       INC             L09
       GET_PROP        L06,#19 -> -(SP)
       GET_PROP        L0c,#19 -> -(SP)
       JE              (SP)+,(SP)+ [TRUE] L0079
       CALL_2N         R0106 (L09)
       PRINT           " "
       GET_PROP        L06,#19 -> -(SP)
       PRINT_PADDR     (SP)+
       AND             G1c,#08 -> -(SP)
       JZ              (SP)+ [TRUE] L0080
       PRINT           " ("
L0080: AND             G1c,#02 -> -(SP)
       JZ              (SP)+ [TRUE] L0081
       PRINT           ":
"
L0081: STORE           L0c,G1c
       JE              L07,#03 [TRUE] L0082
       STORE           G21,#01
       STORE           G34,L06
       ADD             L01,G20 -> G35
       CALL_VS         R0086 (L06,#19) -> -(SP)
       JE              (SP)+,#01 [FALSE] L0082
       JUMP            L0085
L0082: GET_PROP        L06,#19 -> G1d
       STORE           G1e,L06
       INC             G20
       CALL_VN         R0123 (L06,L01,L02)
       DEC             G20
       STORE           G1d,#00
       STORE           G1e,#00
       JE              L07,#03 [FALSE] L0084
       AND             L0c,#08 -> -(SP)
       JZ              (SP)+ [TRUE] L0083
       PRINT           ")"
L0083: JUMP            L0085
L0084: STORE           G21,#02
       STORE           G34,L06
       ADD             L01,G20 -> G35
       CALL_VN         R0086 (L06,#19)
L0085: AND             L0c,#01 -> -(SP)
       JZ              (SP)+ [TRUE] L0086
       AND             G1c,#01 -> -(SP)
       JZ              (SP)+ [FALSE] L0086
       NEW_LINE        
L0086: STORE           G1c,L0c
       GET_PROP        L06,#19 -> L0e
       JUMP            L0092
L0087: SUB             L05,L0d -> -(SP)
       CALL_VS         R0124 (L06,L01,(SP)+) -> -(SP)
       JE              (SP)+,#01 [FALSE] L0088
       JUMP            L0094
L0088: AND             G1c,#1000 -> -(SP)
       JZ              (SP)+ [TRUE] L0089
       CALL_2N         R0105 (L06)
       JUMP            L0091
L0089: AND             G1c,#0100 -> -(SP)
       JZ              (SP)+ [TRUE] L0090
       CALL_2N         R0103 (L06)
       JUMP            L0091
L0090: CALL_2N         R0102 (L06)
L0091: CALL_VN         R0125 (L06,L01,L02)
L0092: AND             G1c,#08 -> -(SP)
       JZ              (SP)+ [TRUE] L0094
       SUB             L0d,#01 -> -(SP)
       JE              L05,(SP)+ [FALSE] L0093
       PRINT_PADDR     S040
L0093: SUB             L0d,#01 -> -(SP)
       JL              L05,(SP)+ [FALSE] L0094
       PRINT           ", "
L0094: JUMP            L0073
L0095: RTRUE           

Routine R0124, 4 locals

       AND             G1c,#02 -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       ADD             L01,G20 -> -(SP)
       MUL             #02,(SP)+ -> -(SP)
       CALL_2N         R0121 ((SP)+)
L0001: AND             G1c,#04 -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       GET_PROP        L00,#16 -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       STORE           G21,#01
       CALL_VS         R0084 (L00,#16,#01) -> L03
       JE              L03,#01 [FALSE] L0004
       AND             G1c,#08 -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       JE              L02,#ffff [FALSE] L0002
       PRINT_PADDR     S040
L0002: JL              L02,#ffff [FALSE] L0003
       PRINT           ", "
L0003: AND             G1c,#01 -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       NEW_LINE        
L0004: RET             L03

Routine R0125, 8 locals

       AND             G1c,#80 -> -(SP)
       JZ              (SP)+ [TRUE] L0012
       STORE           L07,#00
       TEST_ATTR       L00,#09 [FALSE] L0001
       TEST_ATTR       G02,#09 [TRUE] L0001
       ADD             L07,#01 -> L07
L0001: TEST_ATTR       L00,#04 [FALSE] L0002
       TEST_ATTR       L00,#0e [TRUE] L0002
       ADD             L07,#02 -> L07
L0002: TEST_ATTR       L00,#04 [FALSE] L0005
       TEST_ATTR       L00,#0e [TRUE] L0003
       TEST_ATTR       L00,#17 [FALSE] L0005
L0003: GET_CHILD       L00 -> -(SP) [FALSE] L0004
L0004: JZ              (SP)+ [FALSE] L0005
       ADD             L07,#04 -> L07
L0005: JE              L07,#01 [FALSE] L0006
       CALL_VN         R0240 (#1006,#01,L00)
L0006: JE              L07,#02 [FALSE] L0007
       CALL_VN         R0240 (#1006,#02,L00)
L0007: JE              L07,#03 [FALSE] L0008
       CALL_VN         R0240 (#1006,#03,L00)
L0008: JE              L07,#04 [FALSE] L0009
       CALL_VN         R0240 (#1006,#04,L00)
L0009: JE              L07,#05 [FALSE] L0010
       CALL_VN         R0240 (#1006,#05,L00)
L0010: JE              L07,#06 [FALSE] L0011
       CALL_VN         R0240 (#1006,#06,L00)
L0011: JE              L07,#07 [FALSE] L0012
       CALL_VN         R0240 (#1006,#07,L00)
L0012: AND             G1c,#04 -> -(SP)
       JZ              (SP)+ [TRUE] L0030
       GET_PROP        L00,#16 -> -(SP)
       JZ              (SP)+ [TRUE] L0014
       STORE           G21,#02
       CALL_VS         R0086 (L00,#16) -> -(SP)
       JZ              (SP)+ [TRUE] L0014
       AND             G1c,#01 -> -(SP)
       JZ              (SP)+ [TRUE] L0013
       NEW_LINE        
L0013: RTRUE           
L0014: TEST_ATTR       L00,#09 [FALSE] L0015
       TEST_ATTR       L00,#1a [FALSE] L0015
       CALL_VN         R0240 (#1006,#08)
       STORE           L04,#01
       JUMP            L0017
L0015: TEST_ATTR       L00,#09 [FALSE] L0016
       CALL_VN         R0240 (#1006,#09,L00)
       STORE           L04,#01
L0016: TEST_ATTR       L00,#1a [FALSE] L0017
       CALL_VN         R0240 (#1006,#0a,L00)
       STORE           L04,#01
L0017: TEST_ATTR       L00,#04 [FALSE] L0029
       TEST_ATTR       L00,#0f [FALSE] L0026
       JE              L04,#01 [FALSE] L0018
       PRINT_PADDR     S040
       JUMP            L0019
L0018: CALL_VN         R0240 (#1006,#0b,L00)
L0019: TEST_ATTR       L00,#0e [FALSE] L0023
       GET_CHILD       L00 -> -(SP) [FALSE] L0020
L0020: JZ              (SP)+ [FALSE] L0021
       CALL_VN         R0240 (#1006,#0d,L00)
       JUMP            L0022
L0021: CALL_VN         R0240 (#1006,#0c,L00)
L0022: JUMP            L0025
L0023: TEST_ATTR       L00,#0a [FALSE] L0024
       TEST_ATTR       L00,#0b [FALSE] L0024
       CALL_VN         R0240 (#1006,#0f,L00)
       JUMP            L0025
L0024: CALL_VN         R0240 (#1006,#0e,L00)
L0025: STORE           L04,#01
       JUMP            L0029
L0026: GET_CHILD       L00 -> -(SP) [FALSE] L0027
L0027: JZ              (SP)+ [FALSE] L0029
       TEST_ATTR       L00,#17 [FALSE] L0029
       JE              L04,#01 [FALSE] L0028
       CALL_VN         R0240 (#1006,#10,L00)
       JUMP            L0029
L0028: CALL_VN         R0240 (#1006,#11,L00)
L0029: JE              L04,#01 [FALSE] L0030
       PRINT           ")"
L0030: AND             G1c,#0800 -> -(SP)
       JZ              (SP)+ [FALSE] L0034
       STORE           Gef,#00
       GET_CHILD       L00 -> -(SP) [FALSE] L0032
L0031: INC             Gef
       GET_SIBLING     (SP)+ -> -(SP) [TRUE] L0031
L0032: PULL            Gee
       STORE           L05,Gef
       GET_CHILD       L00 -> L04 [FALSE] L0033
L0033: JUMP            L0038
L0034: STORE           L05,#00
       GET_CHILD       L00 -> -(SP) [FALSE] L0035
L0035: PULL            L06
       JZ              L06 [TRUE] L0038
L0036: TEST_ATTR       L06,#03 [TRUE] L0037
       TEST_ATTR       L06,#11 [TRUE] L0037
       INC             L05
       STORE           L04,L06
L0037: GET_SIBLING     L06 -> L06 [TRUE] L0036
L0038: AND             G1c,#20 -> -(SP)
       JZ              (SP)+ [TRUE] L0040
       JG              L05,#00 [FALSE] L0040
       AND             G1c,#08 -> -(SP)
       JZ              (SP)+ [TRUE] L0039
       CALL_VN         R0240 (#1006,#12,L00)
L0039: STORE           L03,#01
L0040: AND             G1c,#10 -> -(SP)
       JZ              (SP)+ [TRUE] L0051
       JG              L05,#00 [FALSE] L0051
       TEST_ATTR       L00,#14 [FALSE] L0045
       AND             G1c,#08 -> -(SP)
       JZ              (SP)+ [TRUE] L0044
       AND             G1c,#40 -> -(SP)
       JZ              (SP)+ [TRUE] L0041
       CALL_VN         R0240 (#1006,#13,L00)
       JUMP            L0042
L0041: CALL_VN         R0240 (#1006,#14,L00)
L0042: TEST_ATTR       L00,#00 [FALSE] L0043
       PRINT_PADDR     S041
       JUMP            L0044
L0043: PRINT_PADDR     S042
L0044: STORE           L03,#01
L0045: TEST_ATTR       L00,#04 [FALSE] L0051
       TEST_ATTR       L00,#0e [TRUE] L0046
       TEST_ATTR       L00,#17 [FALSE] L0051
L0046: AND             G1c,#08 -> -(SP)
       JZ              (SP)+ [TRUE] L0050
       AND             G1c,#40 -> -(SP)
       JZ              (SP)+ [TRUE] L0047
       CALL_VN         R0240 (#1006,#15,L00)
       JUMP            L0048
L0047: CALL_VN         R0240 (#1006,#16,L00)
L0048: TEST_ATTR       L00,#00 [FALSE] L0049
       PRINT_PADDR     S041
       JUMP            L0050
L0049: PRINT_PADDR     S042
L0050: STORE           L03,#01
L0051: JE              L03,#01 [FALSE] L0054
       AND             G1c,#08 -> -(SP)
       JZ              (SP)+ [TRUE] L0054
       JG              L05,#01 [TRUE] L0052
       TEST_ATTR       L04,#1e [FALSE] L0053
L0052: PRINT_PADDR     S039
       JUMP            L0054
L0053: PRINT_PADDR     S038
L0054: AND             G1c,#01 -> -(SP)
       JZ              (SP)+ [TRUE] L0055
       NEW_LINE        
L0055: JE              L03,#01 [FALSE] L0057
       GET_CHILD       L00 -> L00 [FALSE] L0056
L0056: ADD             L01,#01 -> -(SP)
       CALL_VN         R0123 (L00,(SP)+,L02)
       AND             G1c,#40 -> -(SP)
       JZ              (SP)+ [TRUE] L0057
       PRINT           ")"
L0057: RTRUE           

Routine R0126, 6 locals

       STORE           L00,#01
L0001: GET_PROP_ADDR   L00,#27 -> L04
       JZ              L04 [TRUE] L0010
       TEST_ATTR       L00,#01 [TRUE] L0010
       LOADW           L04,#00 -> -(SP)
       CALL_2S         R0083 ((SP)+) -> -(SP)
       JE              (SP)+,#02 [FALSE] L0004
       CALL_VS         R0418 (L00,#27) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       INSERT_OBJ      L00,G02
       JUMP            L0003
L0002: REMOVE_OBJ      L00
L0003: JUMP            L0010
L0004: GET_PROP_ADDR   L00,#27 -> Gef
       JZ              Gef [TRUE] L0005
       GET_PROP_LEN    Gef -> Gef
L0005: STORE           L01,Gef
       STORE           L02,#00
L0006: DIV             L01,#02 -> -(SP)
       JL              L02,(SP)+ [FALSE] L0009
       LOADW           L04,L02 -> L03
       JE              L03,G02 [TRUE] L0007
       JIN             L03,G02 [FALSE] L0008
L0007: INSERT_OBJ      L00,G02
       STORE           L05,#01
L0008: INC             L02
       JUMP            L0006
L0009: JZ              L05 [FALSE] L0010
       REMOVE_OBJ      L00
L0010: INC             L00
       JG              L00,#00b8 [TRUE] L0011
       JUMP            L0001
L0011: RTRUE           

Routine R0127, 2 locals

       INSERT_OBJ      G14,L00
L0001: GET_PARENT      L00 -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       GET_PARENT      L00 -> L00
       JUMP            L0001
L0002: STORE           G02,L00
       STORE           G17,G02
       CALL_1N         R0126
       CALL_2N         R0095 (#01)
       JZ              L01 [FALSE] L0003
       CALL_2N         R0076 (#1f)
L0003: JE              L01,#01 [FALSE] L0004
       CALL_1N         R0177
       CALL_1N         R0178
L0004: JE              L01,#02 [FALSE] L0005
       CALL_2N         R0179 (#01)
L0005: RTRUE           

Routine R0128, 1 local

       CALL_VN         R0076 (#1b,L00)
       CALL_2N         R0076 (#1f)
       RTRUE           

Routine R0129, 1 local

L0001: STORE           Gec,#2f43
       STOREB          Gec,#01,#00
       CALL_1N         R0099
       READ            Gec,#2fbc -> Gef
       LOADW           #2fbc,#01 -> L00
       JE              L00,"y","yes","yes" [TRUE] RTRUE
       JE              L00,"n","no","no" [TRUE] RFALSE
       CALL_VN         R0240 (#01,#01)
       PRINT           "> "
       JUMP            L0001

orphan code fragment:

       RTRUE           

Routine R0130, 0 locals
    Action routine for:
        "die"

       CALL_VN         R0240 (#01,#02)
       CALL_1S         R0129 -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       QUIT            
L0001: RTRUE           

Routine R0131, 0 locals
    Action routine for:
        "restart"

       CALL_VN         R0240 (#02,#01)
       CALL_1S         R0129 -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       RESTART         
       CALL_VN         R0240 (#02,#02)
L0001: RTRUE           

Routine R0132, 0 locals
    Action routine for:
        "restore"

       RESTORE         -> Gef
       JE              Gef,#02 [TRUE] L0001
       CALL_VS         R0240 (#03,#01) -> -(SP)
       RET_POPPED      
L0001: CALL_VN         R0240 (#03,#02)
       RTRUE           

Routine R0133, 0 locals
    Action routine for:
        "save"

       SAVE            -> Gef
       JZ              Gef [FALSE] L0001
       CALL_VS         R0240 (#04,#01) -> -(SP)
       RET_POPPED      
L0001: CALL_VN         R0240 (#04,#02)
       RTRUE           

Routine R0134, 0 locals
    Action routine for:
        "verify"

       VERIFY          [TRUE] L0001
       JUMP            L0002
L0001: CALL_VS         R0240 (#05,#01) -> -(SP)
       RET_POPPED      
L0002: CALL_VN         R0240 (#05,#02)
       RTRUE           

Routine R0135, 0 locals
    Action routine for:
        "script"
        "script on"

       LOADW           #00,#08 -> -(SP)
       AND             (SP)+,#01 -> G09
       JZ              G09 [TRUE] L0001
       CALL_VS         R0240 (#06,#01) -> -(SP)
       RET_POPPED      
L0001: OUTPUT_STREAM   SCRIPTING_ENABLE
       LOADW           #00,#08 -> -(SP)
       AND             (SP)+,#01 -> -(SP)
       JZ              (SP)+ [FALSE] L0002
       CALL_VS         R0240 (#06,#03) -> -(SP)
       RET_POPPED      
L0002: CALL_VN         R0240 (#06,#02)
       CALL_1N         R0111
       STORE           G09,#01
       RTRUE           

Routine R0136, 0 locals
    Action routine for:
        "script off"
        "noscript"

       LOADW           #00,#08 -> -(SP)
       AND             (SP)+,#01 -> G09
       JZ              G09 [FALSE] L0001
       CALL_VS         R0240 (#07,#01) -> -(SP)
       RET_POPPED      
L0001: CALL_VN         R0240 (#07,#02)
       OUTPUT_STREAM   #fffe
       LOADW           #00,#08 -> -(SP)
       AND             (SP)+,#01 -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_VS         R0240 (#07,#03) -> -(SP)
       RET_POPPED      
L0002: STORE           G09,#00
       RTRUE           

Routine R0137, 0 locals
    Action routine for:
        "notify on"

       STORE           G11,#01
       CALL_2N         R0240 (#08)
       RTRUE           

Routine R0138, 0 locals
    Action routine for:
        "notify off"

       STORE           G11,#00
       CALL_2N         R0240 (#09)
       RTRUE           

Routine R0139, 3 locals

       CALL_2N         R0240 (#0a)
       STORE           L00,#01
L0001: TEST_ATTR       L00,#18 [FALSE] L0002
       INC             L01
L0002: INC             L00
       JG              L00,#00b8 [TRUE] L0003
       JUMP            L0001
L0003: STORE           L00,#01
L0004: TEST_ATTR       L00,#18 [FALSE] L0007
       CALL_2N         R0105 (L00)
       INC             L02
       JE              L02,L01 [FALSE] L0005
       PRINT_RET       "."
L0005: SUB             L01,#01 -> -(SP)
       JE              L02,(SP)+ [FALSE] L0006
       PRINT_PADDR     S040
       JUMP            L0007
L0006: PRINT           ", "
L0007: INC             L00
       JG              L00,#00b8 [TRUE] L0008
       JUMP            L0004
L0008: RTRUE           

Routine R0140, 3 locals

       CALL_VN         R0240 (#0b,#01)
       STORE           L00,#01
L0001: TEST_ATTR       L00,#0c [FALSE] L0011
       STORE           L02,#01
       CALL_2N         R0103 (L00)
       GET_PARENT      L00 -> L01
       JE              L01,G14 [FALSE] L0004
       TEST_ATTR       L00,#1a [FALSE] L0002
       CALL_VN         R0240 (#0b,#03)
       JUMP            L0003
L0002: CALL_VN         R0240 (#0b,#04)
L0003: JUMP            L0010
L0004: TEST_ATTR       L01,#00 [FALSE] L0005
       CALL_VN         R0240 (#0b,#05)
       JUMP            L0010
L0005: TEST_ATTR       L01,#18 [FALSE] L0006
       CALL_VN         R0240 (#0b,#06,L01)
       JUMP            L0010
L0006: TEST_ATTR       L01,#04 [FALSE] L0007
       CALL_VN         R0240 (#0b,#08,L01)
       JUMP            L0010
L0007: TEST_ATTR       L01,#14 [FALSE] L0008
       CALL_VN         R0240 (#0b,#09,L01)
       JUMP            L0010
L0008: TEST_ATTR       L01,#07 [FALSE] L0009
       CALL_VN         R0240 (#0b,#07,L01)
       JUMP            L0010
L0009: CALL_VN         R0240 (#0b,#0a)
L0010: NEW_LINE        
L0011: INC             L00
       JG              L00,#00b8 [TRUE] L0012
       JUMP            L0001
L0012: JZ              L02 [FALSE] L0013
       CALL_VN         R0240 (#0b,#02)
L0013: RTRUE           

Routine R0141, 0 locals
    Action routine for:
        "score"

       CALL_2N         R0240 (#0c)
       CALL_1N         R0407
       RTRUE           

Routine R0142, 1 local

       LOADB           #33ef,L00 -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       STOREB          #33ef,L00,#01
       LOADB           #33e8,L00 -> -(SP)
       ADD             G0f,(SP)+ -> G0f
L0001: RTRUE           

Routine R0143, 2 locals

       PRINT           "  "
       STORE           L01,L00
       JL              L01,#00 [FALSE] L0001
       SUB             #00,L00 -> L01
       MUL             L01,#0a -> L01
L0001: JL              L01,#0a [FALSE] L0002
       PRINT           "   "
       JUMP            L0004
L0002: JL              L01,#64 [FALSE] L0003
       PRINT           "  "
       JUMP            L0004
L0003: JL              L01,#03e8 [FALSE] L0004
       PRINT           " "
L0004: PRINT_NUM       L00
       PRINT           " "
       RTRUE           

Routine R0144, 1 local
    Action routine for:
        "full"
        "full score"

       CALL_1N         R0141
       JZ              G0f [TRUE] RFALSE
       JZ              #00 [FALSE] RFALSE
       NEW_LINE        
       CALL_VN         R0240 (#0d,#01)
       STORE           L00,#00
L0001: JL              L00,#07 [FALSE] L0003
       LOADB           #33ef,L00 -> -(SP)
       JE              (SP)+,#01 [FALSE] L0002
       LOADB           #33e8,L00 -> -(SP)
       CALL_2N         R0143 ((SP)+)
       CALL_2N         R0388 (L00)
L0002: INC             L00
       JUMP            L0001
L0003: JZ              G13 [TRUE] L0004
       CALL_2N         R0143 (G13)
       CALL_VN         R0240 (#0d,#02)
L0004: JZ              G12 [TRUE] L0005
       CALL_2N         R0143 (G12)
       CALL_VN         R0240 (#0d,#03)
L0005: NEW_LINE        
       CALL_2N         R0143 (G0f)
       CALL_VN         R0240 (#0d,#04)
       RTRUE           

Routine R0145, 0 locals
    Action routine for:
        "i wide"

       STORE           G22,#1c
       CALL_2N         R0076 (#0e)
       RTRUE           

Routine R0146, 0 locals
    Action routine for:
        "i tall"

       STORE           G22,#17
       CALL_2N         R0076 (#0e)
       RTRUE           

Routine R0147, 1 local
    Action routine for:
        "carry inventory"
        "i"

       GET_CHILD       G14 -> -(SP) [FALSE] L0001
L0001: JZ              (SP)+ [FALSE] L0002
       CALL_VS         R0240 (#0e,#01) -> -(SP)
       RET_POPPED      
L0002: JZ              G22 [FALSE] L0003
       CALL_1S         R0146 -> -(SP)
       RET_POPPED      
L0003: CALL_VN         R0240 (#0e,#02)
       AND             G22,#01 -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       PRINT           ":
"
       JUMP            L0005
L0004: PRINT           " "
L0005: GET_CHILD       G14 -> -(SP) [FALSE] L0006
L0006: CALL_VN         R0122 ((SP)+,G22,#01)
       AND             G22,#08 -> -(SP)
       JZ              (SP)+ [TRUE] L0007
       PRINT           ".
"
L0007: GET_CHILD       G14 -> -(SP) [FALSE] L0008
L0008: PULL            L00
       JZ              L00 [TRUE] L0010
L0009: CALL_2N         R0072 (L00)
       GET_SIBLING     L00 -> L00 [TRUE] L0009
L0010: CALL_1N         R0081
       RTRUE           

Routine R0148, 4 locals

       STORE           L02,L00
L0001: JZ              L02 [TRUE] L0005
       STORE           L03,L01
L0002: JZ              L03 [TRUE] L0004
       JE              L03,L02 [FALSE] L0003
       RET             L02
L0003: GET_PARENT      L03 -> L03
       JUMP            L0002
L0004: GET_PARENT      L02 -> L02
       JUMP            L0001
L0005: RFALSE          

Routine R0149, 2 locals

L0001: JZ              L01 [TRUE] L0002
       JE              L00,L01 [TRUE] RTRUE
       GET_PARENT      L01 -> L01
       JUMP            L0001
L0002: RFALSE          

Routine R0150, 6 locals

       STORE           L01,L00
L0001: GET_PARENT      L01 -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       GET_PARENT      L01 -> L01
       JUMP            L0001
L0002: STORE           L02,#01
L0003: GET_PROP_ADDR   L02,#18 -> -(SP)
       JZ              (SP)+ [TRUE] L0008
       GET_PROP_ADDR   L02,#18 -> L04
       GET_PROP_ADDR   L02,#18 -> Gef
       JZ              Gef [TRUE] L0004
       GET_PROP_LEN    Gef -> Gef
L0004: PUSH            Gef
       DIV             (SP)+,#02 -> L03
       LOADW           L04,#00 -> -(SP)
       CALL_VS         R0424 ((SP)+,#03) -> -(SP)
       JZ              (SP)+ [TRUE] L0005
       JUMP            L0008
L0005: STORE           L05,#00
L0006: JL              L05,L03 [FALSE] L0008
       LOADW           L04,L05 -> -(SP)
       JE              (SP)+,L01 [FALSE] L0007
       RET             L02
L0007: INC             L05
       JUMP            L0006
L0008: INC             L02
       JG              L02,#00b8 [TRUE] L0009
       JUMP            L0003
L0009: RFALSE          

Routine R0151, 5 locals

       CALL_2S         R0150 (L00) -> L04
       JZ              L04 [TRUE] L0001
       CALL_2S         R0151 (L04) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       RTRUE           
L0001: CALL_VS         R0148 (G14,L00) -> L03
       JE              G14,L03 [TRUE] L0004
       GET_PARENT      G14 -> L04
L0002: JE              L04,L03 [TRUE] L0004
       TEST_ATTR       L04,#04 [FALSE] L0003
       TEST_ATTR       L04,#0e [TRUE] L0003
       JZ              L01 [FALSE] RTRUE
       CALL_VS         R0240 (#0f,#09,L04) -> -(SP)
       RET_POPPED      
L0003: GET_PARENT      L04 -> L04
       JUMP            L0002
L0004: JE              L00,L03 [TRUE] L0010
       GET_PARENT      L00 -> L04
L0005: JE              L04,L03 [TRUE] L0010
       JZ              L02 [TRUE] L0008
       TEST_ATTR       L04,#04 [TRUE] L0008
       TEST_ATTR       L04,#14 [TRUE] L0008
       TEST_ATTR       L04,#00 [FALSE] L0006
       JZ              L01 [FALSE] RTRUE
       CALL_VS         R0240 (#0f,#06,L04) -> -(SP)
       RET_POPPED      
L0006: TEST_ATTR       L04,#17 [FALSE] L0007
       JZ              L01 [FALSE] RTRUE
       CALL_VS         R0240 (#0f,#07,L04) -> -(SP)
       RET_POPPED      
L0007: JZ              L01 [FALSE] RTRUE
       CALL_VS         R0240 (#0f,#08,L00) -> -(SP)
       RET_POPPED      
L0008: TEST_ATTR       L04,#04 [FALSE] L0009
       TEST_ATTR       L04,#0e [TRUE] L0009
       JZ              L01 [FALSE] RTRUE
       CALL_VS         R0240 (#0f,#09,L04) -> -(SP)
       RET_POPPED      
L0009: GET_PARENT      L04 -> L04
       JUMP            L0005
L0010: RFALSE          

Routine R0152, 6 locals

       JE              L00,G14 [FALSE] L0001
       CALL_VS         R0240 (#0f,#02) -> -(SP)
       RET_POPPED      
L0001: TEST_ATTR       L00,#00 [FALSE] L0002
       CALL_VS         R0240 (#0f,#03,L00) -> -(SP)
       RET_POPPED      
L0002: CALL_VS         R0148 (G14,L00) -> L01
       JZ              L01 [FALSE] L0003
       CALL_2S         R0150 (L00) -> L03
       JZ              L03 [TRUE] L0003
       CALL_VS         R0148 (G14,L03) -> L01
L0003: JZ              L01 [FALSE] L0004
       CALL_VS         R0240 (#0f,#08,L00) -> -(SP)
       RET_POPPED      
L0004: JE              L01,L00 [FALSE] L0005
       CALL_VS         R0240 (#0f,#04,L00) -> -(SP)
       RET_POPPED      
L0005: JIN             L00,G14 [FALSE] L0006
       CALL_VS         R0240 (#0f,#05,L00) -> -(SP)
       RET_POPPED      
L0006: CALL_VS         R0151 (L00,#00,#01) -> -(SP)
       JZ              (SP)+ [TRUE] L0007
       RTRUE           
L0007: GET_PARENT      L00 -> L03
       JE              L03,L01 [TRUE] L0010
       TEST_ATTR       L03,#04 [TRUE] L0008
       TEST_ATTR       L03,#14 [FALSE] L0010
L0008: STORE           L02,L03
       STORE           L05,G2a
       STORE           G2a,#1000
       CALL_VS         R0086 (L03,#04) -> -(SP)
       JZ              (SP)+ [TRUE] L0009
       STORE           G2a,L05
       RTRUE           
L0009: STORE           G2a,L05
L0010: TEST_ATTR       L00,#11 [FALSE] L0011
       CALL_VS         R0240 (#0f,#0a,L00) -> -(SP)
       RET_POPPED      
L0011: TEST_ATTR       L00,#13 [FALSE] L0012
       CALL_VS         R0240 (#0f,#0b,L00) -> -(SP)
       RET_POPPED      
L0012: STORE           L05,#00
       GET_CHILD       G14 -> -(SP) [FALSE] L0013
L0013: PULL            L04
       JZ              L04 [TRUE] L0016
L0014: TEST_ATTR       L04,#1a [TRUE] L0015
       INC             L05
L0015: GET_SIBLING     L04 -> L04 [TRUE] L0014
L0016: CALL_VS         R0085 (G14,#2d) -> -(SP)
       JL              L05,(SP)+ [TRUE] L0025
       JZ              #00 [TRUE] L0024
       GET_PARENT      #00 -> -(SP)
       JE              (SP)+,G14 [TRUE] L0017
       CALL_VS         R0240 (#0f,#0c) -> -(SP)
       RET_POPPED      
L0017: STORE           L04,#00
       GET_CHILD       G14 -> -(SP) [FALSE] L0018
L0018: PULL            L05
       JZ              L05 [TRUE] L0021
L0019: JZ              L05 [TRUE] L0020
       TEST_ATTR       L05,#1a [TRUE] L0020
       TEST_ATTR       L05,#09 [TRUE] L0020
       STORE           L04,L05
L0020: GET_SIBLING     L05 -> L05 [TRUE] L0019
L0021: JZ              L04 [TRUE] L0022
       CALL_VN         R0240 (#0f,#0d,L04)
       STORE           G2f,#01
       CALL_VN         R0076 (#13,L04,#00)
       STORE           G2f,#00
       JIN             L04,#00 [FALSE] RTRUE
       JUMP            L0023
L0022: CALL_VS         R0240 (#0f,#0c) -> -(SP)
       RET_POPPED      
L0023: JUMP            L0025
L0024: CALL_VS         R0240 (#0f,#0c) -> -(SP)
       RET_POPPED      
L0025: INSERT_OBJ      L00,G14
       JZ              L02 [TRUE] L0027
       STORE           L05,G2a
       STORE           G2a,#1000
       CALL_VS         R0086 (L02,#05) -> -(SP)
       JZ              (SP)+ [TRUE] L0026
       STORE           G2a,L05
       RTRUE           
L0026: STORE           G2a,L05
L0027: RFALSE          

Routine R0153, 0 locals
    Action routine for:
        "carry multi"
        "get multi"
        "pick up multi"
        "pick multi up"
        "remove multi"
        "peel noun"
        "peel off noun"

       JZ              G42 [TRUE] L0001
       JIN             G2d,G14 [TRUE] L0002
L0001: CALL_2S         R0152 (G2d) -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
L0002: CALL_1S         R0081 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       STORE           G41,G42
       JE              G41,#01 [TRUE] RTRUE
       JE              G2f,#01 [TRUE] RTRUE
       CALL_VN         R0240 (#0f,#01)
       RTRUE           

Routine R0154, 1 local
    Action routine for:
        "carry multiinside from noun"
        "carry multiinside off noun"
        "get multiinside from noun"
        "remove multiinside from noun"

       GET_PARENT      G2d -> L00
       TEST_ATTR       L00,#04 [FALSE] L0001
       TEST_ATTR       L00,#0e [TRUE] L0001
       CALL_VS         R0240 (#11,#01,G2d) -> -(SP)
       RET_POPPED      
L0001: JE              L00,G2e [TRUE] L0002
       CALL_VS         R0240 (#11,#02,G2d) -> -(SP)
       RET_POPPED      
L0002: TEST_ATTR       L00,#00 [FALSE] L0003
       CALL_VS         R0240 (#0f,#06,L00) -> -(SP)
       RET_POPPED      
L0003: CALL_2S         R0152 (G2d) -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
       STORE           G2a,#0f
       CALL_1S         R0081 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       STORE           G2a,#11
       CALL_1S         R0081 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       JE              G2f,#01 [TRUE] RTRUE
       CALL_VS         R0240 (#11,#03,G2d) -> -(SP)
       RET_POPPED      

Routine R0155, 0 locals
    Action routine for:
        "put down multiheld"
        "put multiheld down"
        "discard multiheld"

       JE              G2d,G14 [FALSE] L0001
       CALL_VS         R0240 (#12,#04) -> -(SP)
       RET_POPPED      
L0001: GET_PARENT      G14 -> -(SP)
       JIN             G2d,(SP)+ [FALSE] L0002
       CALL_VS         R0240 (#10,#01,G2d) -> -(SP)
       RET_POPPED      
L0002: JIN             G2d,G14 [TRUE] L0003
       CALL_VS         R0240 (#10,#02,G2d) -> -(SP)
       RET_POPPED      
L0003: TEST_ATTR       G2d,#1a [FALSE] L0004
       CALL_VN         R0240 (#10,#03,G2d)
       CALL_VN         R0076 (#29,G2d)
       TEST_ATTR       G2d,#1a [TRUE] RTRUE
L0004: GET_PARENT      G14 -> -(SP)
       INSERT_OBJ      G2d,(SP)+
       CALL_1S         R0081 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       JE              G2f,#01 [TRUE] RTRUE
       CALL_VS         R0240 (#10,#04,G2d) -> -(SP)
       RET_POPPED      

Routine R0156, 1 local
    Action routine for:
        "put multiexcept on / onto noun"
        "discard multiexcept on / onto noun"

       STORE           G31,#12
       JE              G2e,#10 [TRUE] L0001
       JIN             G14,G2e [FALSE] L0002
L0001: CALL_VN         R0076 (#10,G2d)
       RTRUE           
L0002: GET_PARENT      G2d -> -(SP)
       JE              (SP)+,G14 [TRUE] L0003
       CALL_VS         R0240 (#12,#01,G2d) -> -(SP)
       RET_POPPED      
L0003: CALL_VS         R0148 (G2d,G2e) -> L00
       JE              L00,G2d [FALSE] L0004
       CALL_VS         R0240 (#12,#02,G2d) -> -(SP)
       RET_POPPED      
L0004: CALL_2S         R0151 (G2e) -> -(SP)
       JZ              (SP)+ [TRUE] L0005
       RTRUE           
L0005: JE              G2e,L00 [TRUE] L0007
       STORE           G2a,#1001
       CALL_VS         R0086 (G2e,#04) -> -(SP)
       JZ              (SP)+ [TRUE] L0006
       STORE           G2a,#12
       RTRUE           
L0006: STORE           G2a,#12
L0007: TEST_ATTR       G2e,#14 [TRUE] L0008
       CALL_VS         R0240 (#12,#03,G2e) -> -(SP)
       RET_POPPED      
L0008: JE              L00,G14 [FALSE] L0009
       CALL_VS         R0240 (#12,#04) -> -(SP)
       RET_POPPED      
L0009: TEST_ATTR       G2d,#1a [FALSE] L0010
       CALL_VN         R0240 (#12,#05,G2d)
       CALL_VN         R0076 (#29,G2d)
       TEST_ATTR       G2d,#1a [FALSE] L0010
       RTRUE           
L0010: CALL_VS         R0085 (G2e,#2d) -> -(SP)
       STORE           Gef,#00
       GET_CHILD       G2e -> -(SP) [FALSE] L0012
L0011: INC             Gef
       GET_SIBLING     (SP)+ -> -(SP) [TRUE] L0011
L0012: PULL            Gee
       PUSH            Gef
       JL              (SP)+,(SP)+ [TRUE] L0013
       CALL_VS         R0240 (#12,#06,G2e) -> -(SP)
       RET_POPPED      
L0013: INSERT_OBJ      G2d,G2e
       CALL_1S         R0081 -> -(SP)
       JE              (SP)+,#01 [FALSE] L0014
       RTRUE           
L0014: JE              G2e,L00 [TRUE] L0016
       STORE           G2a,#1001
       CALL_VS         R0086 (G2e,#05) -> -(SP)
       JZ              (SP)+ [TRUE] L0015
       STORE           G2a,#12
       RTRUE           
L0015: STORE           G2a,#12
L0016: JE              G2f,#01 [FALSE] L0017
       RTRUE           
L0017: JE              G3a,#01 [FALSE] L0018
       CALL_VS         R0240 (#12,#07) -> -(SP)
       RET_POPPED      
L0018: CALL_VN         R0240 (#12,#08,G2d)
       RTRUE           

Routine R0157, 1 local
    Action routine for:
        "put multiexcept in / inside / into noun"
        "insert multiexcept in / into noun"
        "discard multiexcept in / into / down noun"

       STORE           G31,#13
       JE              G2e,#10 [TRUE] L0001
       JIN             G14,G2e [FALSE] L0002
L0001: CALL_VN         R0076 (#10,G2d)
       RTRUE           
L0002: GET_PARENT      G2d -> -(SP)
       JE              (SP)+,G14 [TRUE] L0003
       CALL_VS         R0240 (#13,#01,G2d) -> -(SP)
       RET_POPPED      
L0003: CALL_VS         R0148 (G2d,G2e) -> L00
       JE              L00,G2d [FALSE] L0004
       CALL_VS         R0240 (#13,#05,G2d) -> -(SP)
       RET_POPPED      
L0004: CALL_2S         R0151 (G2e) -> -(SP)
       JZ              (SP)+ [TRUE] L0005
       RTRUE           
L0005: JE              G2e,L00 [TRUE] L0007
       STORE           G2a,#1001
       CALL_VS         R0086 (G2e,#04) -> -(SP)
       JZ              (SP)+ [TRUE] L0006
       STORE           G2a,#13
       RTRUE           
L0006: STORE           G2a,#13
       TEST_ATTR       G2e,#04 [FALSE] L0007
       TEST_ATTR       G2e,#0e [TRUE] L0007
       CALL_VS         R0240 (#13,#03,G2e) -> -(SP)
       RET_POPPED      
L0007: TEST_ATTR       G2e,#04 [TRUE] L0008
       CALL_VS         R0240 (#13,#02,G2e) -> -(SP)
       RET_POPPED      
L0008: TEST_ATTR       G2d,#1a [FALSE] L0009
       CALL_VN         R0240 (#13,#06,G2d)
       CALL_VN         R0076 (#29,G2d)
       TEST_ATTR       G2d,#1a [FALSE] L0009
       RTRUE           
L0009: CALL_VS         R0085 (G2e,#2d) -> -(SP)
       STORE           Gef,#00
       GET_CHILD       G2e -> -(SP) [FALSE] L0011
L0010: INC             Gef
       GET_SIBLING     (SP)+ -> -(SP) [TRUE] L0010
L0011: PULL            Gee
       PUSH            Gef
       JL              (SP)+,(SP)+ [TRUE] L0012
       CALL_VS         R0240 (#13,#07,G2e) -> -(SP)
       RET_POPPED      
L0012: INSERT_OBJ      G2d,G2e
       CALL_1S         R0081 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       JE              G2e,L00 [TRUE] L0014
       STORE           G2a,#1001
       CALL_VS         R0086 (G2e,#05) -> -(SP)
       JZ              (SP)+ [TRUE] L0013
       STORE           G2a,#13
       RTRUE           
L0013: STORE           G2a,#13
L0014: JE              G2f,#01 [TRUE] RTRUE
       JE              G3a,#01 [FALSE] L0015
       CALL_VS         R0240 (#13,#08,G2d) -> -(SP)
       RET_POPPED      
L0015: CALL_VN         R0240 (#13,#09,G2d)
       RTRUE           

Routine R0158, 0 locals
    Action routine for:
        "transfer noun to noun"
        "clear noun to noun"

       JIN             G2d,G14 [TRUE] L0001
       CALL_2S         R0152 (G2d) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       RTRUE           
L0001: TEST_ATTR       G2e,#04 [FALSE] L0002
       CALL_VN         R0076 (#13,G2d,G2e)
       RTRUE           
L0002: TEST_ATTR       G2e,#14 [FALSE] L0003
       CALL_VN         R0076 (#12,G2d,G2e)
       RTRUE           
L0003: CALL_VN         R0076 (#10,G2d)
       RTRUE           

Routine R0159, 0 locals
    Action routine for:
        "empty noun"
        "empty out noun"
        "empty noun out"

       STORE           G2e,#10
       CALL_1N         R0160
       RTRUE           

Routine R0160, 2 locals
    Action routine for:
        "empty noun to / into / on / onto noun"

       CALL_2S         R0151 (G2d) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       RTRUE           
L0001: TEST_ATTR       G2d,#04 [TRUE] L0002
       CALL_VS         R0240 (#14,#01,G2d) -> -(SP)
       RET_POPPED      
L0002: TEST_ATTR       G2d,#0e [TRUE] L0003
       CALL_VS         R0240 (#14,#02,G2d) -> -(SP)
       RET_POPPED      
L0003: JE              G2e,#10 [TRUE] L0005
       TEST_ATTR       G2e,#04 [TRUE] L0004
       CALL_VS         R0240 (#14,#01,G2e) -> -(SP)
       RET_POPPED      
L0004: TEST_ATTR       G2e,#0e [TRUE] L0005
       CALL_VS         R0240 (#14,#02,G2e) -> -(SP)
       RET_POPPED      
L0005: GET_CHILD       G2d -> L00 [FALSE] L0006
L0006: JZ              L00 [FALSE] L0007
       CALL_VS         R0240 (#14,#03,G2d) -> -(SP)
       RET_POPPED      
L0007: JZ              L00 [TRUE] L0009
       GET_SIBLING     L00 -> L01 [FALSE] L0008
L0008: CALL_2N         R0105 (L00)
       PRINT           ": "
       CALL_VN         R0076 (#5d,L00,G2e)
       STORE           L00,L01
       JUMP            L0007
L0009: RTRUE           

Routine R0161, 0 locals
    Action routine for:
        "feed held to creature"
        "feed creature held" REVERSE
        "feed over held to creature"

       GET_PARENT      G2d -> -(SP)
       JE              (SP)+,G14 [TRUE] L0001
       CALL_VS         R0240 (#15,#01,G2d) -> -(SP)
       RET_POPPED      
L0001: JE              G2e,G14 [FALSE] L0002
       CALL_VS         R0240 (#15,#02,G2d) -> -(SP)
       RET_POPPED      
L0002: CALL_VS         R0082 (G2e,#15) -> -(SP)
       JZ              (SP)+ [FALSE] RFALSE
       CALL_VN         R0240 (#15,#03,G2e)
       RTRUE           

Routine R0162, 0 locals
    Action routine for:
        

       CALL_VN         R0076 (#15,G2e,G2d)
       RTRUE           

Routine R0163, 0 locals
    Action routine for:
        "display creature held" REVERSE
        "display held to creature"

       GET_PARENT      G2d -> -(SP)
       JE              (SP)+,G14 [TRUE] L0001
       CALL_VS         R0240 (#16,#01,G2d) -> -(SP)
       RET_POPPED      
L0001: JE              G2e,G14 [FALSE] L0002
       CALL_VN         R0076 (#20,G2d)
       RTRUE           
L0002: CALL_VS         R0082 (G2e,#16) -> -(SP)
       JZ              (SP)+ [FALSE] RFALSE
       CALL_VN         R0240 (#16,#02,G2e)
       RTRUE           

Routine R0164, 0 locals
    Action routine for:
        

       CALL_VN         R0076 (#16,G2e,G2d)
       RTRUE           

Routine R0165, 3 locals
    Action routine for:
        "get in / into / on / onto noun"
        "stand on noun"
        "go noun"
        "go into / in / inside / through noun"
        "leave into / in / inside / through noun"
        "cross noun"
        "lie on top of noun"
        "lie on / in / inside noun"

       TEST_ATTR       G2d,#05 [TRUE] L0001
       JIN             G2d,"compass" [FALSE] L0002
L0001: CALL_VN         R0076 (#1b,G2d)
       RTRUE           
L0002: JIN             G14,G2d [FALSE] L0003
       CALL_VS         R0240 (#17,#01,G2d) -> -(SP)
       RET_POPPED      
L0003: TEST_ATTR       G2d,#07 [TRUE] L0004
       CALL_VS         R0240 (#17,#02,G2d) -> -(SP)
       RET_POPPED      
L0004: TEST_ATTR       G2d,#04 [FALSE] L0005
       TEST_ATTR       G2d,#0e [TRUE] L0005
       CALL_VS         R0240 (#17,#03,G2d) -> -(SP)
       RET_POPPED      
L0005: GET_PARENT      G2d -> -(SP)
       GET_PARENT      G14 -> -(SP)
       JE              (SP)+,(SP)+ [TRUE] L0015
       CALL_VS         R0148 (G14,G2d) -> L00
       JE              L00,G14,#00 [FALSE] L0006
       CALL_VS         R0240 (#17,#04,G2d) -> -(SP)
       RET_POPPED      
L0006: JIN             G14,L00 [TRUE] L0010
       GET_PARENT      G14 -> L01
       GET_PARENT      L01 -> -(SP)
       JE              (SP)+,L00 [FALSE] L0007
       JE              G2d,L00 [TRUE] L0008
L0007: CALL_VN         R0240 (#17,#06,L01)
       STORE           L02,G2f
       STORE           G2f,#01
L0008: CALL_2N         R0076 (#19)
       STORE           G2f,L02
       JIN             G14,L01 [FALSE] L0009
       RTRUE           
L0009: JUMP            L0006
L0010: JIN             G14,G2d [FALSE] L0011
       RTRUE           
L0011: JIN             G2d,L00 [TRUE] L0015
       GET_PARENT      G2d -> L01
L0012: GET_PARENT      L01 -> -(SP)
       JE              (SP)+,L00 [TRUE] L0013
       GET_PARENT      L01 -> L01
       JUMP            L0012
L0013: CALL_VN         R0240 (#17,#07,L01)
       STORE           L02,G2f
       STORE           G2f,#01
       CALL_VN         R0076 (#17,L01)
       STORE           G2f,L02
       JIN             G14,L01 [TRUE] L0014
       RTRUE           
L0014: CALL_VN         R0076 (#17,G2d)
       RTRUE           
L0015: INSERT_OBJ      G14,G2d
       CALL_1S         R0081 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       JE              G2f,#01 [TRUE] RTRUE
       CALL_VN         R0240 (#17,#05,G2d)
       CALL_2N         R0173 (G2d)
       RTRUE           

Routine R0166, 0 locals
    Action routine for:
        "get off noun"

       GET_PARENT      G14 -> -(SP)
       JE              (SP)+,G2d [FALSE] L0001
       CALL_2N         R0076 (#19)
       RTRUE           
L0001: CALL_VN         R0240 (#18,#01,G2d)
       RTRUE           

Routine R0167, 1 local
    Action routine for:
        "get out / off / up"
        "stand"
        "stand up"
        "leave noun"
        "exit"

       GET_PARENT      G14 -> L00
       JE              L00,G02 [TRUE] L0001
       JE              G02,#13 [FALSE] L0004
       JE              L00,G17 [FALSE] L0004
L0001: GET_PROP        G02,#12 -> -(SP)
       JZ              (SP)+ [FALSE] L0002
       JE              G02,#13 [FALSE] L0003
       GET_PROP        G17,#12 -> -(SP)
       JZ              (SP)+ [TRUE] L0003
L0002: CALL_VN         R0076 (#1b,#11)
       RTRUE           
L0003: CALL_VS         R0240 (#19,#01) -> -(SP)
       RET_POPPED      
L0004: TEST_ATTR       L00,#04 [FALSE] L0005
       TEST_ATTR       L00,#0e [TRUE] L0005
       CALL_VS         R0240 (#19,#02,L00) -> -(SP)
       RET_POPPED      
L0005: GET_PARENT      L00 -> -(SP)
       INSERT_OBJ      G14,(SP)+
       CALL_1S         R0081 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       JE              G2f,#01 [TRUE] RTRUE
       CALL_VN         R0240 (#19,#03,L00)
       CALL_2N         R0179 (#01)
       RTRUE           

Routine R0168, 0 locals
    Action routine for:
        "go"
        "leave"

       CALL_2N         R0240 (#1a)
       RTRUE           

Routine R0169, 0 locals
    Action routine for:
        "cross"
        "in"

       CALL_VN         R0076 (#1b,#12)
       RTRUE           

Routine R0170, 7 locals
    Action routine for:
        "go noun = [parse $3900]"
        "leave noun = [parse $3900]"

       STORE           L06,G02
       STORE           L04,#00
       GET_PARENT      G14 -> L00
       JE              G02,#13 [TRUE] L0001
       JE              L00,G02 [FALSE] L0002
L0001: JE              G02,#13 [FALSE] L0007
       JE              L00,G17 [TRUE] L0007
L0002: STORE           L01,G02
       JE              G02,#13 [FALSE] L0003
       STORE           G02,G17
L0003: CALL_VS         R0086 (L00,#04) -> L02
       JE              L02,#03 [TRUE] L0004
       STORE           G02,L01
L0004: JE              L02,#01 [FALSE] L0005
       STORE           L04,L00
       GET_PARENT      L00 -> L00
       JUMP            L0007
L0005: JZ              L02 [FALSE] L0006
       CALL_VN         R0240 (#1b,#01,L00)
L0006: RTRUE           
L0007: GET_PROP        G2d,#15 -> L05
       CALL_2S         R0083 (L05) -> -(SP)
       JE              (SP)+,#02 [FALSE] L0008
       CALL_VS         R0086 (G2d,#15) -> L05
L0008: CALL_VS         R0417 (L00,L05) -> L01
       CALL_2S         R0083 (L01) -> L02
       JE              L02,#03 [FALSE] L0009
       PRINT_PADDR     L01
       NEW_LINE        
       RFALSE          
L0009: JE              L02,#02 [FALSE] L0010
       CALL_VS         R0086 (L00,L05) -> L01
       JE              L01,#01 [TRUE] RTRUE
L0010: JZ              L02 [TRUE] L0011
       JZ              L01 [FALSE] L0013
L0011: GET_PROP        L00,#26 -> -(SP)
       JZ              (SP)+ [TRUE] L0012
       CALL_VN         R0084 (L00,#26)
L0012: RFALSE          
L0013: TEST_ATTR       L01,#05 [FALSE] L0019
       TEST_ATTR       L01,#03 [FALSE] L0014
       CALL_VS         R0240 (#1b,#02) -> -(SP)
       RET_POPPED      
L0014: TEST_ATTR       L01,#0e [TRUE] L0017
       JE              G2d,#0f [FALSE] L0015
       CALL_VS         R0240 (#1b,#03,L01) -> -(SP)
       RET_POPPED      
L0015: JE              G2d,#10 [FALSE] L0016
       CALL_VS         R0240 (#1b,#04,L01) -> -(SP)
       RET_POPPED      
L0016: CALL_VS         R0240 (#1b,#05,L01) -> -(SP)
       RET_POPPED      
L0017: CALL_VS         R0086 (L01,#13) -> L02
       JZ              L02 [FALSE] L0018
       CALL_VS         R0240 (#1b,#06,L01) -> -(SP)
       RET_POPPED      
L0018: JE              L02,#01 [TRUE] RTRUE
       STORE           L01,L02
L0019: JZ              L04 [FALSE] L0020
       INSERT_OBJ      G14,L01
       JUMP            L0021
L0020: INSERT_OBJ      L04,L01
L0021: STORE           G02,L01
       CALL_1N         R0126
       CALL_2S         R0096 (L01) -> L03
       JZ              L03 [TRUE] L0022
       STORE           G02,L01
       STORE           G16,#01
       JUMP            L0024
L0022: JE              L06,#13 [FALSE] L0023
       CALL_1N         R0394
       JZ              G15 [FALSE] RTRUE
L0023: STORE           G17,L01
       STORE           G02,#13
       STORE           G16,#00
L0024: CALL_1S         R0081 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       JE              G2f,#01 [TRUE] RTRUE
       CALL_2N         R0179 (#01)
       RTRUE           

Routine R0171, 3 locals

       GET_PARENT      G14 -> -(SP)
       JE              L00,(SP)+ [TRUE] RFALSE
       GET_CHILD       L00 -> -(SP) [FALSE] L0001
L0001: PULL            L01
       JZ              L01 [TRUE] L0004
L0002: TEST_ATTR       L01,#03 [TRUE] L0003
       TEST_ATTR       L01,#11 [TRUE] L0003
       STORE           L02,#01
L0003: GET_SIBLING     L01 -> L01 [TRUE] L0002
L0004: JZ              L02 [TRUE] RFALSE
       CALL_VN         R0240 (#1f,#04,L00)
       RTRUE           

Routine R0172, 2 locals

       GET_PARENT      G14 -> L01
L0001: JZ              L01 [TRUE] L0003
       JE              L01,G18 [TRUE] L0003
       JE              L01,L00 [TRUE] RFALSE
       GET_PARENT      L01 -> L01
       JZ              L01 [TRUE] L0002
       TEST_ATTR       L01,#14 [FALSE] RTRUE
L0002: JUMP            L0001
L0003: RTRUE           

Routine R0173, 9 locals

       GET_CHILD       L00 -> -(SP) [FALSE] L0001
L0001: PULL            L03
       JZ              L03 [TRUE] L0003
L0002: CLEAR_ATTR      L03,#19
       GET_SIBLING     L03 -> L03 [TRUE] L0002
L0003: STORE           L04,#00
       GET_CHILD       L00 -> -(SP) [FALSE] L0004
L0004: PULL            L03
       JZ              L03 [TRUE] L0019
L0005: TEST_ATTR       L03,#03 [TRUE] L0018
       CALL_2S         R0172 (L03) -> -(SP)
       JZ              (SP)+ [TRUE] L0018
       CALL_2N         R0072 (L03)
       TEST_ATTR       L03,#11 [TRUE] L0016
       SET_ATTR        L03,#19
       INC             L04
       STORE           L05,#1e
       STORE           L07,#00
       TEST_ATTR       L03,#05 [TRUE] L0006
       TEST_ATTR       L03,#04 [FALSE] L0007
L0006: TEST_ATTR       L03,#0e [FALSE] L0007
       CALL_VS         R0423 (L03,#1f) -> -(SP)
       JZ              (SP)+ [TRUE] L0007
       STORE           L05,#1f
       STORE           L07,#01
       JUMP            L0011
L0007: TEST_ATTR       L03,#05 [TRUE] L0008
       TEST_ATTR       L03,#04 [FALSE] L0009
L0008: TEST_ATTR       L03,#0e [TRUE] L0009
       CALL_VS         R0423 (L03,#20) -> -(SP)
       JZ              (SP)+ [TRUE] L0009
       STORE           L05,#20
       STORE           L07,#01
       JUMP            L0011
L0009: TEST_ATTR       L03,#15 [FALSE] L0010
       TEST_ATTR       L03,#0d [FALSE] L0010
       CALL_VS         R0423 (L03,#21) -> -(SP)
       JZ              (SP)+ [TRUE] L0010
       STORE           L05,#21
       STORE           L07,#01
       JUMP            L0011
L0010: TEST_ATTR       L03,#15 [FALSE] L0011
       TEST_ATTR       L03,#0d [TRUE] L0011
       CALL_VS         R0423 (L03,#22) -> -(SP)
       JZ              (SP)+ [TRUE] L0011
       STORE           L05,#22
       STORE           L07,#01
L0011: TEST_ATTR       L03,#0c [FALSE] L0012
       GET_PROP        L03,#24 -> -(SP)
       JE              (SP)+,#ffff [FALSE] L0012
       JE              L07,#01 [FALSE] L0015
L0012: GET_PROP        L03,#24 -> -(SP)
       JE              (SP)+,#ffff [TRUE] L0013
       CALL_VS         R0086 (L03,#24) -> -(SP)
       JZ              (SP)+ [TRUE] L0013
       STORE           L08,#01
       CLEAR_ATTR      L03,#19
       DEC             L04
       JUMP            L0015
L0013: CALL_VS         R0417 (L03,L05) -> L06
       JZ              L06 [TRUE] L0015
       NEW_LINE        
       CALL_VN         R0084 (L03,L05)
       STORE           L08,#01
       CLEAR_ATTR      L03,#19
       DEC             L04
       TEST_ATTR       L03,#14 [FALSE] L0015
       GET_CHILD       L03 -> -(SP) [FALSE] L0014
L0014: JZ              (SP)+ [TRUE] L0015
       CALL_2N         R0171 (L03)
L0015: JUMP            L0018
L0016: TEST_ATTR       L03,#14 [FALSE] L0018
       GET_CHILD       L03 -> -(SP) [FALSE] L0017
L0017: JZ              (SP)+ [TRUE] L0018
       CALL_2N         R0171 (L03)
L0018: GET_SIBLING     L03 -> L03 [TRUE] L0005
L0019: JZ              L04 [FALSE] L0020
       RFALSE          
L0020: JZ              L01 [TRUE] L0023
       NEW_LINE        
       JE              L08,#01 [FALSE] L0021
       STORE           L01,L02
L0021: PRINT_PADDR     L01
       PRINT           " "
       GET_CHILD       L00 -> -(SP) [FALSE] L0022
L0022: CALL_VN         R0122 ((SP)+,#0ad8)
       RET             L04
L0023: JE              L08,#01 [FALSE] L0024
       CALL_VN         R0240 (#1f,#05,L00)
       JUMP            L0025
L0024: CALL_VN         R0240 (#1f,#06,L00)
L0025: RTRUE           

Routine R0174, 0 locals
    Action routine for:
        "brief"

       STORE           G19,#01
       PRINT_PADDR     S001
       CALL_2N         R0240 (#1c)
       RTRUE           

Routine R0175, 0 locals
    Action routine for:
        "long"

       STORE           G19,#02
       PRINT_PADDR     S001
       CALL_2N         R0240 (#1d)
       RTRUE           

Routine R0176, 0 locals
    Action routine for:
        "short"

       STORE           G19,#03
       PRINT_PADDR     S001
       CALL_2N         R0240 (#1e)
       RTRUE           

Routine R0177, 1 local

       STORE           L00,G02
       JE              L00,G1b [TRUE] L0002
       GET_PROP        L00,#1e -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       CALL_VN         R0084 (L00,#1e)
L0001: STORE           L00,G02
       CALL_1N         R0395
       STORE           G1b,L00
L0002: RTRUE           

Routine R0178, 0 locals

       TEST_ATTR       G02,#18 [TRUE] L0001
       SET_ATTR        G02,#18
       TEST_ATTR       G02,#12 [FALSE] L0001
       ADD             G0f,#05 -> G0f
       ADD             G12,#05 -> G12
L0001: RTRUE           

Routine R0179, 5 locals
    Action routine for:
        "l"

       GET_PARENT      G14 -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       CALL_2S         R0112 (#0a) -> -(SP)
       RET_POPPED      
L0001: JE              G02,#13 [FALSE] L0002
       STORE           G18,#13
       JUMP            L0006
L0002: STORE           L01,#01
       GET_PARENT      G14 -> G18
L0003: GET_PARENT      G18 -> -(SP)
       JZ              (SP)+ [TRUE] L0005
       TEST_ATTR       G18,#04 [FALSE] L0004
       TEST_ATTR       G18,#0e [TRUE] L0004
       TEST_ATTR       G18,#17 [FALSE] L0005
L0004: GET_PARENT      G18 -> G18
       INC             L01
       JUMP            L0003
L0005: JE              G18,G02 [FALSE] L0006
       CALL_1N         R0177
       JE              G18,G02 [TRUE] L0006
       JUMP            L0001
L0006: NEW_LINE        
       SET_TEXT_STYLE  BOLDFACE
       JZ              L01 [FALSE] L0007
       CALL_2N         R0105 (#13)
       JUMP            L0009
L0007: JE              G18,G02 [TRUE] L0008
       CALL_2N         R0104 (G18)
       JUMP            L0009
L0008: CALL_2N         R0105 (G18)
L0009: SET_TEXT_STYLE  ROMAN
       STORE           L03,#01
       GET_PARENT      G14 -> L02
       JUMP            L0011
L0010: INC             L03
       GET_PARENT      L02 -> L02
L0011: JL              L03,L01 [FALSE] L0014
       TEST_ATTR       L02,#14 [FALSE] L0012
       CALL_VN         R0240 (#1f,#01,L02)
       JUMP            L0013
L0012: CALL_VN         R0240 (#1f,#02,L02)
L0013: JUMP            L0010
L0014: JE              G1a,#01 [FALSE] L0015
       CALL_VN         R0240 (#1f,#03,G14)
L0015: NEW_LINE        
       JL              G19,#03 [FALSE] L0019
       JE              G18,G02 [FALSE] L0019
       JE              L00,#01 [FALSE] L0016
       JE              G19,#02 [TRUE] L0016
       TEST_ATTR       G02,#18 [TRUE] L0019
L0016: GET_PROP        G02,#24 -> -(SP)
       JE              (SP)+,#ffff [TRUE] L0017
       CALL_VN         R0086 (G02,#24)
       JUMP            L0019
L0017: GET_PROP        G02,#23 -> -(SP)
       JZ              (SP)+ [FALSE] L0018
       CALL_VN         R0112 (#0b,G02)
       JUMP            L0019
L0018: CALL_VN         R0084 (G02,#23)
L0019: JZ              L01 [FALSE] L0020
       CALL_2N         R0173 (#13)
       JUMP            L0028
L0020: STORE           L02,G14
       STORE           L03,L01
       JUMP            L0022
L0021: DEC             L03
       GET_PARENT      L02 -> L02
L0022: JG              L03,#00 [FALSE] L0023
       SET_ATTR        L02,#19
       JUMP            L0021
L0023: STORE           L03,L01
L0024: JG              L03,#00 [FALSE] L0028
       STORE           L02,G14
       STORE           L04,#00
L0025: JL              L04,L03 [FALSE] L0026
       GET_PARENT      L02 -> L02
       INC             L04
       JUMP            L0025
L0026: GET_PROP        L02,#32 -> -(SP)
       JZ              (SP)+ [TRUE] L0027
       NEW_LINE        
       CALL_VN         R0084 (L02,#32)
L0027: CALL_2N         R0173 (L02)
       DEC             L03
       JUMP            L0024
L0028: CALL_1N         R0396
       CALL_1N         R0178
       STORE           G2a,#1f
       CALL_1S         R0081 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       RTRUE           

Routine R0180, 1 local
    Action routine for:
        "l at noun"
        "check noun"
        "read noun"

       JE              G02,#13 [FALSE] L0001
       CALL_VS         R0240 (#20,#01) -> -(SP)
       RET_POPPED      
L0001: GET_PROP        G2d,#23 -> L00
       JZ              L00 [FALSE] L0004
       TEST_ATTR       G2d,#04 [FALSE] L0002
       CALL_VN         R0076 (#22,G2d)
       RTRUE           
L0002: TEST_ATTR       G2d,#15 [FALSE] L0003
       CALL_VN         R0240 (#20,#03,G2d)
       RFALSE          
L0003: CALL_VS         R0240 (#20,#02,G2d) -> -(SP)
       RET_POPPED      
L0004: CALL_VN         R0084 (G2d,#23)
       TEST_ATTR       G2d,#15 [FALSE] L0005
       CALL_VN         R0240 (#20,#03,G2d)
L0005: CALL_1S         R0081 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       RTRUE           

Routine R0181, 0 locals
    Action routine for:
        "l under noun"

       JE              G02,#13 [FALSE] L0001
       CALL_VS         R0240 (#21,#01) -> -(SP)
       RET_POPPED      
L0001: CALL_VN         R0240 (#21,#02)
       RTRUE           

Routine R0182, 2 locals
    Action routine for:
        "l inside / in / into / through noun"
        "search noun"

       JE              G02,#13 [FALSE] L0001
       CALL_VS         R0240 (#22,#01,G2d) -> -(SP)
       RET_POPPED      
L0001: CALL_2S         R0151 (G2d) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       RTRUE           
L0002: GET_CHILD       G2d -> -(SP) [FALSE] L0003
L0003: PULL            L00
       JZ              L00 [TRUE] L0006
L0004: TEST_ATTR       L00,#03 [TRUE] L0005
       TEST_ATTR       L00,#11 [TRUE] L0005
       STORE           L01,#01
L0005: GET_SIBLING     L00 -> L00 [TRUE] L0004
L0006: TEST_ATTR       G2d,#14 [FALSE] L0008
       JZ              L01 [FALSE] L0007
       CALL_VS         R0240 (#22,#02,G2d) -> -(SP)
       RET_POPPED      
L0007: CALL_VS         R0240 (#22,#03,G2d) -> -(SP)
       RET_POPPED      
L0008: TEST_ATTR       G2d,#04 [TRUE] L0009
       CALL_VS         R0240 (#22,#04,G2d) -> -(SP)
       RET_POPPED      
L0009: TEST_ATTR       G2d,#17 [TRUE] L0010
       TEST_ATTR       G2d,#0e [TRUE] L0010
       CALL_VS         R0240 (#22,#05,G2d) -> -(SP)
       RET_POPPED      
L0010: CALL_1S         R0081 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       STORE           Gef,#00
       GET_CHILD       G2d -> -(SP) [FALSE] L0012
L0011: INC             Gef
       GET_SIBLING     (SP)+ -> -(SP) [TRUE] L0011
L0012: PULL            Gee
       STORE           L00,Gef
       JZ              L01 [FALSE] L0013
       CALL_VS         R0240 (#22,#06,G2d) -> -(SP)
       RET_POPPED      
L0013: CALL_VN         R0240 (#22,#07,G2d)
       RTRUE           

Routine R0183, 0 locals
    Action routine for:
        "open noun with held"
        "unlock noun with held"

       CALL_2S         R0151 (G2d) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       RTRUE           
L0001: TEST_ATTR       G2d,#0a [TRUE] L0002
       CALL_VS         R0240 (#23,#01,G2d) -> -(SP)
       RET_POPPED      
L0002: TEST_ATTR       G2d,#0b [TRUE] L0003
       CALL_VS         R0240 (#23,#02,G2d) -> -(SP)
       RET_POPPED      
L0003: GET_PROP        G2d,#14 -> -(SP)
       JE              (SP)+,G2e [TRUE] L0004
       CALL_VS         R0240 (#23,#03,G2e) -> -(SP)
       RET_POPPED      
L0004: CLEAR_ATTR      G2d,#0b
       CALL_1S         R0081 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       JE              G2f,#01 [TRUE] RTRUE
       CALL_VN         R0240 (#23,#04,G2d)
       RTRUE           

Routine R0184, 0 locals
    Action routine for:
        "lock noun with held"

       CALL_2S         R0151 (G2d) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       RTRUE           
L0001: TEST_ATTR       G2d,#0a [TRUE] L0002
       CALL_VS         R0240 (#24,#01,G2d) -> -(SP)
       RET_POPPED      
L0002: TEST_ATTR       G2d,#0b [FALSE] L0003
       CALL_VS         R0240 (#24,#02,G2d) -> -(SP)
       RET_POPPED      
L0003: TEST_ATTR       G2d,#0e [FALSE] L0004
       CALL_VS         R0240 (#24,#03,G2d) -> -(SP)
       RET_POPPED      
L0004: GET_PROP        G2d,#14 -> -(SP)
       JE              (SP)+,G2e [TRUE] L0005
       CALL_VS         R0240 (#24,#04,G2e) -> -(SP)
       RET_POPPED      
L0005: SET_ATTR        G2d,#0b
       CALL_1S         R0081 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       JE              G2f,#01 [TRUE] RTRUE
       CALL_VN         R0240 (#24,#05,G2d)
       RTRUE           

Routine R0185, 0 locals
    Action routine for:
        "rotate noun on"
        "rotate on noun"
        "switch noun"
        "switch noun on"
        "switch on noun"

       CALL_2S         R0151 (G2d) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       RTRUE           
L0001: TEST_ATTR       G2d,#15 [TRUE] L0002
       CALL_VS         R0240 (#25,#01,G2d) -> -(SP)
       RET_POPPED      
L0002: TEST_ATTR       G2d,#0d [FALSE] L0003
       CALL_VS         R0240 (#25,#02,G2d) -> -(SP)
       RET_POPPED      
L0003: SET_ATTR        G2d,#0d
       CALL_1S         R0081 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       JE              G2f,#01 [TRUE] RTRUE
       CALL_VN         R0240 (#25,#03,G2d)
       RTRUE           

Routine R0186, 0 locals
    Action routine for:
        "close off noun"
        "rotate noun off"
        "rotate off noun"
        "switch noun off"
        "switch off noun"

       CALL_2S         R0151 (G2d) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       RTRUE           
L0001: TEST_ATTR       G2d,#15 [TRUE] L0002
       CALL_VS         R0240 (#26,#01,G2d) -> -(SP)
       RET_POPPED      
L0002: TEST_ATTR       G2d,#0d [TRUE] L0003
       CALL_VS         R0240 (#26,#02,G2d) -> -(SP)
       RET_POPPED      
L0003: CLEAR_ATTR      G2d,#0d
       CALL_1S         R0081 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       JE              G2f,#01 [TRUE] RTRUE
       CALL_VN         R0240 (#26,#03,G2d)
       RTRUE           

Routine R0187, 0 locals
    Action routine for:
        "open noun"

       CALL_2S         R0151 (G2d) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       RTRUE           
L0001: TEST_ATTR       G2d,#0f [TRUE] L0002
       CALL_VS         R0240 (#27,#01,G2d) -> -(SP)
       RET_POPPED      
L0002: TEST_ATTR       G2d,#0b [FALSE] L0003
       CALL_VS         R0240 (#27,#02,G2d) -> -(SP)
       RET_POPPED      
L0003: TEST_ATTR       G2d,#0e [FALSE] L0004
       CALL_VS         R0240 (#27,#03,G2d) -> -(SP)
       RET_POPPED      
L0004: SET_ATTR        G2d,#0e
       CALL_1S         R0081 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       JE              G2f,#01 [TRUE] RTRUE
       TEST_ATTR       G2d,#04 [FALSE] L0006
       TEST_ATTR       G2d,#17 [TRUE] L0006
       GET_CHILD       G2d -> -(SP) [FALSE] L0005
L0005: JZ              (SP)+ [TRUE] L0006
       CALL_VS         R0149 (G2d,G14) -> -(SP)
       JZ              (SP)+ [FALSE] L0006
       CALL_VS         R0240 (#27,#04,G2d) -> -(SP)
       RET_POPPED      
L0006: CALL_VN         R0240 (#27,#05,G2d)
       RTRUE           

Routine R0188, 0 locals
    Action routine for:
        "close noun"
        "close up noun"

       CALL_2S         R0151 (G2d) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       RTRUE           
L0001: TEST_ATTR       G2d,#0f [TRUE] L0002
       CALL_VS         R0240 (#28,#01,G2d) -> -(SP)
       RET_POPPED      
L0002: TEST_ATTR       G2d,#0e [TRUE] L0003
       CALL_VS         R0240 (#28,#02,G2d) -> -(SP)
       RET_POPPED      
L0003: CLEAR_ATTR      G2d,#0e
       CALL_1S         R0081 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       JE              G2f,#01 [TRUE] RTRUE
       CALL_VN         R0240 (#28,#03,G2d)
       RTRUE           

Routine R0189, 0 locals
    Action routine for:
        "carry off ATTRIBUTE(26)"
        "remove held"
        "disrobe held"

       CALL_2S         R0151 (G2d) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       RTRUE           
L0001: TEST_ATTR       G2d,#1a [TRUE] L0002
       CALL_VS         R0240 (#29,#01,G2d) -> -(SP)
       RET_POPPED      
L0002: CLEAR_ATTR      G2d,#1a
       CALL_1S         R0081 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       JE              G2f,#01 [TRUE] RTRUE
       CALL_VN         R0240 (#29,#02,G2d)
       RTRUE           

Routine R0190, 0 locals
    Action routine for:
        "don held"
        "put on held"

       CALL_2S         R0151 (G2d) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       RTRUE           
L0001: TEST_ATTR       G2d,#02 [TRUE] L0002
       CALL_VS         R0240 (#2a,#01,G2d) -> -(SP)
       RET_POPPED      
L0002: GET_PARENT      G2d -> -(SP)
       JE              (SP)+,G14 [TRUE] L0003
       CALL_VS         R0240 (#2a,#02,G2d) -> -(SP)
       RET_POPPED      
L0003: TEST_ATTR       G2d,#1a [FALSE] L0004
       CALL_VS         R0240 (#2a,#03,G2d) -> -(SP)
       RET_POPPED      
L0004: SET_ATTR        G2d,#1a
       CALL_1S         R0081 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       JE              G2f,#01 [TRUE] RTRUE
       CALL_VN         R0240 (#2a,#04,G2d)
       RTRUE           

Routine R0191, 0 locals
    Action routine for:
        "eat held"

       CALL_2S         R0151 (G2d) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       RTRUE           
L0001: TEST_ATTR       G2d,#06 [TRUE] L0002
       CALL_VS         R0240 (#2b,#01,G2d) -> -(SP)
       RET_POPPED      
L0002: REMOVE_OBJ      G2d
       CALL_1S         R0081 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       JE              G2f,#01 [TRUE] RTRUE
       CALL_VN         R0240 (#2b,#02,G2d)
       RTRUE           

Routine R0192, 0 locals
    Action routine for:
        "y"

       CALL_2N         R0240 (#2c)
       RTRUE           

Routine R0193, 0 locals
    Action routine for:
        "no"

       CALL_2N         R0240 (#2d)
       RTRUE           

Routine R0194, 0 locals
    Action routine for:
        "burn noun"
        "burn noun with held"

       CALL_VN         R0240 (#2e,#01,G2d)
       RTRUE           

Routine R0195, 0 locals
    Action routine for:
        "pray"

       CALL_VN         R0240 (#2f,#01,G2d)
       RTRUE           

Routine R0196, 0 locals
    Action routine for:
        "awake"
        "awake up"

       CALL_VN         R0240 (#30,#01,G2d)
       RTRUE           

Routine R0197, 0 locals
    Action routine for:
        "awake creature"
        "awake creature up"
        "awake up creature"

       CALL_2S         R0151 (G2d) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       RTRUE           
L0001: CALL_VS         R0082 (G2d,#31) -> -(SP)
       JZ              (SP)+ [FALSE] RFALSE
       CALL_VN         R0240 (#31,#01,G2d)
       RTRUE           

Routine R0198, 0 locals
    Action routine for:
        "think"

       CALL_VN         R0240 (#33,#01,G2d)
       RTRUE           

Routine R0199, 0 locals
    Action routine for:
        "smell"
        "smell noun"

       CALL_VN         R0240 (#34,#01,G2d)
       RTRUE           

Routine R0200, 0 locals
    Action routine for:
        "hear"
        "hear noun"
        "hear to noun"

       CALL_VN         R0240 (#35,#01,G2d)
       RTRUE           

Routine R0201, 0 locals
    Action routine for:
        "taste noun"

       CALL_VN         R0240 (#36,#01,G2d)
       RTRUE           

Routine R0202, 0 locals
    Action routine for:
        "dig noun"
        "dig noun with held"

       CALL_VN         R0240 (#38,#01,G2d)
       RTRUE           

Routine R0203, 0 locals
    Action routine for:
        "chop noun"

       CALL_VN         R0240 (#39,#01,G2d)
       RTRUE           

Routine R0204, 0 locals
    Action routine for:
        "hop"

       CALL_VN         R0240 (#3a,#01,G2d)
       RTRUE           

Routine R0205, 0 locals
    Action routine for:
        "hop over noun"

       CALL_VN         R0240 (#3b,#01,G2d)
       RTRUE           

Routine R0206, 0 locals
    Action routine for:
        "attach noun"
        "attach noun to noun"

       CALL_VN         R0240 (#3c,#01,G2d)
       RTRUE           

Routine R0207, 0 locals
    Action routine for:
        "drink noun"

       CALL_VN         R0240 (#3d,#01,G2d)
       RTRUE           

Routine R0208, 0 locals
    Action routine for:
        "fill noun"

       CALL_VN         R0240 (#3e,#01,G2d)
       RTRUE           

Routine R0209, 0 locals
    Action routine for:
        "sorry"

       CALL_VN         R0240 (#3f,#01,G2d)
       RTRUE           

Routine R0210, 0 locals
    Action routine for:
        "damn"
        "damn topic"

       CALL_VN         R0240 (#40,#01,G2d)
       RTRUE           

Routine R0211, 0 locals
    Action routine for:
        "bother"
        "bother topic"

       CALL_VN         R0240 (#41,#01,G2d)
       RTRUE           

Routine R0212, 0 locals
    Action routine for:
        "dive"

       CALL_VN         R0240 (#43,#01,G2d)
       RTRUE           

Routine R0213, 0 locals
    Action routine for:
        "swing noun"
        "swing on noun"

       CALL_VN         R0240 (#44,#01,G2d)
       RTRUE           

Routine R0214, 0 locals
    Action routine for:
        "blow held"

       CALL_VN         R0240 (#45,#01,G2d)
       RTRUE           

Routine R0215, 0 locals
    Action routine for:
        "clean noun"
        "clean noun with noun" REVERSE
        "clean noun on noun"

       CALL_VN         R0240 (#46,#01,G2d)
       RTRUE           

Routine R0216, 0 locals
    Action routine for:
        "adjust noun"

       CALL_VN         R0240 (#47,#01,G2d)
       RTRUE           

Routine R0217, 0 locals
    Action routine for:
        "adjust noun to special"

       CALL_VN         R0240 (#48,#01,G2d)
       RTRUE           

Routine R0218, 0 locals
    Action routine for:
        "wave"

       CALL_VN         R0240 (#49,#01,G2d)
       RTRUE           

Routine R0219, 0 locals
    Action routine for:
        "buy noun"

       CALL_VN         R0240 (#54,#01,G2d)
       RTRUE           

Routine R0220, 0 locals
    Action routine for:
        "sing"

       CALL_VN         R0240 (#55,#01,G2d)
       RTRUE           

Routine R0221, 0 locals
    Action routine for:
        "climb noun"
        "climb up / over noun"

       CALL_VN         R0240 (#56,#01,G2d)
       RTRUE           

Routine R0222, 0 locals
    Action routine for:
        "nap"

       CALL_VN         R0240 (#58,#01,G2d)
       RTRUE           

Routine R0223, 0 locals
    Action routine for:
        "l up topic in noun"
        "consult noun about topic"
        "consult noun on topic"
        "read about topic in noun"
        "read topic in noun"

       CALL_VN         R0240 (#59,#01,G2d)
       RTRUE           

Routine R0224, 0 locals
    Action routine for:
        "feel noun"

       JE              G2d,G14 [FALSE] L0001
       CALL_VS         R0240 (#37,#03,G2d) -> -(SP)
       RET_POPPED      
L0001: CALL_2S         R0151 (G2d) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       RTRUE           
L0002: TEST_ATTR       G2d,#00 [FALSE] L0003
       CALL_VS         R0240 (#37,#01,G2d) -> -(SP)
       RET_POPPED      
L0003: CALL_VN         R0240 (#37,#02,G2d)
       RTRUE           

Routine R0225, 0 locals
    Action routine for:
        "wave noun"

       GET_PARENT      G2d -> -(SP)
       JE              (SP)+,G14 [TRUE] L0001
       CALL_VS         R0240 (#4a,#01,G2d) -> -(SP)
       RET_POPPED      
L0001: CALL_VN         R0240 (#4a,#02,G2d)
       RTRUE           

Routine R0226, 0 locals
    Action routine for:
        "drag noun"

       CALL_2S         R0151 (G2d) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       RTRUE           
L0001: TEST_ATTR       G2d,#13 [FALSE] L0002
       CALL_VS         R0240 (#4b,#01,G2d) -> -(SP)
       RET_POPPED      
L0002: TEST_ATTR       G2d,#11 [FALSE] L0003
       CALL_VS         R0240 (#4b,#02,G2d) -> -(SP)
       RET_POPPED      
L0003: TEST_ATTR       G2d,#00 [FALSE] L0004
       CALL_VS         R0240 (#4b,#04,G2d) -> -(SP)
       RET_POPPED      
L0004: CALL_VN         R0240 (#4b,#03,G2d)
       RTRUE           

Routine R0227, 0 locals
    Action routine for:
        "clear noun"

       CALL_2S         R0151 (G2d) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       RTRUE           
L0001: TEST_ATTR       G2d,#13 [FALSE] L0002
       CALL_VS         R0240 (#4c,#01,G2d) -> -(SP)
       RET_POPPED      
L0002: TEST_ATTR       G2d,#11 [FALSE] L0003
       CALL_VS         R0240 (#4c,#02,G2d) -> -(SP)
       RET_POPPED      
L0003: TEST_ATTR       G2d,#00 [FALSE] L0004
       CALL_VS         R0240 (#4b,#04,G2d) -> -(SP)
       RET_POPPED      
L0004: CALL_VN         R0240 (#4c,#03,G2d)
       RTRUE           

Routine R0228, 0 locals
    Action routine for:
        "rotate noun"

       CALL_2S         R0151 (G2d) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       RTRUE           
L0001: TEST_ATTR       G2d,#13 [FALSE] L0002
       CALL_VS         R0240 (#4d,#01,G2d) -> -(SP)
       RET_POPPED      
L0002: TEST_ATTR       G2d,#11 [FALSE] L0003
       CALL_VS         R0240 (#4d,#02,G2d) -> -(SP)
       RET_POPPED      
L0003: TEST_ATTR       G2d,#00 [FALSE] L0004
       CALL_VS         R0240 (#4b,#04,G2d) -> -(SP)
       RET_POPPED      
L0004: CALL_VN         R0240 (#4d,#03,G2d)
       RTRUE           

Routine R0229, 0 locals
    Action routine for:
        "wait"

       CALL_1S         R0081 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       CALL_VN         R0240 (#57,#01,G2d)
       RTRUE           

Routine R0230, 0 locals
    Action routine for:
        "clear noun noun"

       CALL_VN         R0240 (#4e,#01,G2d)
       RTRUE           

Routine R0231, 1 local

       GET_PARENT      G2e -> -(SP)
       JE              (SP)+,#06 [TRUE] L0001
       CALL_VS         R0240 (#4e,#02,G2d) -> -(SP)
       RET_POPPED      
L0001: JE              G2e,#0f,#10 [FALSE] L0002
       CALL_VS         R0240 (#4e,#03,G2d) -> -(SP)
       RET_POPPED      
L0002: CALL_1N         R0081
       STORE           L00,G2d
       INSERT_OBJ      L00,G14
       CALL_VN         R0076 (#1b,G2e)
       JE              G02,#13 [FALSE] L0003
       INSERT_OBJ      L00,G17
       JUMP            L0004
L0003: INSERT_OBJ      L00,G02
L0004: RTRUE           

Routine R0232, 0 locals
    Action routine for:
        "squash noun"

       CALL_2S         R0151 (G2d) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       RTRUE           
L0001: TEST_ATTR       G2d,#00 [FALSE] L0002
       CALL_VS         R0240 (#4f,#01,G2d) -> -(SP)
       RET_POPPED      
L0002: CALL_VN         R0240 (#4f,#02,G2d)
       RTRUE           

Routine R0233, 0 locals
    Action routine for:
        "discard held at / against / on / onto noun"

       CALL_2S         R0151 (G2d) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       RTRUE           
L0001: JG              G2e,#01 [FALSE] L0003
       STORE           G2a,#1002
       CALL_VS         R0086 (G2e,#04) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       STORE           G2a,#50
       RTRUE           
L0002: STORE           G2a,#50
L0003: TEST_ATTR       G2e,#00 [TRUE] L0004
       CALL_VS         R0240 (#50,#01) -> -(SP)
       RET_POPPED      
L0004: CALL_VS         R0082 (G2e,#50) -> -(SP)
       JZ              (SP)+ [FALSE] RFALSE
       CALL_VN         R0240 (#50,#02,G2d)
       RTRUE           

Routine R0234, 0 locals
    Action routine for:
        "attack noun"

       CALL_2S         R0151 (G2d) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       RTRUE           
L0001: TEST_ATTR       G2d,#00 [FALSE] L0002
       CALL_VS         R0082 (G2d,#42) -> -(SP)
       JZ              (SP)+ [FALSE] RFALSE
L0002: CALL_VN         R0240 (#42,#01,G2d)
       RTRUE           

Routine R0235, 0 locals
    Action routine for:
        "embrace creature"

       CALL_2S         R0151 (G2d) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       RTRUE           
L0001: CALL_VS         R0082 (G2d,#32) -> -(SP)
       JZ              (SP)+ [FALSE] RFALSE
       JE              G2d,G14 [FALSE] L0002
       CALL_VS         R0240 (#37,#03,G2d) -> -(SP)
       RET_POPPED      
L0002: CALL_VN         R0240 (#32,#01,G2d)
       RTRUE           

Routine R0236, 0 locals
    Action routine for:
        "answer topic to creature"

       CALL_VS         R0082 (G2e,#52) -> -(SP)
       JZ              (SP)+ [FALSE] RFALSE
       CALL_VN         R0240 (#52,#01,G2d)
       RTRUE           

Routine R0237, 0 locals
    Action routine for:
        "tell creature about topic"

       JE              G2d,G14 [FALSE] L0001
       CALL_VS         R0240 (#51,#01,G2d) -> -(SP)
       RET_POPPED      
L0001: CALL_VS         R0082 (G2d,#51) -> -(SP)
       JZ              (SP)+ [FALSE] RFALSE
       CALL_VN         R0240 (#51,#02,G2d)
       RTRUE           

Routine R0238, 0 locals
    Action routine for:
        "ask creature about topic"

       CALL_VS         R0082 (G2d,#53) -> -(SP)
       JZ              (SP)+ [FALSE] RFALSE
       CALL_VN         R0240 (#53,#01,G2d)
       RTRUE           

Routine R0239, 0 locals
    Action routine for:
        "ask creature for noun"

       JE              G2d,G14 [FALSE] L0001
       CALL_2N         R0076 (#0e)
       RTRUE           
L0001: CALL_VN         R0240 (#1003,#01,G2d)
       RTRUE           

Routine R0240, 4 locals

       STORE           L03,Ge9
       STORE           Ge9,L00
       JZ              L01 [FALSE] L0001
       STORE           L01,#01
L0001: CALL_VN         R0241 (L01,L02)
       STORE           Ge9,L03
       RTRUE           

Routine R0241, 3 locals

       STORE           L02,G2a
       STORE           G28,L00
       STORE           G29,L01
       STORE           G2a,Ge9
       CALL_VS         R0086 (#17,#04) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       STORE           G2a,L02
       RFALSE          
L0001: STORE           G2a,L02
       CALL_VN         R0014 (L00,L01)
       RTRUE           

Routine R0242, 2 locals

       STOREW          #33fd,#00,#80
       OUTPUT_STREAM   REDIRECT_ENABLE,#33fd
       CALL_VS         R0424 (L00,#04) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       PRINT_PADDR     L00
L0001: CALL_VS         R0424 (L00,#03) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_1N         L00
L0002: OUTPUT_STREAM   #fffd
       LOADB           #00,#21 -> L01
       LOADW           #33fd,#00 -> -(SP)
       SUB             L01,(SP)+ -> L01
       DIV             L01,#02 -> L01
       STORE           Gef,L01
       JL              Gef,#01 [TRUE] L0004
L0003: PRINT_CHAR      ' '
       DEC             Gef
       JZ              Gef [FALSE] L0003
L0004: CALL_VS         R0424 (L00,#04) -> -(SP)
       JZ              (SP)+ [TRUE] L0005
       PRINT_PADDR     L00
L0005: CALL_VS         R0424 (L00,#03) -> -(SP)
       JZ              (SP)+ [TRUE] L0006
       CALL_1N         L00
L0006: RTRUE           

Routine R0243, 3 locals

       STOREW          #33fd,#00,#80
       OUTPUT_STREAM   REDIRECT_ENABLE,#33fd
       CALL_VS         R0424 (L00,#04) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       PRINT_PADDR     L00
L0001: CALL_VS         R0424 (L00,#03) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_1N         L00
L0002: OUTPUT_STREAM   #fffd
       LOADB           #00,#21 -> L02
       LOADW           #33fd,#00 -> -(SP)
       SUB             L02,(SP)+ -> L02
       DIV             L02,#02 -> L02
       SET_CURSOR      L01,L02
       CALL_VS         R0424 (L00,#04) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       PRINT_PADDR     L00
L0003: CALL_VS         R0424 (L00,#03) -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       CALL_1N         L00
L0004: RTRUE           

Routine R0244, 7 locals

       INC             G24
L0001: STORE           G25,#00
       CALL_1S         L01 -> L03
       STORE           L04,G27
       STORE           G27,S108
       STORE           G25,#ffff
       CALL_1N         L01
       CALL_VS         R0424 (G27,#04) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       PRINT_PADDR     G27
       JUMP            L0003
L0002: CALL_1N         G27
L0003: PRINT           "
--- "
       CALL_VS         R0424 (L04,#04) -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       PRINT_PADDR     L04
       JUMP            L0005
L0004: CALL_1N         L04
L0005: PRINT           " ---


"
       CALL_2S         R0083 (L00) -> -(SP)
       JE              (SP)+,#03 [FALSE] L0006
       PRINT_PADDR     L00
       JUMP            L0007
L0006: CALL_1N         L00
L0007: CALL_VN         R0240 (#1007,#34,L03)
       PRINT           "> "
       STORE           Gef,#00
       STORE           Gec,#2f43
       STOREB          Gec,#01,#00
       CALL_1N         R0099
       READ            Gec,#2fbc -> Gef
       LOADW           #2fbc,#01 -> L05
       JE              L05,"quit","q" [TRUE] L0008
       LOADB           #2fbc,#01 -> -(SP)
       JZ              (SP)+ [FALSE] L0010
L0008: DEC             G24
       JG              G24,#00 [TRUE] RFALSE
       JZ              G15 [FALSE] L0009
       CALL_2N         R0076 (#1f)
       RTRUE           
L0009: RFALSE          
L0010: CALL_2S         R0060 (#01) -> L05
       JZ              L05 [FALSE] L0011
       JUMP            L0001
L0011: JL              L05,#01 [TRUE] L0012
       JG              L05,L03 [FALSE] L0013
L0012: JUMP            L0007
L0013: STORE           G25,L05
       CALL_1S         L02 -> L06
       JE              L06,#02 [FALSE] L0014
       JUMP            L0001
L0014: JE              L06,#03 [TRUE] RFALSE
       JUMP            L0007

Routine R0245, 15 locals

       JZ              G23 [FALSE] L0001
       CALL_VN         R0244 (L00,L01,L02)
       RFALSE          
L0001: INC             G24
       STORE           L04,#00
L0002: STOREB          #347e,#00,L04
       STORE           G25,#00
       CALL_1S         L01 -> L05
       STORE           L07,G27
       STORE           G27,#fc18
       STORE           G25,#ffff
       CALL_1S         L01 -> L0e
       ADD             L0e,#05 -> L06
       STORE           L08,G27
       STORE           L0b,L0c
       JZ              L0b [FALSE] L0003
       STORE           L0b,L06
L0003: ADD             L06,L05 -> -(SP)
       JL              L0b,(SP)+ [TRUE] L0004
       ADD             L06,L05 -> -(SP)
       SUB             (SP)+,#01 -> L0b
L0004: STORE           G25,#fffb
       SUB             L0b,L06 -> -(SP)
       ADD             (SP)+,#01 -> G87
       CALL_1S         L01 -> -(SP)
       JE              (SP)+,#37 [FALSE] L0005
       INC             L0b
       JUMP            L0003
L0005: STORE           L0c,#00
       ERASE_WINDOW    #ffff
       ADD             L06,L05 -> L09
       SPLIT_WINDOW    L09
       LOADB           #00,#21 -> L09
       JZ              L09 [FALSE] L0006
       STORE           L09,#50
L0006: SET_WINDOW      #01
       SET_CURSOR      #01,#01
       SET_TEXT_STYLE  REVERSE
       STORE           Gef,L09
       JL              Gef,#01 [TRUE] L0008
L0007: PRINT_CHAR      ' '
       DEC             Gef
       JZ              Gef [FALSE] L0007
L0008: CALL_VN         R0243 (L07,#01)
       SET_CURSOR      #02,#01
       STORE           Gef,L09
       JL              Gef,#01 [TRUE] L0010
L0009: PRINT_CHAR      ' '
       DEC             Gef
       JZ              Gef [FALSE] L0009
L0010: SET_TEXT_STYLE  BOLDFACE
       JE              L08,#fc18 [TRUE] L0011
       CALL_VN         R0243 (L08,#02)
L0011: SET_TEXT_STYLE  ROMAN
       SET_TEXT_STYLE  REVERSE
       SET_CURSOR      #02,#02
       PRINT_PADDR     S020
       SUB             L09,#0c -> L0a
       SET_CURSOR      #02,L0a
       PRINT_PADDR     S021
       SET_CURSOR      #03,#01
       STORE           Gef,L09
       JL              Gef,#01 [TRUE] L0013
L0012: PRINT_CHAR      ' '
       DEC             Gef
       JZ              Gef [FALSE] L0012
L0013: SET_CURSOR      #03,#02
       PRINT_PADDR     S024
       SUB             L09,#11 -> L0a
       SET_CURSOR      #03,L0a
       JE              L03,#01 [FALSE] L0014
       PRINT           "    Q = quit game"
       JUMP            L0017
L0014: JE              L03,#02 [FALSE] L0015
       PRINT           "    Q = quit menu"
       JUMP            L0017
L0015: JE              G24,#01 [FALSE] L0016
       PRINT_PADDR     S022
       JUMP            L0017
L0016: PRINT_PADDR     S023
L0017: SET_TEXT_STYLE  ROMAN
       LOADW           #00,#08 -> Gef
       OR              #02,Gef -> Gef
       STOREW          #00,#08,Gef
       SET_CURSOR      #05,#01
       CALL_VS         R0424 (L00,#04) -> -(SP)
       JZ              (SP)+ [TRUE] L0018
       PRINT_PADDR     L00
       JUMP            L0019
L0018: CALL_2N         L00 (L04)
L0019: JG              L04,#00 [FALSE] L0020
       SUB             L09,#07 -> L0a
       SUB             L06,L0e -> L09
       SET_CURSOR      L09,L0a
       PRINT           "[More]"
L0020: LOADB           #00,#20 -> -(SP)
       ADD             L06,L05 -> -(SP)
       JG              (SP)+,(SP)+ [FALSE] L0021
       JZ              L04 [TRUE] L0022
L0021: JG              L04,#00 [FALSE] L0023
       LOADB           #00,#20 -> -(SP)
       ADD             L06,L05 -> -(SP)
       SUB             (SP)+,L04 -> -(SP)
       SUB             (SP)+,L0e -> -(SP)
       JG              (SP)+,(SP)+ [FALSE] L0023
L0022: LOADB           #00,#21 -> -(SP)
       SUB             (SP)+,#07 -> L0a
       LOADB           #00,#20 -> L09
       SET_CURSOR      L09,L0a
       PRINT           "[More]"
L0023: LOADB           #347e,#00 -> -(SP)
       JE              (SP)+,L04 [TRUE] L0024
       STORE           L0c,#00
       STOREB          #347e,#00,L04
       JUMP            L0003
L0024: JE              L0b,L0c [TRUE] L0028
       JG              L0c,#00 [FALSE] L0026
       JG              L04,#00 [FALSE] L0025
       SUB             L0c,L0e -> -(SP)
       SUB             (SP)+,L04 -> -(SP)
       ADD             (SP)+,#01 -> L0c
L0025: SET_CURSOR      L0c,#04
       PRINT           " "
L0026: STORE           L0c,L0b
       JG              L04,#00 [FALSE] L0027
       SUB             L0b,L0e -> -(SP)
       SUB             (SP)+,L04 -> -(SP)
       ADD             (SP)+,#01 -> L0b
L0027: SET_CURSOR      L0b,#04
       PRINT           ">"
       STORE           L0b,L0c
L0028: READ_CHAR       #01,#00,#00 -> L0d
       JE              L0d,#4e,#6e,#82 [FALSE] L0035
L0029: INC             L0b
       ADD             L06,L05 -> -(SP)
       JL              L0b,(SP)+ [TRUE] L0030
       STORE           L0b,L06
       STORE           L04,#00
L0030: JZ              L04 [FALSE] L0031
       LOADB           #00,#20 -> -(SP)
       JL              L0b,(SP)+ [FALSE] L0032
L0031: JG              L04,#00 [FALSE] L0033
       LOADB           #00,#20 -> -(SP)
       SUB             L0b,L0e -> -(SP)
       SUB             (SP)+,L04 -> -(SP)
       JL              (SP)+,(SP)+ [TRUE] L0033
L0032: INC             L04
L0033: STORE           G25,#fffb
       SUB             L0b,L06 -> -(SP)
       ADD             (SP)+,#01 -> G87
       CALL_1S         L01 -> -(SP)
       JE              (SP)+,#37 [FALSE] L0034
       JUMP            L0029
L0034: JUMP            L0023
L0035: JE              L0d,#50,#70,#81 [FALSE] L0041
L0036: DEC             L0b
       SUB             L06,#01 -> -(SP)
       JE              L0b,(SP)+ [FALSE] L0038
       ADD             L06,L05 -> -(SP)
       SUB             (SP)+,#01 -> L0b
       LOADB           #00,#20 -> -(SP)
       JG              L0b,(SP)+ [FALSE] L0038
L0037: INC             L04
       LOADB           #00,#20 -> -(SP)
       SUB             L0b,L0e -> -(SP)
       SUB             (SP)+,L04 -> -(SP)
       JL              (SP)+,(SP)+ [FALSE] L0037
L0038: JG              L04,#00 [FALSE] L0039
       SUB             L06,L0e -> -(SP)
       SUB             (SP)+,#01 -> -(SP)
       SUB             L0b,L0e -> -(SP)
       SUB             (SP)+,L04 -> -(SP)
       JG              (SP)+,(SP)+ [TRUE] L0039
       DEC             L04
L0039: STORE           G25,#fffb
       SUB             L0b,L06 -> -(SP)
       ADD             (SP)+,#01 -> G87
       CALL_1S         L01 -> -(SP)
       JE              (SP)+,#37 [FALSE] L0040
       JUMP            L0036
L0040: JUMP            L0023
L0041: JE              L0d,#51,#71,#1b [TRUE] L0042
       JE              L0d,#83 [FALSE] L0043
L0042: JUMP            L0050
L0043: JE              L0d,#0a,#0d,#84 [FALSE] L0049
       SET_WINDOW      #00
       LOADW           #00,#08 -> Gef
       AND             #fffd,Gef -> Gef
       STOREW          #00,#08,Gef
       NEW_LINE        
       NEW_LINE        
       NEW_LINE        
       SUB             L0b,L06 -> -(SP)
       ADD             (SP)+,#01 -> G25
       CALL_1N         L01
       ERASE_WINDOW    #ffff
       SPLIT_WINDOW    #01
       LOADB           #00,#21 -> L09
       JZ              L09 [FALSE] L0044
       STORE           L09,#50
L0044: SET_WINDOW      #01
       SET_CURSOR      #01,#01
       SET_TEXT_STYLE  REVERSE
       STORE           Gef,L09
       JL              Gef,#01 [TRUE] L0046
L0045: PRINT_CHAR      ' '
       DEC             Gef
       JZ              Gef [FALSE] L0045
L0046: CALL_VN         R0243 (G27,#01)
       SET_TEXT_STYLE  ROMAN
       SET_WINDOW      #00
       NEW_LINE        
       CALL_1S         L02 -> L09
       JE              L09,#02 [FALSE] L0047
       JUMP            L0002
L0047: JE              L09,#03 [FALSE] L0048
       JUMP            L0050
L0048: CALL_VN         R0240 (#1007,#35)
       READ_CHAR       #01,#00,#00 -> L0d
       JUMP            L0002
L0049: JUMP            L0023
L0050: JE              G88,#2710 [FALSE] L0051
       STORE           G88,#00
L0051: DEC             G24
       JG              G24,#00 [TRUE] RFALSE
       LOADW           #00,#08 -> Gef
       AND             #fffd,Gef -> Gef
       STOREW          #00,#08,Gef
       SET_CURSOR      #01,#01
       ERASE_WINDOW    #ffff
       SET_WINDOW      #00
       NEW_LINE        
       NEW_LINE        
       NEW_LINE        
       JZ              G15 [FALSE] L0052
       JZ              L03 [FALSE] L0052
       CALL_2N         R0076 (#1f)
       RTRUE           
L0052: RTRUE           

Routine R0246, 0 locals

       CALL_VS         R0418 (Geb,#23) -> -(SP)
       RET_POPPED      

Routine R0247, 0 locals

       CALL_VS         R0423 (Geb,#004f) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       CALL_VN         R0418 (Geb,#004f)
       RTRUE           
L0001: RFALSE          

Routine R0248, 0 locals

       CALL_VN         R0418 (Geb,#0050)
       RET             #02

Routine R0249, 0 locals

       CALL_VS         R0417 (Geb,#0053) -> -(SP)
       CALL_VS         R0417 (Geb,#0052) -> -(SP)
       CALL_VS         R0417 (Geb,#0051) -> -(SP)
       CALL_VN         R0245 ((SP)+,(SP)+,(SP)+)
       RET             #02

Routine R0250, 3 locals

       JZ              L00 [FALSE] L0002
       CALL_VS         R0423 (Geb,#23) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       CALL_VN         R0418 (Geb,#23)
       JUMP            L0002
L0001: NEW_LINE        
L0002: STORE           L02,#01
       GET_CHILD       Geb -> -(SP) [FALSE] L0003
L0003: PULL            L01
       JZ              L01 [TRUE] L0008
L0004: JL              L02,L00 [TRUE] L0007
       STORE           Gef,#05
       JL              Gef,#01 [TRUE] L0006
L0005: PRINT_CHAR      ' '
       DEC             Gef
       JZ              Gef [FALSE] L0005
L0006: CALL_2N         R0105 (L01)
       NEW_LINE        
L0007: INC             L02
       GET_SIBLING     L01 -> L01 [TRUE] L0004
L0008: RFALSE          

Routine R0251, 2 locals

       JE              G25,#fffb [FALSE] L0006
       GET_CHILD       Geb -> L01 [FALSE] L0001
L0001: STORE           L00,#01
L0002: JZ              L01 [TRUE] L0006
       JE              G87,L00 [FALSE] L0004
       CALL_VS         R0424 (L01,#19) -> -(SP)
       JZ              (SP)+ [FALSE] L0003
       TEST_ATTR       L01,#0b [FALSE] L0004
L0003: RET             #37
L0004: GET_SIBLING     L01 -> L01 [FALSE] L0005
L0005: INC             L00
       JUMP            L0002
L0006: JE              G25,#ffff [FALSE] L0010
       CALL_VS         R0423 (Geb,#4d) -> -(SP)
       JZ              (SP)+ [TRUE] L0007
       CALL_VS         R0417 (Geb,#4d) -> G27
L0007: CALL_VS         R0423 (Geb,#4e) -> -(SP)
       JZ              (SP)+ [TRUE] L0008
       CALL_VS         R0417 (Geb,#0055) -> G27
L0008: CALL_VS         R0423 (Geb,#29) -> -(SP)
       JZ              (SP)+ [TRUE] L0009
       CALL_VS         R0418 (Geb,#29) -> -(SP)
       RET_POPPED      
L0009: RTRUE           
L0010: JZ              G25 [FALSE] L0015
       CALL_VS         R0423 (Geb,#4e) -> -(SP)
       JZ              (SP)+ [TRUE] L0011
       CALL_VS         R0417 (Geb,#4e) -> G27
       JUMP            L0012
L0011: CALL_VS         R0417 (Geb,#0055) -> G27
L0012: STORE           Gef,#00
       GET_CHILD       Geb -> -(SP) [FALSE] L0014
L0013: INC             Gef
       GET_SIBLING     (SP)+ -> -(SP) [TRUE] L0013
L0014: PULL            Gee
       PUSH            Gef
       RET_POPPED      
L0015: GET_CHILD       Geb -> L01 [FALSE] L0016
L0016: STORE           L00,#01
L0017: JZ              L01 [TRUE] L0020
       JE              G25,L00 [FALSE] L0018
       STORE           G26,L01
       CALL_VS         R0417 (Geb,#0054) -> G27
L0018: GET_SIBLING     L01 -> L01 [FALSE] L0019
L0019: INC             L00
       JUMP            L0017
L0020: RFALSE          

Routine R0252, 4 locals

       GET_CHILD       Geb -> L01 [FALSE] L0001
L0001: STORE           L03,#00
       STORE           L02,#02
       STORE           L00,#01
L0002: JZ              L01 [TRUE] L0005
       JE              G25,L00 [FALSE] L0003
       CALL_VS         R0418 (L01,#4c) -> L02
L0003: GET_SIBLING     L01 -> L01 [FALSE] L0004
L0004: INC             L00
       JUMP            L0002
L0005: RET             L02

Routine R0253, 0 locals

       CALL_VS         R0423 (G26,#4f) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       CALL_VS         R0417 (G26,#4f) -> -(SP)
       JE              (SP)+,#ffff [TRUE] L0002
       CALL_VS         R0417 (G26,#4f) -> -(SP)
       CALL_VS         R0424 ((SP)+,#04) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       CALL_VS         R0417 (G26,#4f) -> -(SP)
       PRINT_PADDR     (SP)+
       JUMP            L0002
L0001: CALL_VS         R0417 (G26,#4f) -> -(SP)
       CALL_VS         R0424 ((SP)+,#03) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_VN         R0418 (G26,#4f)
L0002: JUMP            L0004
L0003: CALL_2N         R0105 (G26)
L0004: RFALSE          

Routine R0254, 0 locals

       CALL_2N         R0105 (Geb)
       RFALSE          

Routine R0255, 2 locals

       JZ              L00 [FALSE] L0001
       STORE           L00,S111
L0001: PRINT_PADDR     L00
       READ_CHAR       #01,#00,#00 -> L01
       RTRUE           

Routine R0256, 3 locals

       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0003
       JE              #0000,#02 [FALSE] L0002
       PRINT           "["
       PRINT_NUM       L01
       PRINT           " hint"
       JG              L01,#01 [FALSE] L0001
       PRINT           "s"
L0001: PRINT           " left]-> "
       RTRUE           
L0002: JUMP            L0008
L0003: JE              Gef,#02 [FALSE] L0008
       JE              #0000,#01 [FALSE] L0006
       STORE           Gef,#00
       GET_CHILD       Geb -> -(SP) [FALSE] L0005
L0004: INC             Gef
       GET_SIBLING     (SP)+ -> -(SP) [TRUE] L0004
L0005: PULL            Gee
       PUSH            Gef
       SUB             (SP)+,L01 -> L02
       PRINT           " ["
       PRINT_NUM       L02
       PRINT           "/"
       ADD             L02,L01 -> -(SP)
       PRINT_NUM       (SP)+
       PRINT           "]"
L0006: JZ              #0000 [FALSE] L0008
       PRINT           " ("
       PRINT_NUM       L01
       PRINT           " hint"
       JG              L01,#01 [FALSE] L0007
       PRINT           "s"
L0007: PRINT           " left.)"
L0008: RFALSE          

Routine R0257, 0 locals
    Action routine for:
        "clue"

       TEST_ATTR       G00,#0b [TRUE] L0001
       CALL_VN         R0418 (G00,#4c)
       JUMP            L0002
L0001: PRINT_PADDR     S112
       NEW_LINE        
       RTRUE           
L0002: RTRUE           

Routine R0258, 0 locals
    Action routine for:
        "clue off"

       PRINT_PADDR     S113
       SET_ATTR        G00,#0b
       RTRUE           

Routine R0259, 0 locals

       CALL_2N         R0105 (Geb)
       RFALSE          

Routine R0260, 3 locals

       JZ              G23 [FALSE] L0001
       CALL_VN         R0418 (Geb,#4e)
       CALL_VN         R0418 (Geb,#56)
       PRINT_PADDR     S115
       JUMP            L0009
L0001: ERASE_WINDOW    #ffff
       SPLIT_WINDOW    #03
       SET_WINDOW      #01
       LOADB           #00,#21 -> L01
       JZ              L01 [FALSE] L0002
       STORE           L01,#50
L0002: SET_CURSOR      #01,#01
       SET_TEXT_STYLE  REVERSE
       STORE           Gef,L01
       JL              Gef,#01 [TRUE] L0004
L0003: PRINT_CHAR      ' '
       DEC             Gef
       JZ              Gef [FALSE] L0003
L0004: CALL_VS         R0417 (Geb,#4e) -> -(SP)
       CALL_VN         R0243 ((SP)+,#01)
       SET_CURSOR      #02,#01
       STORE           Gef,L01
       JL              Gef,#01 [TRUE] L0006
L0005: PRINT_CHAR      ' '
       DEC             Gef
       JZ              Gef [FALSE] L0005
L0006: SET_TEXT_STYLE  BOLDFACE
       CALL_VS         R0417 (Geb,#56) -> -(SP)
       CALL_VN         R0243 ((SP)+,#02)
       SET_TEXT_STYLE  ROMAN
       SET_TEXT_STYLE  REVERSE
       SET_CURSOR      #03,#01
       STORE           Gef,L01
       JL              Gef,#01 [TRUE] L0008
L0007: PRINT_CHAR      ' '
       DEC             Gef
       JZ              Gef [FALSE] L0007
L0008: SET_CURSOR      #03,#02
       PRINT           "RETURN = read hint"
       SUB             L01,#11 -> L02
       SET_CURSOR      #03,L02
       PRINT           "Q = previous menu"
       SET_TEXT_STYLE  ROMAN
       LOADW           #00,#08 -> Gef
       OR              #02,Gef -> Gef
       STOREW          #00,#08,Gef
       SET_WINDOW      #00
L0009: PRINT           "




"
       STORE           L01,#00
       GET_CHILD       Geb -> -(SP) [FALSE] L0010
L0010: PULL            L00
       JZ              L00 [TRUE] L0013
L0011: TEST_ATTR       L00,#08 [FALSE] L0012
       CALL_VN         R0418 (L00,#0057)
       NEW_LINE        
       INC             L01
L0012: GET_SIBLING     L00 -> L00 [TRUE] L0011
L0013: STORE           Gef,#00
       GET_CHILD       Geb -> -(SP) [FALSE] L0015
L0014: INC             Gef
       GET_SIBLING     (SP)+ -> -(SP) [TRUE] L0014
L0015: PULL            Gee
       PUSH            Gef
       SUB             (SP)+,L01 -> L01
       JZ              L01 [FALSE] L0016
       CALL_2N         R0255 (S109)
       RET             #02
L0016: GET_CHILD       Geb -> L00 [FALSE] L0017
L0017: JUMP            L0019
L0018: GET_SIBLING     L00 -> L00 [FALSE] L0019
L0019: TEST_ATTR       L00,#08 [FALSE] L0020
       JUMP            L0018
L0020: CALL_VS         R0256 (#01,L01,L02) -> -(SP)
       JE              (SP)+,#01 [FALSE] L0025
L0021: READ_CHAR       #01,#00,#00 -> L02
       JE              L02,#51,#71,#1b [TRUE] L0022
       JE              L02,#0a,#0d,#84 [FALSE] L0021
L0022: JE              L02,#51,#71,#1b [FALSE] L0023
       RET             #02
L0023: JE              L02,#0a,#0d,#84 [FALSE] L0024
       CALL_VN         R0418 (L00,#0057)
L0024: DEC             L01
       JUMP            L0029
L0025: CALL_VN         R0418 (L00,#0057)
       DEC             L01
       JZ              L01 [FALSE] L0026
       JUMP            L0029
L0026: CALL_VN         R0256 (#02,L01,L02)
L0027: READ_CHAR       #01,#00,#00 -> L02
       JE              L02,#51,#71,#1b [TRUE] L0028
       JE              L02,#0a,#0d,#84 [FALSE] L0027
L0028: JE              L02,#51,#71,#1b [FALSE] L0029
       CLEAR_ATTR      L00,#08
       RET             #02
L0029: GET_SIBLING     L00 -> L00 [FALSE] L0030
L0030: NEW_LINE        
       JZ              L01 [FALSE] L0020
       CALL_2N         R0255 (S109)
       RET             #02

Routine R0261, 0 locals

       CALL_VS         R0423 (Geb,#23) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       CALL_VN         R0084 (Geb,#23,#01)
       JUMP            L0002
L0001: CALL_2N         R0105 (Geb)
L0002: SET_ATTR        Geb,#08
       RFALSE          

Routine R0262, 0 locals

       PRINT_PADDR     S117
       CALL_VS         R0417 (Geb,#58) -> -(SP)
       PRINT_PADDR     (SP)+
       PRINT_RET       " light."

Routine R0263, 0 locals

       JE              Ge9,#0f [FALSE] L0006
       INSERT_OBJ      Geb,G14
       TEST_ATTR       Geb,#08 [TRUE] L0001
       INSERT_OBJ      "pair of glass bottles","Limbo"
       CLEAR_ATTR      "blue bottle",#03
       CLEAR_ATTR      "green bottle",#03
L0001: JE              Geb,#006b [FALSE] L0003
       TEST_ATTR       Geb,#08 [TRUE] L0002
       SET_ATTR        Geb,#08
       PRINT_PADDR     S118
       NEW_LINE        
       RTRUE           
L0002: PRINT_PADDR     S119
       NEW_LINE        
       RTRUE           
       JUMP            L0005
L0003: TEST_ATTR       Geb,#08 [TRUE] L0004
       SET_ATTR        Geb,#08
       PRINT_PADDR     S120
       NEW_LINE        
       RTRUE           
L0004: PRINT_PADDR     S121
       NEW_LINE        
       RTRUE           
L0005: RFALSE          
L0006: JE              Ge9,#1002 [FALSE] L0007
       INSERT_OBJ      G2d,G02
       CALL_2N         R0104 (G2d)
       PRINT           " shatters "
       CALL_2N         R0103 (Geb)
       PRINT           ".  "
       CALL_VN         R0418 (Geb,#005f)
       RTRUE           
L0007: JE              Ge9,#27 [FALSE] L0008
       PRINT_PADDR     S122
       CALL_VN         R0418 (Geb,#005f)
       RTRUE           
L0008: JE              Ge9,#42 [FALSE] L0009
       PRINT           "You shatter "
       CALL_2N         R0103 (Geb)
       PRINT           ".  "
       CALL_VN         R0418 (Geb,#005f)
       RTRUE           
L0009: RFALSE          

Routine R0264, 0 locals

       JE              Ge9,#35 [FALSE] L0001
       PRINT_PADDR     S124
       NEW_LINE        
       RTRUE           
L0001: RFALSE          

Routine R0265, 0 locals

       PRINT_PADDR     S125
       RET             #0025

Routine R0266, 0 locals

       JE              Ge9,#0f [FALSE] L0001
       PRINT_PADDR     S128
       NEW_LINE        
       RTRUE           
L0001: RFALSE          

Routine R0267, 0 locals

       JE              Ge9,#0f [FALSE] L0001
       PRINT_PADDR     S130
       NEW_LINE        
       RTRUE           
L0001: RFALSE          

Routine R0268, 0 locals

       JE              Ge9,#34 [FALSE] L0001
       PRINT_PADDR     S131
       NEW_LINE        
       RTRUE           
L0001: RFALSE          

Routine R0269, 0 locals

       RANDOM          #05 -> -(SP)
       JE              (SP)+,#01 [FALSE] L0005
       RANDOM          #05 -> -(SP)
       PULL            Gef
       JE              Gef,#01 [FALSE] L0001
       PRINT_PADDR     S135
       NEW_LINE        
       RTRUE           
L0001: JE              Gef,#02 [FALSE] L0002
       PRINT_PADDR     S136
       NEW_LINE        
       RTRUE           
L0002: JE              Gef,#03 [FALSE] L0003
       PRINT_PADDR     S137
       NEW_LINE        
       RTRUE           
L0003: JE              Gef,#04 [FALSE] L0004
       PRINT_PADDR     S138
       NEW_LINE        
       RTRUE           
L0004: JE              Gef,#05 [FALSE] L0005
       PRINT_PADDR     S139
       NEW_LINE        
       RTRUE           
L0005: RFALSE          

Routine R0270, 0 locals

       JE              Ge9,#34 [FALSE] L0001
       PRINT_PADDR     S141
       NEW_LINE        
       RTRUE           
L0001: RFALSE          

Routine R0271, 0 locals

       JE              Ge9,#60 [FALSE] L0001
       PRINT_PADDR     S144
       NEW_LINE        
       RTRUE           
L0001: JE              Ge9,#4c,#4b [FALSE] L0002
       PRINT_PADDR     S145
       NEW_LINE        
       RTRUE           
L0002: JE              Ge9,#0f [FALSE] L0003
       PRINT_PADDR     S146
       NEW_LINE        
       RTRUE           
L0003: RFALSE          

Routine R0272, 0 locals

       PRINT_PADDR     S147
       TEST_ATTR       "broken limb",#0c [TRUE] L0001
       TEST_ATTR       Geb,#08 [FALSE] L0001
       PRINT_PADDR     S148
       NEW_LINE        
       RTRUE           
L0001: NEW_LINE        
       RTRUE           

Routine R0273, 0 locals

       PRINT_PADDR     S149
       TEST_ATTR       "broken limb",#0c [TRUE] L0001
       TEST_ATTR       Geb,#08 [FALSE] L0001
       PRINT_PADDR     S150
       NEW_LINE        
       RTRUE           
L0001: NEW_LINE        
       RTRUE           

Routine R0274, 0 locals

       JE              Ge9,#0f [FALSE] L0002
       TEST_ATTR       "broken limb",#0c [TRUE] L0001
       SET_ATTR        Geb,#08
       PRINT_PADDR     S151
       NEW_LINE        
       RTRUE           
L0001: PRINT_RET       "The branch is too large to take."
       RFALSE          
L0002: JE              Ge9,#4c,#4b [FALSE] L0003
       PRINT_PADDR     S152
       NEW_LINE        
       RTRUE           
L0003: RFALSE          

Routine R0275, 0 locals

       JE              Ge9,#0f [FALSE] L0001
       CLEAR_ATTR      Geb,#03
L0001: RFALSE          

Routine R0276, 0 locals

       JE              Ge9,#0f [FALSE] L0001
       PRINT_PADDR     S155
       NEW_LINE        
       RTRUE           
L0001: JE              Ge9,#60 [FALSE] L0002
       PRINT_PADDR     S156
       NEW_LINE        
       RTRUE           
L0002: RFALSE          

Routine R0277, 0 locals

       JE              Ge9,#0f [FALSE] L0001
       PRINT_PADDR     S158
       NEW_LINE        
       RTRUE           
L0001: JE              Ge9,#2e [FALSE] L0002
       PRINT_PADDR     S159
       NEW_LINE        
       RTRUE           
L0002: RFALSE          

Routine R0278, 0 locals

       JE              Ge9,#0f [FALSE] L0002
       JIN             "handful of gravel",G14 [TRUE] L0001
       INSERT_OBJ      "handful of gravel",G14
       PRINT_RET       "You pick up a handful of gravel."
L0001: PRINT_PADDR     S169
       NEW_LINE        
       RTRUE           
       RFALSE          
L0002: JE              Ge9,#38 [FALSE] L0003
       PRINT_PADDR     S170
       NEW_LINE        
       RTRUE           
L0003: RFALSE          

Routine R0279, 0 locals

       JE              Ge9,#10 [FALSE] L0002
       INSERT_OBJ      Geb,"Limbo"
       CALL_VS         R0424 (G02,#24) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       PRINT_PADDR     S172
       NEW_LINE        
       RTRUE           
L0001: PRINT_PADDR     S173
       NEW_LINE        
       RTRUE           
L0002: RFALSE          

Routine R0280, 0 locals

       JE              Ge9,#50 [FALSE] L0001
       INSERT_OBJ      Geb,"Limbo"
       PRINT_PADDR     S174
       NEW_LINE        
       RTRUE           
L0001: RFALSE          

Routine R0281, 0 locals

       JE              Ge9,#0f [FALSE] L0001
       PRINT_PADDR     S176
       NEW_LINE        
       RTRUE           
L0001: RFALSE          

Routine R0282, 0 locals

       TEST_ATTR       "guard dog",#08 [TRUE] L0001
       PRINT_PADDR     S178
       NEW_LINE        
       RTRUE           
L0001: CALL_2N         R0142 (#00)
       RET             #0044

orphan code fragment:

       RFALSE          

Routine R0283, 0 locals

       CALL_VS         R0417 (#0046,#005d) -> -(SP)
       JE              (SP)+,#0037 [TRUE] L0001
       PRINT_PADDR     S179
       NEW_LINE        
       RTRUE           
L0001: RET             #0046

orphan code fragment:

       RFALSE          

Routine R0284, 0 locals

       JE              Ge9,#56 [FALSE] L0002
       CALL_VS         R0417 (#0046,#005d) -> -(SP)
       JE              (SP)+,#0037 [FALSE] L0001
       CALL_VN         R0076 (#1b,#0046)
       RTRUE           
L0001: PRINT_PADDR     S181
       NEW_LINE        
       RTRUE           
L0002: RFALSE          

Routine R0285, 0 locals

       CALL_VS         R0417 (Geb,#59) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       PRINT_PADDR     S182
       NEW_LINE        
       RTRUE           
L0001: PRINT_PADDR     S183
       NEW_LINE        
       RTRUE           

Routine R0286, 0 locals

       PRINT_RET       "The dog growls threateningly."

Routine R0287, 0 locals

       JE              Ge9,#37 [FALSE] L0001
       PRINT_PADDR     S185
       NEW_LINE        
       RTRUE           
L0001: RFALSE          

Routine R0288, 0 locals

       JE              Ge9,#42 [FALSE] L0001
       CALL_VN         R0416 (Geb,#59,#01)
       PRINT_PADDR     S186
       NEW_LINE        
       RTRUE           
L0001: JE              Ge9,#1002 [FALSE] L0002
       INSERT_OBJ      G2d,G02
       CALL_VN         R0076 (#42,Geb)
       RTRUE           
L0002: PRINT_RET       "The dog snarls and barks at you."

Routine R0289, 3 locals

       GET_PARENT      Geb -> L00
       STORE           L01,G02
       JE              L01,L00 [FALSE] L0005
       CLEAR_ATTR      Geb,#08
       CALL_VN         R0416 (Geb,#5a,#01)
       CALL_VS         R0417 (Geb,#59) -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       CALL_VS         R0419 (Geb,#5b) -> -(SP)
       PULL            Gef
       JE              Gef,#00 [FALSE] L0001
       PRINT_PADDR     S187
       NEW_LINE        
       RTRUE           
L0001: JE              Gef,#01 [FALSE] L0002
       PRINT_PADDR     S188
       NEW_LINE        
       RTRUE           
L0002: JE              Gef,#02 [FALSE] L0003
       PRINT_PADDR     S189
       NEW_LINE        
       RTRUE           
L0003: JE              Gef,#03 [FALSE] L0004
       STORE           G15,#01
       PRINT_PADDR     S190
       NEW_LINE        
       RTRUE           
L0004: PRINT_PADDR     S191
       NEW_LINE        
       RTRUE           
L0005: CALL_VS         R0417 (Geb,#5b) -> -(SP)
       JG              (SP)+,#00 [FALSE] L0006
       CALL_VN         R0420 (Geb,#5b)
L0006: CALL_VS         R0417 (Geb,#5a) -> -(SP)
       JZ              (SP)+ [TRUE] L0025
       CALL_VS         R0417 (Geb,#59) -> -(SP)
       JZ              (SP)+ [FALSE] L0007
       JE              L01,#33,#2f,#2b [FALSE] L0024
L0007: STORE           Gef,L00
       JE              Gef,#33 [FALSE] L0010
       JE              L01,#2b [FALSE] L0008
       STORE           L02,#01
L0008: JE              L01,#2f [FALSE] L0009
       STORE           L02,#ffff
L0009: JUMP            L0020
L0010: JE              Gef,#2b [FALSE] L0013
       JE              L01,#2d [FALSE] L0011
       STORE           L02,#01
L0011: JE              L01,#33 [FALSE] L0012
       STORE           L02,#ffff
L0012: JUMP            L0020
L0013: JE              Gef,#2d [FALSE] L0016
       JE              L01,#2f [FALSE] L0014
       STORE           L02,#01
L0014: JE              L01,#2b [FALSE] L0015
       STORE           L02,#ffff
L0015: JUMP            L0020
L0016: JE              Gef,#2f [FALSE] L0019
       JE              L01,#33 [FALSE] L0017
       STORE           L02,#01
L0017: JE              L01,#2d [FALSE] L0018
       STORE           L02,#ffff
L0018: JUMP            L0020
L0019: STORE           L02,#00
L0020: CALL_VS         R0417 (Geb,#5c) -> -(SP)
       ADD             (SP)+,L02 -> -(SP)
       CALL_VN         R0416 (Geb,#5c,(SP)+)
       CALL_VS         R0417 (Geb,#5c) -> -(SP)
       JG              (SP)+,#fffc [FALSE] L0022
       CALL_VS         R0417 (Geb,#5c) -> -(SP)
       JL              (SP)+,#04 [FALSE] L0022
       INSERT_OBJ      Geb,L01
       CALL_VS         R0417 (Geb,#59) -> -(SP)
       JZ              (SP)+ [TRUE] L0021
       PRINT_RET       "
The dog chases madly after you!"
L0021: PRINT_PADDR     S192
       CALL_2N         R0103 (L01)
       PRINT_RET       ", dragging its chain behind it."
L0022: TEST_ATTR       Geb,#08 [TRUE] L0023
       SET_ATTR        Geb,#08
       CALL_VN         R0416 (Geb,#5a,#00)
       CALL_VS         R0417 (Geb,#5c) -> -(SP)
       SUB             (SP)+,L02 -> -(SP)
       CALL_VN         R0416 (Geb,#5c,(SP)+)
       PRINT_PADDR     S193
       NEW_LINE        
       RTRUE           
L0023: JUMP            L0025
L0024: CALL_VN         R0416 (Geb,#5a,#00)
       INSERT_OBJ      Geb,"Front of the Church"
       CALL_VN         R0416 (Geb,#5c,#00)
       PRINT_PADDR     S194
       NEW_LINE        
       RTRUE           
L0025: RTRUE           

Routine R0290, 0 locals

       TEST_ATTR       "guard dog",#08 [FALSE] L0008
       STORE           Gef,G02
       JE              Gef,#33 [FALSE] L0003
       JIN             "guard dog",G02 [TRUE] L0002
       PRINT_PADDR     S196
       CALL_VS         R0417 (#35,#5c) -> -(SP)
       JG              (SP)+,#00 [FALSE] L0001
       PRINT_RET       "northwest."
L0001: PRINT_RET       "northeast."
L0002: JUMP            L0008
L0003: JE              Gef,#2f [FALSE] L0005
       JIN             "guard dog",G02 [TRUE] L0004
       PRINT_PADDR     S197
       NEW_LINE        
       RTRUE           
L0004: JUMP            L0008
L0005: JE              Gef,#2b [FALSE] L0007
       JIN             "guard dog",G02 [TRUE] L0006
       PRINT_PADDR     S198
       NEW_LINE        
       RTRUE           
L0006: JUMP            L0008
L0007: JE              Gef,#2d [FALSE] L0008
       PRINT_PADDR     S199
       NEW_LINE        
       RTRUE           
L0008: RTRUE           

Routine R0291, 0 locals

       JE              Ge9,#0f,#4b [FALSE] L0001
       PRINT_PADDR     S200
       NEW_LINE        
       RTRUE           
L0001: RFALSE          

Routine R0292, 0 locals

       JE              Ge9,#3a [FALSE] L0001
       STORE           G15,#01
       PRINT_PADDR     S202
       NEW_LINE        
       RTRUE           
L0001: JE              Ge9,#56 [FALSE] L0003
       JE              G2d,#0047 [TRUE] RFALSE
       JE              G2d,#0038 [TRUE] RFALSE
       CALL_VS         R0417 (#0047,#005e) -> -(SP)
       JE              (SP)+,#33 [TRUE] L0002
       PRINT_PADDR     S203
       NEW_LINE        
       RTRUE           
L0002: CALL_VN         R0076 (#56,#0047)
       RTRUE           
       RFALSE          
L0003: JE              Ge9,#10 [FALSE] L0004
       INSERT_OBJ      G2d,"Front of the Church"
       CALL_2N         R0104 (G2d)
       PRINT_PADDR     S204
       NEW_LINE        
       RTRUE           
L0004: RFALSE          

Routine R0293, 0 locals

       CALL_VS         R0417 (#0047,#005e) -> -(SP)
       JE              (SP)+,#33 [TRUE] L0001
       PRINT_PADDR     S205
       NEW_LINE        
       RTRUE           
L0001: RET             #33

Routine R0294, 0 locals

       JE              Ge9,#0f [FALSE] L0001
       PRINT_PADDR     S207
       NEW_LINE        
       RTRUE           
L0001: JE              Ge9,#56 [FALSE] L0002
       CALL_VN         R0127 (#006f,#02)
L0002: RFALSE          

Routine R0295, 0 locals

       JE              Ge9,#0f [FALSE] L0001
       PRINT_PADDR     S209
       NEW_LINE        
       RTRUE           
L0001: RFALSE          

Routine R0296, 0 locals

       JE              G02,#25 [FALSE] L0001
       PRINT_PADDR     S211
       NEW_LINE        
       RTRUE           
L0001: PRINT_PADDR     S212
       NEW_LINE        
       RTRUE           

Routine R0297, 0 locals

       JE              Ge9,#56 [FALSE] L0001
       PRINT_PADDR     S213
       NEW_LINE        
       RTRUE           
L0001: JE              Ge9,#0f [FALSE] L0002
       PRINT_PADDR     S214
       NEW_LINE        
       RTRUE           
L0002: JE              Ge9,#2e [FALSE] L0003
       PRINT_RET       "The vines are too wet to burn."
L0003: RFALSE          

Routine R0298, 0 locals

       JE              G02,#25 [FALSE] L0001
       PRINT_PADDR     S215
       NEW_LINE        
       RTRUE           
L0001: PRINT_PADDR     S216
       NEW_LINE        
       RTRUE           

Routine R0299, 0 locals

       JE              Ge9,#56 [FALSE] L0001
       PRINT_PADDR     S217
       NEW_LINE        
       RTRUE           
L0001: RFALSE          

Routine R0300, 0 locals

       JE              Ge9,#0f [FALSE] L0001
       PRINT_RET       "You can't take the wind!"
L0001: RFALSE          

Routine R0301, 0 locals

       CALL_VS         R0424 (G02,#24) -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
       JE              G02,#21 [TRUE] RTRUE
       JE              G02,#006f [TRUE] RTRUE
       RFALSE          

Routine R0302, 0 locals

       JE              Ge9,#0f [FALSE] L0001
       PRINT_RET       "You are already soaked."
L0001: RFALSE          

Routine R0303, 0 locals

       CALL_VS         R0424 (G02,#24) -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
       JE              G02,#21 [TRUE] RTRUE
       RFALSE          

Routine R0304, 0 locals

       JE              Ge9,#0f [FALSE] L0001
       PRINT_PADDR     S221
       NEW_LINE        
       RTRUE           
L0001: JE              Ge9,#38 [FALSE] L0002
       PRINT_PADDR     S222
       NEW_LINE        
       RTRUE           
L0002: RFALSE          

Routine R0305, 0 locals

       CALL_VS         R0424 (G02,#24) -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
       RFALSE          

Routine R0306, 0 locals

       JE              Ge9,#0f [FALSE] L0001
       PRINT_PADDR     S224
       NEW_LINE        
       RTRUE           
L0001: JE              Ge9,#2e [FALSE] L0002
       PRINT_PADDR     S225
       NEW_LINE        
       RTRUE           
L0002: RFALSE          

Routine R0307, 0 locals

       CALL_VS         R0424 (G02,#24) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       JE              G02,#25 [FALSE] RTRUE
L0001: RFALSE          

Routine R0308, 0 locals

       STORE           Gef,G02
       JE              Gef,#25 [FALSE] L0001
       PRINT_PADDR     S227
       NEW_LINE        
       RTRUE           
L0001: JE              Gef,#2b [FALSE] L0002
       PRINT_PADDR     S228
       NEW_LINE        
       RTRUE           
L0002: JE              Gef,#2d [FALSE] L0003
       PRINT_PADDR     S229
       NEW_LINE        
       RTRUE           
L0003: JE              Gef,#2f [FALSE] L0004
       PRINT_PADDR     S230
       NEW_LINE        
       RTRUE           
L0004: JE              Gef,#33 [FALSE] L0005
       PRINT_PADDR     S231
       NEW_LINE        
       RTRUE           
L0005: JE              Gef,#37 [FALSE] L0006
       PRINT_PADDR     S232
       NEW_LINE        
       RTRUE           
L0006: RFALSE          

Routine R0309, 0 locals

       CALL_VS         R0424 (G02,#24) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       JE              G02,#0044 [FALSE] RTRUE
L0001: RFALSE          

Routine R0310, 0 locals

       CALL_VS         R0424 (G02,#24) -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
       RFALSE          

Routine R0311, 0 locals

       JE              Ge9,#0f,#4c,#4b [TRUE] L0001
       JE              Ge9,#27,#28 [FALSE] L0002
L0001: PRINT_PADDR     S235
       NEW_LINE        
       RTRUE           
L0002: RFALSE          

Routine R0312, 0 locals

       CALL_VS         R0424 (G02,#24) -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
       RFALSE          

Routine R0313, 0 locals

       PRINT_PADDR     S240
       TEST_ATTR       Geb,#08 [TRUE] L0001
       PRINT_PADDR     S241
       NEW_LINE        
       RTRUE           
L0001: PRINT_PADDR     S242
       NEW_LINE        
       RTRUE           

Routine R0314, 0 locals

       JE              Ge9,#0f,#4c,#4b [FALSE] L0004
       TEST_ATTR       Geb,#08 [TRUE] L0003
       SET_ATTR        Geb,#08
       JE              G2a,#0f [FALSE] L0001
       INSERT_OBJ      "broken length of railing",G14
       JUMP            L0002
L0001: INSERT_OBJ      "broken length of railing",G02
L0002: PRINT_PADDR     S243
       NEW_LINE        
       RTRUE           
L0003: PRINT_PADDR     S244
       NEW_LINE        
       RTRUE           
L0004: RFALSE          

Routine R0315, 0 locals

       CALL_VS         R0417 (Geb,#5d) -> -(SP)
       PULL            Gef
       JE              Gef,#0062 [FALSE] L0001
       PRINT_PADDR     S246
       NEW_LINE        
       RTRUE           
L0001: JE              Gef,#37 [FALSE] L0002
       PRINT_PADDR     S247
       NEW_LINE        
       RTRUE           
L0002: JE              Gef,#004e [FALSE] L0003
       PRINT_PADDR     S248
       NEW_LINE        
       RTRUE           
L0003: PRINT_PADDR     S249
       NEW_LINE        
       RTRUE           

Routine R0316, 0 locals

       JE              Ge9,#61 [FALSE] L0005
       JIN             Geb,G14 [TRUE] L0001
       PRINT           "You don't have "
       CALL_2N         R0103 (Geb)
       PRINT_RET       "."
L0001: INSERT_OBJ      Geb,G02
       JE              G02,#0049 [FALSE] L0002
       JE              G2e,#004a [FALSE] L0002
       SET_ATTR        Geb,#05
       CALL_VN         R0416 (Geb,#5d,#0062)
       INSERT_OBJ      "top of railing","Steeple Chamber"
       CALL_VN         R0416 (#0047,#005e,#0049)
       PRINT_PADDR     S250
       NEW_LINE        
       RTRUE           
L0002: JE              G02,#33 [FALSE] L0003
       JE              G2e,#34 [FALSE] L0003
       SET_ATTR        Geb,#05
       CALL_VN         R0416 (Geb,#5d,#37)
       INSERT_OBJ      "top of railing","Top of Oak Tree"
       CALL_VN         R0416 (#0047,#005e,#33)
       PRINT_PADDR     S251
       NEW_LINE        
       RTRUE           
L0003: JE              G02,#004b [FALSE] L0004
       JE              G2e,#0056 [FALSE] L0004
       SET_ATTR        Geb,#05
       CALL_VN         R0416 (Geb,#5d,#004e)
       INSERT_OBJ      "top of railing","Near Painting"
       CALL_VN         R0416 (#0047,#005e,#004b)
       PRINT_PADDR     S252
       NEW_LINE        
       RTRUE           
L0004: PRINT           "You put "
       CALL_2N         R0103 (Geb)
       PRINT           " under "
       CALL_2N         R0103 (G2e)
       PRINT_RET       "."
L0005: JE              Ge9,#0f [FALSE] L0006
       CLEAR_ATTR      Geb,#05
       CALL_VN         R0416 (Geb,#5d,#00)
       INSERT_OBJ      "top of railing","Limbo"
       CALL_VN         R0416 (#0047,#005e,#00)
       RFALSE          
L0006: JE              Ge9,#56 [FALSE] L0008
       CALL_VS         R0417 (Geb,#5d) -> -(SP)
       JZ              (SP)+ [TRUE] L0007
       PRINT_PADDR     S253
       CALL_VN         R0076 (#1b,Geb)
       RTRUE           
L0007: PRINT_PADDR     S254
       NEW_LINE        
       RTRUE           
L0008: RFALSE          

Routine R0317, 0 locals

       CALL_VS         R0417 (Geb,#5d) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_VS         R0417 (Geb,#5d) -> -(SP)
       JE              (SP)+,#0062 [FALSE] L0001
       CALL_2N         R0142 (#01)
L0001: CALL_VS         R0417 (Geb,#5d) -> -(SP)
       RET_POPPED      
L0002: PRINT_PADDR     S255
       NEW_LINE        
       RTRUE           

Routine R0318, 0 locals

       CALL_VS         R0417 (Geb,#5e) -> -(SP)
       PULL            Gef
       JE              Gef,#0049 [FALSE] L0001
       PRINT_PADDR     S257
       NEW_LINE        
       RTRUE           
L0001: JE              Gef,#33 [FALSE] L0002
       PRINT_PADDR     S258
       NEW_LINE        
       RTRUE           
L0002: JE              Gef,#004b [FALSE] L0003
       PRINT_PADDR     S259
       NEW_LINE        
       RTRUE           
L0003: PRINT_RET       "You are standing on a bug!"

Routine R0319, 0 locals

       JE              Ge9,#0f [FALSE] L0001
       PRINT_PADDR     S260
       NEW_LINE        
       RTRUE           
L0001: JE              Ge9,#56 [FALSE] L0002
       CALL_VN         R0076 (#1b,Geb)
       RTRUE           
L0002: RFALSE          

Routine R0320, 0 locals

       CALL_VS         R0417 (Geb,#5e) -> -(SP)
       RET_POPPED      

Routine R0321, 0 locals

       RANDOM          #05 -> -(SP)
       JE              (SP)+,#01 [FALSE] L0005
       RANDOM          #05 -> -(SP)
       PULL            Gef
       JE              Gef,#01 [FALSE] L0001
       PRINT_PADDR     S264
       NEW_LINE        
       RTRUE           
L0001: JE              Gef,#02 [FALSE] L0002
       PRINT_PADDR     S265
       NEW_LINE        
       RTRUE           
L0002: JE              Gef,#03 [FALSE] L0003
       PRINT_PADDR     S266
       NEW_LINE        
       RTRUE           
L0003: JE              Gef,#04 [FALSE] L0004
       PRINT_PADDR     S267
       NEW_LINE        
       RTRUE           
L0004: JE              Gef,#05 [FALSE] L0005
       PRINT_PADDR     S268
       NEW_LINE        
       RTRUE           
L0005: RFALSE          

Routine R0322, 0 locals

       CALL_VS         R0417 (#46,#5d) -> -(SP)
       JE              (SP)+,#0062 [TRUE] L0001
       PRINT_PADDR     S270
       NEW_LINE        
       RTRUE           
L0001: RET             #46

Routine R0323, 0 locals

       JE              Ge9,#2f [FALSE] L0001
       PRINT_PADDR     S273
       NEW_LINE        
       RTRUE           
L0001: RFALSE          

Routine R0324, 0 locals

       CALL_VS         R0417 (#46,#5d) -> -(SP)
       JE              (SP)+,#004e [FALSE] L0001
       RET             #46
L0001: RFALSE          

Routine R0325, 0 locals

       JE              Ge9,#17 [FALSE] L0001
       PRINT_PADDR     S276
       NEW_LINE        
       RTRUE           
L0001: RFALSE          

Routine R0326, 0 locals

       JE              Ge9,#10 [FALSE] L0001
       INSERT_OBJ      G2d,"Sanctuary"
       CALL_2N         R0104 (G2d)
       PRINT_RET       " falls to the floor below."
L0001: RFALSE          

Routine R0327, 0 locals

       JE              Ge9,#22 [FALSE] L0002
       TEST_ATTR       "curtain",#08 [FALSE] L0001
       PRINT_PADDR     S280
       NEW_LINE        
       RTRUE           
L0001: PRINT_PADDR     S281
       NEW_LINE        
       RTRUE           
L0002: RFALSE          

Routine R0328, 0 locals

       JE              Ge9,#0f,#42,#27 [TRUE] L0001
       JE              Ge9,#1002 [FALSE] L0002
L0001: PRINT_PADDR     S284
       NEW_LINE        
       RTRUE           
L0002: RFALSE          

Routine R0329, 0 locals

       JE              Ge9,#0f,#42,#27 [TRUE] L0001
       JE              Ge9,#1002 [FALSE] L0002
L0001: PRINT_PADDR     S286
       NEW_LINE        
       RTRUE           
L0002: RFALSE          

Routine R0330, 0 locals

       JE              Ge9,#2f [FALSE] L0001
       PRINT_PADDR     S288
       NEW_LINE        
       RTRUE           
L0001: RFALSE          

Routine R0331, 0 locals

       PRINT_PADDR     S289
       GET_PARENT      "large black book" -> -(SP)
       JE              (SP)+,Geb [FALSE] L0001
       PRINT_PADDR     S290
       NEW_LINE        
       RTRUE           
L0001: NEW_LINE        
       RTRUE           

Routine R0332, 0 locals

       JE              Ge9,#60 [FALSE] L0001
       PRINT_PADDR     S292
       NEW_LINE        
       RTRUE           
L0001: JE              Ge9,#0f [FALSE] L0002
       CLEAR_ATTR      Geb,#03
L0002: RFALSE          

Routine R0333, 0 locals

       JE              Ge9,#0f [FALSE] L0001
       PRINT_PADDR     S294
       NEW_LINE        
       RTRUE           
L0001: RFALSE          

Routine R0334, 0 locals

       JE              Ge9,#4c,#4b [FALSE] L0002
       TEST_ATTR       Geb,#08 [TRUE] L0001
       INSERT_OBJ      "old grimoire",G02
       SET_ATTR        Geb,#08
       PRINT_PADDR     S299
       NEW_LINE        
       RTRUE           
L0001: RFALSE          
L0002: JE              Ge9,#22 [FALSE] L0003
       TEST_ATTR       Geb,#08 [TRUE] L0003
       PRINT_PADDR     S300
       NEW_LINE        
       RTRUE           
L0003: RFALSE          

Routine R0335, 0 locals

       JE              Ge9,#60 [FALSE] L0001
       PRINT_PADDR     S302
       NEW_LINE        
       RTRUE           
L0001: RFALSE          

Routine R0336, 0 locals

       TEST_ATTR       Geb,#08 [TRUE] L0001
       PRINT_PADDR     S304
       NEW_LINE        
       RTRUE           
L0001: PRINT_PADDR     S305
       NEW_LINE        
       RTRUE           

Routine R0337, 0 locals

       JE              Ge9,#22 [FALSE] L0001
       PRINT_PADDR     S306
       NEW_LINE        
       RTRUE           
L0001: JE              Ge9,#60 [FALSE] L0003
       TEST_ATTR       Geb,#08 [TRUE] L0002
       PRINT_RET       "But, the pages are all blank!"
L0002: CALL_2N         R0142 (#03)
       PRINT_PADDR     S307
       NEW_LINE        
       RTRUE           
L0003: RFALSE          

Routine R0338, 0 locals

       JE              Ge9,#0f [FALSE] L0002
       JIN             "handful of ashes",G14 [TRUE] L0001
       INSERT_OBJ      "handful of ashes",G14
       PRINT_RET       "You pick up a handful of ashes."
L0001: PRINT_PADDR     S309
       NEW_LINE        
       RTRUE           
       RFALSE          
L0002: JE              Ge9,#22 [FALSE] L0003
       CALL_VN         R0076 (#20,#005f)
       RTRUE           
L0003: RFALSE          

Routine R0339, 0 locals

       JE              Ge9,#10,#50 [FALSE] L0002
       INSERT_OBJ      Geb,"Limbo"
       CALL_VS         R0424 (G02,#24) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       PRINT_PADDR     S311
       NEW_LINE        
       RTRUE           
L0001: PRINT_PADDR     S312
       NEW_LINE        
       RTRUE           
       RFALSE          
L0002: JE              Ge9,#46,#13,#12 [FALSE] L0003
       JE              G2e,#5c [FALSE] L0003
       SET_ATTR        "journal",#08
       PRINT_PADDR     S313
       NEW_LINE        
       RTRUE           
L0003: RFALSE          

Routine R0340, 0 locals

       PRINT_PADDR     S314
       TEST_ATTR       "heavy stopper",#0c [TRUE] L0001
       PRINT_PADDR     S315
L0001: NEW_LINE        
       RTRUE           

Routine R0341, 0 locals

       JE              Ge9,#0f [FALSE] L0001
       PRINT_PADDR     S316
       NEW_LINE        
       RTRUE           
L0001: RFALSE          

Routine R0342, 0 locals

       JE              Ge9,#0f [FALSE] L0001
       CLEAR_ATTR      Geb,#03
L0001: RFALSE          

Routine R0343, 0 locals

       GET_PARENT      "heavy rope" -> -(SP)
       JE              (SP)+,G02 [TRUE] L0001
       PRINT_PADDR     S321
       NEW_LINE        
       RTRUE           
L0001: RET             #0071

Routine R0344, 0 locals

       CALL_VS         R0417 (#47,#5e) -> -(SP)
       JE              (SP)+,#49 [TRUE] L0001
       PRINT_PADDR     S322
       NEW_LINE        
       RTRUE           
L0001: RET             #49

Routine R0345, 0 locals

       JE              Ge9,#34 [FALSE] L0001
       PRINT_PADDR     S324
       NEW_LINE        
       RTRUE           
L0001: RFALSE          

Routine R0346, 0 locals

       TEST_ATTR       Geb,#0e [TRUE] L0001
       PRINT           "heavy wooden door"
       JUMP            L0002
L0001: PRINT           "splintered frame"
L0002: RTRUE           

Routine R0347, 0 locals

       TEST_ATTR       Geb,#0e [TRUE] L0001
       PRINT_PADDR     S325
       NEW_LINE        
       RTRUE           
L0001: PRINT_PADDR     S326
       NEW_LINE        
       RTRUE           

Routine R0348, 0 locals

       PRINT_PADDR     S327
       JE              G02,#62 [FALSE] L0001
       PRINT_RET       "north."
L0001: PRINT_RET       "south."

Routine R0349, 0 locals

       JE              G02,#62 [FALSE] L0001
       CALL_2N         R0142 (#02)
       RET             #63
L0001: RET             #62

Routine R0350, 0 locals

       JE              G02,#62 [FALSE] L0001
       RET             #07
L0001: RET             #08

Routine R0351, 0 locals

       TEST_ATTR       Geb,#08 [TRUE] L0001
       PRINT_PADDR     S329
       NEW_LINE        
       RTRUE           
L0001: CALL_VN         R0076 (#20,#0066)
       RTRUE           

Routine R0352, 0 locals

       TEST_ATTR       Geb,#08 [TRUE] L0001
       SET_ATTR        Geb,#08
       INSERT_OBJ      "mirror",G02
       CALL_2N         R0142 (#05)
       PRINT_PADDR     S331
       NEW_LINE        
       RTRUE           
L0001: PRINT_PADDR     S332
       NEW_LINE        
       RTRUE           

orphan code fragment:

       RFALSE          

Routine R0353, 0 locals

       TEST_ATTR       Geb,#0e [TRUE] L0001
       PRINT_PADDR     S333
       NEW_LINE        
       RTRUE           
L0001: PRINT_PADDR     S334
       NEW_LINE        
       RTRUE           

Routine R0354, 0 locals

       JE              Ge9,#27,#4b [FALSE] L0002
       TEST_ATTR       Geb,#0e [FALSE] L0001
       PRINT_PADDR     S335
       NEW_LINE        
       RTRUE           
L0001: INSERT_OBJ      "holes in the wall",G02
       SET_ATTR        Geb,#0e
       PRINT_PADDR     S336
       NEW_LINE        
       RTRUE           
L0002: JE              Ge9,#28,#4c [FALSE] L0004
       TEST_ATTR       Geb,#0e [TRUE] L0003
       PRINT_PADDR     S337
       NEW_LINE        
       RTRUE           
L0003: INSERT_OBJ      "holes in the wall","Limbo"
       CLEAR_ATTR      Geb,#0e
       PRINT_PADDR     S338
       NEW_LINE        
       RTRUE           
L0004: RFALSE          

Routine R0355, 0 locals

       JE              Ge9,#22 [FALSE] L0002
       TEST_ATTR       "Sanctuary",#18 [FALSE] L0001
       PRINT_PADDR     S340
       NEW_LINE        
       RTRUE           
L0001: PRINT_PADDR     S341
       NEW_LINE        
       RTRUE           
L0002: RFALSE          

Routine R0356, 0 locals

       JE              Ge9,#0f,#4c,#4b [FALSE] L0001
       PRINT_PADDR     S343
       NEW_LINE        
       RTRUE           
L0001: JE              Ge9,#4d [FALSE] L0002
       PRINT_PADDR     S344
       NEW_LINE        
       RTRUE           
L0002: RFALSE          

Routine R0357, 0 locals

       JE              Ge9,#0f [FALSE] L0001
       CALL_VN         R0076 (#0f,#006b)
       CALL_VN         R0076 (#0f,#006c)
       RFALSE          
L0001: JE              Ge9,#42 [FALSE] L0003
       RANDOM          #02 -> -(SP)
       JE              (SP)+,#01 [FALSE] L0002
       CALL_VN         R0076 (#42,#006b)
       RTRUE           
L0002: CALL_VN         R0076 (#42,#006c)
       RTRUE           
L0003: RFALSE          

Routine R0358, 0 locals

       STORE           G15,#01
       PRINT_PADDR     S349
       CALL_2N         R0103 (#006e)
       PRINT_PADDR     S350
       CALL_2N         R0103 (#006e)
       PRINT_RET       " standing over you, laughing..."

Routine R0359, 0 locals

       STORE           G15,#02
       CALL_2N         R0142 (#06)
       CALL_2N         R0104 (#006e)
       PRINT_PADDR     S352
       JE              G02,#63 [FALSE] L0001
       GET_PARENT      "oil lantern" -> -(SP)
       JE              (SP)+,#68 [TRUE] L0002
L0001: CALL_VS         R0424 (G02,#48) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       GET_PARENT      "oil lantern" -> -(SP)
       JE              (SP)+,G02 [FALSE] L0003
L0002: SET_ATTR        "oil lantern",#08
       PRINT_PADDR     S353
L0003: CALL_VS         R0424 (G02,#48) -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       GET_PARENT      "oil lantern" -> -(SP)
       JE              (SP)+,G14 [FALSE] L0004
       SET_ATTR        "oil lantern",#08
       PRINT_PADDR     S354
L0004: PRINT_PADDR     S355
       TEST_ATTR       "oil lantern",#08 [FALSE] L0005
       PRINT_PADDR     S356
       JUMP            L0006
L0005: PRINT_PADDR     S357
L0006: GET_PARENT      "blue bottle" -> -(SP)
       JE              (SP)+,G14 [FALSE] L0007
       CALL_VS         R0424 (G02,#48) -> -(SP)
       JZ              (SP)+ [TRUE] L0007
       PRINT_PADDR     S358
L0007: GET_PARENT      "blue bottle" -> -(SP)
       JE              (SP)+,#68 [FALSE] L0008
       JE              G02,#63 [FALSE] L0008
       PRINT_PADDR     S359
L0008: GET_PARENT      "blue bottle" -> -(SP)
       JE              (SP)+,G02 [FALSE] L0009
       CALL_VS         R0424 (G02,#48) -> -(SP)
       JZ              (SP)+ [TRUE] L0009
       GET_PARENT      "blue bottle" -> -(SP)
       JE              (SP)+,G14 [TRUE] L0009
       PRINT_PADDR     S360
       GET_PARENT      "blue bottle" -> -(SP)
       CALL_2N         R0103 ((SP)+)
       PRINT_PADDR     S361
L0009: PRINT_PADDR     S362
       NEW_LINE        
       RTRUE           

Routine R0360, 0 locals

       TEST_ATTR       Geb,#08 [TRUE] L0001
       PRINT           "old man"
       JUMP            L0002
L0001: PRINT           "Silas"
L0002: RTRUE           

Routine R0361, 0 locals

       PRINT           "An old, extremely gaunt man. "
       CALL_2N         R0104 (Geb)
       PRINT_PADDR     S364
       NEW_LINE        
       RTRUE           

Routine R0362, 0 locals

       JE              G2a,#3c [FALSE] L0001
       JE              G2e,Geb [FALSE] L0001
       CALL_2N         R0104 (Geb)
       PRINT_PADDR     S365
       NEW_LINE        
       RTRUE           
L0001: RFALSE          

Routine R0363, 0 locals

       JE              Ge9,#52,#51 [FALSE] L0001
       CALL_2N         R0104 (Geb)
       PRINT_PADDR     S366
       NEW_LINE        
       RTRUE           
L0001: JE              Ge9,#53 [FALSE] L0014
       STORE           Gef,G2e
       JE              Gef,"church",S166 OR "here","home" [FALSE] L0002
       CALL_2N         R0104 (Geb)
       PRINT_PADDR     S367
       NEW_LINE        
       RTRUE           
L0002: JE              Gef,"village","villagers" [FALSE] L0003
       PRINT_PADDR     S368
       NEW_LINE        
       RTRUE           
L0003: JE              Gef,"decision","happened","result" [FALSE] L0004
       PRINT_PADDR     S369
       NEW_LINE        
       RTRUE           
L0004: JE              Gef,"she","her","woman" [FALSE] L0005
       PRINT_PADDR     S370
       NEW_LINE        
       RTRUE           
L0005: JE              Gef,"me","myself",#69 [FALSE] L0006
       CALL_2N         R0104 (Geb)
       PRINT_PADDR     S371
       NEW_LINE        
       RTRUE           
L0006: JE              Gef,"bottle","bottles" [FALSE] L0007
       PRINT_PADDR     S372
       NEW_LINE        
       RTRUE           
L0007: JE              Gef,"blue" [FALSE] L0008
       PRINT_PADDR     S373
       NEW_LINE        
       RTRUE           
L0008: JE              Gef,"green" [FALSE] L0009
       PRINT_PADDR     S374
       NEW_LINE        
       RTRUE           
L0009: JE              Gef,"soul" [FALSE] L0010
       PRINT_PADDR     S375
       NEW_LINE        
       RTRUE           
L0010: JE              Gef,"book" [FALSE] L0011
       PRINT_PADDR     S376
       NEW_LINE        
       RTRUE           
L0011: JE              Gef,"dog" [FALSE] L0012
       PRINT_PADDR     S377
       NEW_LINE        
       RTRUE           
L0012: JE              Gef,"man","him","himself" [FALSE] L0013
       SET_ATTR        Geb,#08
       SET_ATTR        Geb,#10
       PRINT_PADDR     S378
       NEW_LINE        
       RTRUE           
L0013: CALL_2N         R0104 (Geb)
       PRINT_RET       " giggles uncontrollably."
L0014: JE              Ge9,#42 [FALSE] L0015
       CALL_2N         R0104 (Geb)
       PRINT_PADDR     S379
       NEW_LINE        
       RTRUE           
L0015: JE              Ge9,#1002 [FALSE] L0016
       INSERT_OBJ      G2d,G02
       CALL_2N         R0104 (Geb)
       PRINT           " easily avoids "
       CALL_2N         R0103 (G2d)
       PRINT_RET       ". "Pathetic!" he says."
L0016: JE              Ge9,#16,#15 [FALSE] L0017
       CALL_2N         R0104 (Geb)
       PRINT_RET       " isn't interested."
L0017: RFALSE          

Routine R0364, 2 locals

       GET_PARENT      Geb -> L00
       STORE           L01,G02
       JE              G02,#63 [TRUE] L0001
       JE              L01,L00 [FALSE] L0002
L0001: CALL_VN         R0416 (Geb,#5a,#01)
       JUMP            L0003
L0002: CALL_VS         R0417 (Geb,#5a) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       INSERT_OBJ      Geb,L01
       PRINT           "
Babbling to himself, "
       CALL_2N         R0103 (Geb)
       PRINT_RET       " wanders after you."
L0003: RTRUE           

Routine R0365, 0 locals

       JE              Ge9,#3a [FALSE] L0001
       STORE           G15,#01
       PRINT_PADDR     S381
       NEW_LINE        
       RTRUE           
L0001: JE              Ge9,#56 [FALSE] L0003
       JE              G2d,#0071 [TRUE] L0002
       PRINT_PADDR     S382
       NEW_LINE        
       RTRUE           
L0002: RFALSE          
L0003: JE              Ge9,#10 [FALSE] L0005
       JE              G2d,#0071 [TRUE] L0004
       INSERT_OBJ      G2d,"Steeple Chamber"
       CALL_2N         R0104 (G2d)
       PRINT_PADDR     S383
       NEW_LINE        
       RTRUE           
L0004: INSERT_OBJ      "heavy rope",G02
       PRINT_PADDR     S384
       NEW_LINE        
       RTRUE           
L0005: RFALSE          

Routine R0366, 0 locals

       JIN             "heavy rope",G02 [FALSE] L0001
       RET             #0071
L0001: PRINT_PADDR     S386
       NEW_LINE        
       RTRUE           

Routine R0367, 0 locals

       TEST_ATTR       Geb,#08 [TRUE] L0001
       PRINT_PADDR     S388
       NEW_LINE        
       RTRUE           
L0001: PRINT_PADDR     S389
       NEW_LINE        
       RTRUE           

Routine R0368, 0 locals

       TEST_ATTR       Geb,#08 [TRUE] L0003
       PRINT_PADDR     S390
       PRINT_PADDR     S391
       CALL_VS         R0417 (#0071,#0060) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       CALL_VS         R0417 (#0071,#0060) -> -(SP)
       JIN             (SP)+,G02 [FALSE] L0001
       PRINT           "tied to "
       CALL_VS         R0417 (#0071,#0060) -> -(SP)
       CALL_2N         R0103 ((SP)+)
       PRINT           "."
       JUMP            L0002
L0001: PRINT_PADDR     S392
L0002: NEW_LINE        
       RTRUE           
L0003: PRINT_PADDR     S393
       NEW_LINE        
       RTRUE           

Routine R0369, 0 locals

       JE              Ge9,#0f [FALSE] L0001
       PRINT_PADDR     S394
       NEW_LINE        
       RTRUE           
L0001: JE              Ge9,#4c,#4b [FALSE] L0004
       CALL_VS         R0417 (#0071,#0060) -> -(SP)
       JE              (SP)+,#64 [FALSE] L0002
       CALL_2N         R0142 (#04)
       SET_ATTR        Geb,#08
       SET_ATTR        "(Steeple_Door)",#0e
       CLEAR_ATTR      "(Steeple_Door)",#0f
       INSERT_OBJ      "bell","Front of the Church"
       INSERT_OBJ      "heavy rope","Limbo"
       CALL_VN         R0416 (#0071,#0060,#00)
       SET_ATTR        "heavy rope",#01
       PRINT_PADDR     S395
       NEW_LINE        
       RTRUE           
L0002: TEST_ATTR       Geb,#08 [TRUE] L0003
       PRINT_PADDR     S396
       NEW_LINE        
       RTRUE           
L0003: PRINT_PADDR     S397
       NEW_LINE        
       RTRUE           
       RFALSE          
L0004: JE              Ge9,#62 [FALSE] L0006
       TEST_ATTR       Geb,#08 [TRUE] L0005
       PRINT_RET       "The bell makes a muted "CLANK"."
L0005: PRINT_RET       "This bell will never ring again."
L0006: RFALSE          

Routine R0370, 0 locals

       JE              G02,#62 [FALSE] L0003
       PRINT_PADDR     S398
       CALL_VS         R0417 (Geb,#60) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_VS         R0417 (Geb,#60) -> -(SP)
       JE              (SP)+,#64 [TRUE] L0001
       PRINT           " There is "
       CALL_VS         R0417 (Geb,#60) -> -(SP)
       CALL_2N         R0102 ((SP)+)
       PRINT_PADDR     S399
       JUMP            L0002
L0001: PRINT_PADDR     S400
L0002: NEW_LINE        
L0003: RTRUE           

Routine R0371, 0 locals

       PRINT_PADDR     S401
       CALL_VS         R0417 (Geb,#60) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       PRINT           " "
       CALL_VS         R0417 (Geb,#60) -> -(SP)
       CALL_2N         R0104 ((SP)+)
       PRINT           " is tied to the rope."
L0001: NEW_LINE        
       RTRUE           

Routine R0372, 0 locals

       JE              Ge9,#3c [FALSE] L0005
       JE              G2e,G14 [FALSE] L0001
       PRINT_PADDR     S402
       NEW_LINE        
       RTRUE           
L0001: JE              G2e,Geb [FALSE] L0002
       PRINT_RET       "Practicing your knot tying?"
L0002: JE              G2e,#70 [FALSE] L0003
       PRINT_PADDR     S403
       NEW_LINE        
       RTRUE           
L0003: CALL_VN         R0416 (Geb,#60,G2e)
       GET_PARENT      G2e -> -(SP)
       JE              (SP)+,G14 [TRUE] L0004
       GET_PARENT      G2e -> -(SP)
       INSERT_OBJ      "heavy rope",(SP)+
L0004: PRINT           "You tie the rope securely to "
       CALL_2N         R0103 (G2e)
       PRINT_RET       "."
L0005: JE              Ge9,#63 [FALSE] L0009
       CALL_VS         R0417 (Geb,#60) -> -(SP)
       JZ              (SP)+ [FALSE] L0006
       PRINT_PADDR     S404
       NEW_LINE        
       RTRUE           
L0006: JZ              G2e [TRUE] L0008
       JE              G2e,#70 [FALSE] L0007
       PRINT_PADDR     S405
       NEW_LINE        
       RTRUE           
L0007: CALL_VS         R0417 (Geb,#60) -> -(SP)
       JE              G2e,(SP)+ [TRUE] L0008
       PRINT           "But, the rope isn't tied to "
       CALL_2N         R0103 (G2e)
       PRINT_RET       "."
L0008: PRINT           "You untie the rope from "
       CALL_VS         R0417 (Geb,#60) -> -(SP)
       CALL_2N         R0103 ((SP)+)
       PRINT           "."
       CALL_VN         R0416 (Geb,#60,#00)
       NEW_LINE        
       RTRUE           
L0009: JE              Ge9,#10 [FALSE] L0011
       CALL_VS         R0417 (Geb,#60) -> -(SP)
       GET_PARENT      (SP)+ -> -(SP)
       JE              (SP)+,G14 [FALSE] L0010
       PRINT_PADDR     S406
       CALL_VS         R0417 (Geb,#60) -> -(SP)
       CALL_2N         R0103 ((SP)+)
       PRINT_PADDR     S407
       NEW_LINE        
       RTRUE           
L0010: RFALSE          
L0011: JE              Ge9,#56 [FALSE] L0012
       CALL_VN         R0076 (#1b,Geb)
       RTRUE           
L0012: JE              Ge9,#4b [FALSE] L0014
       JE              G02,#62 [FALSE] L0013
       PRINT_PADDR     S408
       NEW_LINE        
       RTRUE           
L0013: PRINT_PADDR     S409
       NEW_LINE        
       RTRUE           
L0014: RFALSE          

Routine R0373, 0 locals

       JE              G2a,#1b [FALSE] L0002
       JIN             Geb,G14 [FALSE] L0001
       PRINT_PADDR     S410
       NEW_LINE        
       RTRUE           
L0001: CALL_VS         R0417 (Geb,#60) -> -(SP)
       JIN             (SP)+,G14 [FALSE] L0002
       CALL_VS         R0417 (Geb,#60) -> -(SP)
       CALL_2N         R0104 ((SP)+)
       PRINT_PADDR     S411
       NEW_LINE        
       RTRUE           
L0002: RFALSE          

Routine R0374, 0 locals

       CALL_VS         R0417 (Geb,#60) -> -(SP)
       JE              G2d,(SP)+ [FALSE] L0004
       JE              G2a,#10 [TRUE] L0001
       JE              G2a,#13 [TRUE] L0001
       JE              G2a,#50 [TRUE] L0001
       JE              G2a,#12 [TRUE] L0001
       JE              G2a,#61 [FALSE] L0002
L0001: CALL_VS         R0417 (Geb,#60) -> -(SP)
       GET_PARENT      (SP)+ -> -(SP)
       INSERT_OBJ      Geb,(SP)+
       JE              G02,#6f [FALSE] L0002
       INSERT_OBJ      Geb,"Belfry"
L0002: JE              G2a,#0f [TRUE] L0003
       JE              G2a,#11 [FALSE] L0004
L0003: INSERT_OBJ      Geb,G14
L0004: RFALSE          

Routine R0375, 0 locals

       JE              G02,#62 [FALSE] L0001
       RET             #6f
L0001: RET             #62

Routine R0376, 0 locals

       JE              G02,#62 [FALSE] L0001
       RET             #0f
L0001: RET             #10

Routine R0377, 0 locals

       JE              Ge9,#0f [FALSE] L0001
       PRINT_PADDR     S415
       NEW_LINE        
       RTRUE           
L0001: RFALSE          

Routine R0378, 0 locals

       CALL_VS         R0424 (G02,#48) -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
       RFALSE          

Routine R0379, 0 locals

       JE              Ge9,#0f,#4c,#4b [TRUE] L0001
       JE              Ge9,#27,#28 [FALSE] L0002
L0001: PRINT_PADDR     S417
       NEW_LINE        
       RTRUE           
L0002: RFALSE          

Routine R0380, 0 locals

       PRINT_PADDR     S418
       PRINT_PADDR     S419
       PRINT_PADDR     S420
       PRINT_PADDR     S421
       PRINT_PADDR     S422
       PRINT_PADDR     S423
       PRINT_PADDR     S424
       NEW_LINE        
       RTRUE           

Routine R0381, 0 locals

       PRINT_PADDR     S425
       PRINT_PADDR     S426
       PRINT_PADDR     S427
       PRINT_PADDR     S428
       NEW_LINE        
       RTRUE           

Routine R0382, 0 locals

       PRINT_PADDR     S429
       PRINT_PADDR     S430
       PRINT_PADDR     S431
       PRINT_PADDR     S432
       NEW_LINE        
       RTRUE           

Routine R0383, 0 locals

       PRINT_PADDR     S433
       PRINT_PADDR     S434
       PRINT_PADDR     S435
       PRINT_PADDR     S436
       PRINT_PADDR     S437
       NEW_LINE        
       RTRUE           

Routine R0384, 0 locals

       CALL_VN         R0418 (G00,#4c)
       RET             #02

Routine R0385, 0 locals

       PRINT_PADDR     S438
       PRINT_PADDR     S439
       PRINT_PADDR     S440
       PRINT_PADDR     S441
       PRINT_PADDR     S442
       PRINT_PADDR     S443
       PRINT_PADDR     S444
       PRINT_PADDR     S445
       PRINT_PADDR     S446
       PRINT_PADDR     S447
       PRINT_PADDR     S448
       PRINT_PADDR     S449
       PRINT_PADDR     S450
       PRINT_PADDR     S451
       PRINT_PADDR     S452
       PRINT_PADDR     S453
       PRINT_PADDR     S454
       PRINT_PADDR     S455
       PRINT_PADDR     S456
       PRINT_PADDR     S457
       PRINT_PADDR     S458
       NEW_LINE        
       RTRUE           

Routine R0386, 0 locals

       STORE           G02,#21
       CALL_2N         R0090 (#35)
       CALL_2N         R0090 (#6e)
       PRINT_PADDR     S461
       NEW_LINE        
       RTRUE           

Routine R0387, 3 locals

       JL              L01,#02 [FALSE] L0003
       CALL_VS         R0424 (L00,#1e) -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       TEST_ATTR       L00,#11 [FALSE] L0002
L0001: RET             #02
L0002: RFALSE          
       JUMP            L0008
L0003: STORE           L02,#02
       TEST_ATTR       L00,#11 [FALSE] L0004
       SUB             L02,#01 -> L02
L0004: GET_PARENT      L00 -> -(SP)
       GET_PARENT      G14 -> -(SP)
       JE              (SP)+,(SP)+ [FALSE] L0005
       ADD             L02,#01 -> L02
L0005: GET_PARENT      L00 -> -(SP)
       JE              (SP)+,G14 [FALSE] L0006
       ADD             L02,#02 -> L02
L0006: JE              G51,#25 [FALSE] L0007
       GET_PARENT      G14 -> -(SP)
       JE              (SP)+,L00 [FALSE] L0007
       ADD             L02,#01 -> L02
L0007: RET             L02
L0008: RTRUE           

Routine R0388, 1 local

       STORE           Gef,L00
       JE              Gef,#00 [FALSE] L0001
       PRINT_RET       "for getting past the guard dog"
L0001: JE              Gef,#01 [FALSE] L0002
       PRINT_RET       "for entering the steeple"
L0002: JE              Gef,#02 [FALSE] L0003
       PRINT_RET       "for entering the sealed room"
L0003: JE              Gef,#03 [FALSE] L0004
       PRINT_RET       "for reading the journal"
L0004: JE              Gef,#04 [FALSE] L0005
       PRINT_RET       "for opening the door"
L0005: JE              Gef,#05 [FALSE] L0006
       PRINT_RET       "for discovering the truth"
L0006: JE              Gef,#06 [FALSE] L0007
       PRINT_RET       "for extracting your revenge"
L0007: RTRUE           

Routine R0389, 0 locals
    Parsing routine for:
        "go noun = [parse $3900]"
        "leave noun = [parse $3900]"

       JIN             G2d,"compass" [TRUE] RTRUE
       RFALSE          

Routine R0390, 1 local

       STORE           G3f,G77
L0001: CALL_1S         R0057 -> L00
       JE              L00,#ffff [TRUE] L0002
       JE              L00,"to" [FALSE] L0001
       JE              G51,#52 [FALSE] L0001
L0002: DEC             G77
       SUB             G77,G3f -> G40
       JZ              G40 [FALSE] L0003
       RET             #ffff
L0003: JE              G51,#53,#52,#51 [FALSE] L0005
       STORE           L00,G77
       STORE           G77,G3f
       CALL_1S         R0056 -> G3e
       JE              G3e,"the" [FALSE] L0004
       JG              G40,#01 [FALSE] L0004
       CALL_1S         R0056 -> G3e
L0004: STORE           G77,L00
       RTRUE           
L0005: RFALSE          

Routine R0391, 0 locals

       RFALSE          

Routine R0392, 0 locals

       RFALSE          

Routine R0393, 0 locals

       RFALSE          

Routine R0394, 0 locals

       RFALSE          

Routine R0395, 0 locals

       RFALSE          

Routine R0396, 0 locals

       RFALSE          

Routine R0397, 0 locals

       RFALSE          

Routine R0398, 0 locals

       RFALSE          

Routine R0399, 0 locals

       RFALSE          

Routine R0400, 0 locals

       RFALSE          

Routine R0401, 0 locals

       RFALSE          

Routine R0402, 1 local

       RFALSE          

Routine R0403, 1 local

       RFALSE          

Routine R0404, 1 local

       RFALSE          

Routine R0405, 1 local

       RFALSE          

Routine R0406, 2 locals

       RFALSE          

Routine R0407, 0 locals

       PRINT_RET       "."

Routine R0408, 1 local

       STORE           L00,L00
       RET             #ffff

Routine R0409, 0 locals
    Action routine for:
        "read noun"

       CALL_VN         R0076 (#20,G2d)
       RTRUE           

Routine R0410, 0 locals
    Action routine for:
        "put noun under / below / beneath / against noun"

       INSERT_OBJ      G2d,G02
       PRINT           "You put "
       CALL_2N         R0103 (G2d)
       PRINT           " under "
       CALL_2N         R0103 (G2e)
       PRINT_RET       "."

Routine R0411, 0 locals
    Action routine for:
        "detach noun"
        "detach noun from noun"

       CALL_2N         R0104 (G2d)
       PRINT_RET       " isn't attached to anything."

Routine R0412, 0 locals
    Action routine for:
        "ring noun"

       PRINT           "You don't know how to ring "
       CALL_2N         R0102 (G2d)
       PRINT_RET       "."

Routine R0413, 0 locals
    Action routine for:
        "xyzzy"

       PRINT_PADDR     S462
       NEW_LINE        
       RTRUE           

Routine R0414, 0 locals
    Action routine for:
        "about"

       CALL_VN         R0418 (G01,#4c)
       RTRUE           

Routine R0415, 5 locals

       AND             L00,#c000 -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       AND             L00,#ff -> -(SP)
       LOADW           #236c,(SP)+ -> L03
       CALL_2N         R0105 (L03)
       PRINT           "::"
       AND             L00,#8000 -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       AND             L00,#3f00 -> -(SP)
       DIV             (SP)+,#0100 -> L00
       JUMP            L0004
L0001: AND             L00,#7f00 -> -(SP)
       DIV             (SP)+,#0100 -> L00
       GET_PROP        L03,#03 -> L04
L0002: LOADW           L04,#00 -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       JG              L00,#00 [FALSE] L0003
       LOADB           L04,#02 -> -(SP)
       ADD             L04,(SP)+ -> -(SP)
       ADD             (SP)+,#03 -> L04
       DEC             L00
       JUMP            L0002
L0003: LOADW           L04,#00 -> -(SP)
       AND             (SP)+,#7fff -> L00
L0004: STORE           L01,#238c
       LOADW           L01,#00 -> L02
       JG              L00,#00 [FALSE] L0005
       JL              L00,L02 [FALSE] L0005
       LOADW           L01,L00 -> -(SP)
       JZ              (SP)+ [FALSE] L0006
L0005: PRINT           "<number "
       PRINT_NUM       L00
       PRINT           ">"
       JUMP            L0007
L0006: LOADW           L01,L00 -> -(SP)
       PRINT_PADDR     (SP)+
L0007: RTRUE           

Routine R0416, 4 locals

       CALL_VS         R0421 (L00,L01) -> L03
       JZ              L03 [FALSE] L0001
       CALL_VN         R0426 (S463,L00,L01)
       RTRUE           
L0001: STOREW          L03,#00,L02
       RTRUE           

Routine R0417, 3 locals

       CALL_VS         R0421 (L00,L01) -> L02
       JZ              L02 [FALSE] L0002
       JL              L01,#01 [TRUE] L0001
       JL              L01,#40 [FALSE] L0001
       GET_PROP        L00,L01 -> -(SP)
       RET_POPPED      
L0001: CALL_VN         R0426 (S464,L00,L01)
       RTRUE           
L0002: LOADW           L02,#00 -> -(SP)
       RET_POPPED      

Routine R0418, 15 locals

       JL              L00,#01 [TRUE] L0001
       SUB             #01b7,#ff -> -(SP)
       JG              L00,(SP)+ [FALSE] L0007
L0001: CALL_2S         R0427 (L00) -> -(SP)
       PULL            Gef
       JE              Gef,#02 [FALSE] L0003
       JE              L01,#45 [FALSE] L0002
       STORE           L0b,Gea
       STORE           Gea,Geb
       STORE           Geb,L00
       STORE           Ge9,G2a
       CALL_VS2        L00 (L02,L03,L04,L05,L06,L07) -> L08
       STORE           Geb,Gea
       STORE           Gea,L0b
       RET             L08
L0002: JUMP            L0014
L0003: JE              Gef,#03 [FALSE] L0006
       JE              L01,#46 [FALSE] L0004
       PRINT_PADDR     L00
       RTRUE           
L0004: JE              L01,#47 [FALSE] L0005
       OUTPUT_STREAM   REDIRECT_ENABLE,L02
       PRINT_PADDR     L00
       OUTPUT_STREAM   #fffd
       LOADW           L02,#00 -> -(SP)
       RET_POPPED      
L0005: JUMP            L0014
L0006: JUMP            L0014
L0007: CHECK_ARG_COUNT #03 [FALSE] L0008
       INC             L09
       CHECK_ARG_COUNT #04 [FALSE] L0008
       INC             L09
       CHECK_ARG_COUNT #05 [FALSE] L0008
       INC             L09
       CHECK_ARG_COUNT #06 [FALSE] L0008
       INC             L09
       CHECK_ARG_COUNT #07 [FALSE] L0008
       INC             L09
       CHECK_ARG_COUNT #08 [FALSE] L0008
       INC             L09
L0008: JL              L01,#00 [TRUE] L0012
       JL              L01,#40 [FALSE] L0012
       GET_PROP_ADDR   L00,L01 -> L08
       JZ              L08 [FALSE] L0009
       STORE           L0d,#02
       JUMP            L0011
L0009: GET_PROP_ADDR   L00,L01 -> Gef
       JZ              Gef [TRUE] L0010
       GET_PROP_LEN    Gef -> Gef
L0010: STORE           L0d,Gef
L0011: JUMP            L0018
L0012: JL              L01,#40 [TRUE] L0013
       JL              L01,#45 [FALSE] L0013
       JIN             L00,"Class" [FALSE] L0013
       CALL_VS2        R0431 (L00,L01,L09,L02,L03,L04,L05) -> -(SP)
       RET_POPPED      
L0013: CALL_VS         R0421 (L00,L01) -> L08
       JZ              L08 [FALSE] L0015
L0014: CALL_VN         R0426 (S465,L00,L01)
       RTRUE           
L0015: SUB             L08,#01 -> -(SP)
       LOADB           #00,(SP)+ -> L0d
       AND             L01,#c000 -> -(SP)
       JE              (SP)+,#4000 [FALSE] L0018
       AND             L0d,#c0 -> -(SP)
       PULL            Gef
       JE              Gef,#00 [FALSE] L0016
       STORE           L0d,#01
       JUMP            L0018
L0016: JE              Gef,#40 [FALSE] L0017
       STORE           L0d,#02
       JUMP            L0018
L0017: JE              Gef,#80 [FALSE] L0018
       AND             L0d,#3f -> L0d
L0018: MUL             #02,L0e -> -(SP)
       JL              (SP)+,L0d [FALSE] L0032
       LOADW           L08,L0e -> -(SP)
       JE              (SP)+,#ffff [TRUE] RFALSE
       LOADW           L08,L0e -> -(SP)
       CALL_2S         R0427 ((SP)+) -> -(SP)
       PULL            Gef
       JE              Gef,#02 [FALSE] L0029
       STORE           L0b,Gea
       STORE           Gea,Geb
       STORE           Geb,L00
       STORE           L0c,Ge9
       JE              L01,#06 [FALSE] L0019
       STORE           Ge9,G30
       JUMP            L0020
L0019: STORE           Ge9,G2a
L0020: STORE           Gef,L09
       JE              Gef,#00 [FALSE] L0021
       LOADW           L08,L0e -> -(SP)
       CALL_1S         (SP)+ -> L0a
       JUMP            L0027
L0021: JE              Gef,#01 [FALSE] L0022
       LOADW           L08,L0e -> -(SP)
       CALL_2S         (SP)+ (L02) -> L0a
       JUMP            L0027
L0022: JE              Gef,#02 [FALSE] L0023
       LOADW           L08,L0e -> -(SP)
       CALL_VS         (SP)+ (L02,L03) -> L0a
       JUMP            L0027
L0023: JE              Gef,#03 [FALSE] L0024
       LOADW           L08,L0e -> -(SP)
       CALL_VS         (SP)+ (L02,L03,L04) -> L0a
       JUMP            L0027
L0024: JE              Gef,#04 [FALSE] L0025
       LOADW           L08,L0e -> -(SP)
       CALL_VS2        (SP)+ (L02,L03,L04,L05) -> L0a
       JUMP            L0027
L0025: JE              Gef,#05 [FALSE] L0026
       LOADW           L08,L0e -> -(SP)
       CALL_VS2        (SP)+ (L02,L03,L04,L05,L06) -> L0a
       JUMP            L0027
L0026: JE              Gef,#06 [FALSE] L0027
       LOADW           L08,L0e -> -(SP)
       CALL_VS2        (SP)+ (L02,L03,L04,L05,L06,L07) -> L0a
L0027: STORE           Geb,Gea
       STORE           Gea,L0b
       STORE           Ge9,L0c
       JZ              L0a [TRUE] L0028
       RET             L0a
L0028: JUMP            L0031
L0029: JE              Gef,#03 [FALSE] L0030
       LOADW           L08,L0e -> -(SP)
       PRINT_PADDR     (SP)+
       NEW_LINE        
       RTRUE           
L0030: LOADW           L08,L0e -> -(SP)
       RET_POPPED      
L0031: INC             L0e
       JUMP            L0018
L0032: RFALSE          

Routine R0419, 3 locals

       CALL_VS         R0421 (L00,L01) -> L02
       JZ              L02 [FALSE] L0001
       CALL_VN         R0426 (S466,L00,L01)
       RTRUE           
L0001: STORE           Gef,L02
       STORE           Gee,#00
       LOADW           Gef,Gee -> Ged
       PUSH            Ged
       INC             Ged
       STOREW          Gef,Gee,Ged
       RET_POPPED      

Routine R0420, 3 locals

       CALL_VS         R0421 (L00,L01) -> L02
       JZ              L02 [FALSE] L0001
       CALL_VN         R0426 (S467,L00,L01)
       RTRUE           
L0001: STORE           Gef,L02
       STORE           Gee,#00
       LOADW           Gef,Gee -> Ged
       PUSH            Ged
       DEC             Ged
       STOREW          Gef,Gee,Ged
       RET_POPPED      

Routine R0421, 5 locals

       JL              L01,#40 [FALSE] L0001
       JG              L01,#00 [FALSE] L0001
       GET_PROP_ADDR   L00,L01 -> -(SP)
       RET_POPPED      
L0001: AND             L01,#8000 -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       AND             L01,#ff -> -(SP)
       LOADW           #236c,(SP)+ -> L04
       GET_PROP_ADDR   L04,#03 -> -(SP)
       JZ              (SP)+ [TRUE] RFALSE
       CALL_VS         R0424 (L00,L04) -> -(SP)
       JZ              (SP)+ [TRUE] RFALSE
       AND             L01,#7f00 -> -(SP)
       DIV             (SP)+,#0100 -> L01
       GET_PROP        L04,#03 -> L02
L0002: JG              L01,#00 [FALSE] L0003
       DEC             L01
       LOADB           L02,#02 -> -(SP)
       ADD             L02,(SP)+ -> -(SP)
       ADD             (SP)+,#03 -> L02
       JUMP            L0002
L0003: ADD             L02,#03 -> -(SP)
       RET_POPPED      
L0004: AND             L01,#4000 -> -(SP)
       JZ              (SP)+ [TRUE] L0006
       AND             L01,#ff -> -(SP)
       LOADW           #236c,(SP)+ -> L04
       AND             L01,#3f00 -> -(SP)
       DIV             (SP)+,#0100 -> L01
       CALL_VS         R0424 (L00,L04) -> -(SP)
       JZ              (SP)+ [TRUE] RFALSE
       LOADW           #00,#05 -> L02
       JE              L04,#02 [FALSE] L0005
       MUL             #02,L01 -> -(SP)
       ADD             L02,(SP)+ -> -(SP)
       SUB             (SP)+,#02 -> -(SP)
       RET_POPPED      
L0005: MUL             L04,#0e -> -(SP)
       ADD             L02,#7c -> -(SP)
       ADD             (SP)+,(SP)+ -> -(SP)
       DIV             (SP)+,#02 -> -(SP)
       LOADW           #00,(SP)+ -> L02
       LOADB           #00,L02 -> -(SP)
       MUL             #02,(SP)+ -> -(SP)
       ADD             L02,(SP)+ -> -(SP)
       ADD             (SP)+,#01 -> -(SP)
       CALL_VS         R0430 ((SP)+,#ffff) -> -(SP)
       ADD             (SP)+,#06 -> L02
       CALL_VS         R0430 (L02,L01) -> -(SP)
       RET_POPPED      
L0006: GET_PROP_ADDR   L00,#03 -> -(SP)
       JZ              (SP)+ [TRUE] RFALSE
       JIN             L00,"Class" [FALSE] L0007
       JL              L01,#40 [TRUE] RFALSE
       JL              L01,#48 [FALSE] RFALSE
L0007: JE              Geb,L00 [FALSE] L0008
       OR              L01,#8000 -> L03
L0008: GET_PROP        L00,#03 -> L02
L0009: LOADW           L02,#00 -> -(SP)
       JZ              (SP)+ [TRUE] L0011
       LOADW           L02,#00 -> -(SP)
       JE              (SP)+,L01,L03 [FALSE] L0010
       ADD             L02,#03 -> -(SP)
       RET_POPPED      
L0010: LOADB           L02,#02 -> -(SP)
       ADD             L02,(SP)+ -> -(SP)
       ADD             (SP)+,#03 -> L02
       JUMP            L0009
L0011: RFALSE          

Routine R0422, 3 locals

       JL              L01,#40 [FALSE] L0002
       JG              L01,#00 [FALSE] L0002
       GET_PROP_ADDR   L00,L01 -> Gef
       JZ              Gef [TRUE] L0001
       GET_PROP_LEN    Gef -> Gef
L0001: PUSH            Gef
       RET_POPPED      
L0002: CALL_VS         R0421 (L00,L01) -> L02
       JZ              L02 [TRUE] RFALSE
       AND             L01,#c000 -> -(SP)
       JE              (SP)+,#4000 [FALSE] L0005
       SUB             L02,#01 -> -(SP)
       LOADB           (SP)+,#00 -> -(SP)
       AND             (SP)+,#c0 -> -(SP)
       PULL            Gef
       JE              Gef,#00 [FALSE] L0003
       RTRUE           
L0003: JE              Gef,#40 [FALSE] L0004
       RET             #02
L0004: JE              Gef,#80 [FALSE] L0005
       SUB             L02,#01 -> -(SP)
       LOADB           (SP)+,#00 -> -(SP)
       AND             (SP)+,#3f -> -(SP)
       RET_POPPED      
L0005: SUB             L02,#01 -> -(SP)
       LOADB           (SP)+,#00 -> -(SP)
       RET_POPPED      

Routine R0423, 2 locals

       JL              L00,#01 [TRUE] L0001
       SUB             #01b7,#ff -> -(SP)
       JG              L00,(SP)+ [FALSE] L0004
L0001: JE              L01,#46,#47,#45 [FALSE] RFALSE
       CALL_2S         R0427 (L00) -> -(SP)
       PULL            Gef
       JE              Gef,#02 [FALSE] L0002
       JE              L01,#45 [TRUE] RTRUE
       JUMP            L0003
L0002: JE              Gef,#03 [FALSE] L0003
       JE              L01,#46,#47 [TRUE] RTRUE
L0003: RFALSE          
L0004: JL              L01,#40 [FALSE] L0005
       GET_PROP_ADDR   L00,L01 -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
       RFALSE          
L0005: CALL_VS         R0421 (L00,L01) -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
       JL              L01,#48 [FALSE] L0006
       JIN             L00,"Class" [TRUE] RTRUE
L0006: RFALSE          

Routine R0424, 5 locals

       JL              L00,#01 [TRUE] L0001
       SUB             #01b7,#ff -> -(SP)
       JG              L00,(SP)+ [FALSE] L0002
L0001: JE              L01,#03,#04 [FALSE] RFALSE
       SUB             L01,#01 -> -(SP)
       CALL_2S         R0427 (L00) -> -(SP)
       JE              (SP)+,(SP)+ [TRUE] RTRUE
       RFALSE          
L0002: STORE           Gef,L01
       JE              Gef,#01 [FALSE] L0003
       JG              L00,#04 [FALSE] RTRUE
       JIN             L00,"Class" [TRUE] RTRUE
       RFALSE          
L0003: JE              Gef,#02 [FALSE] L0004
       JG              L00,#04 [FALSE] RFALSE
       JIN             L00,"Class" [TRUE] RFALSE
       RTRUE           
L0004: JE              Gef,#03,#04 [FALSE] L0005
       RFALSE          
L0005: JIN             L01,"Class" [TRUE] L0006
       CALL_VN         R0426 (S468,L01,#ffff)
       RFALSE          
L0006: GET_PROP_ADDR   L00,#02 -> L03
       JZ              L03 [TRUE] RFALSE
       GET_PROP_ADDR   L00,#02 -> Gef
       JZ              Gef [TRUE] L0007
       GET_PROP_LEN    Gef -> Gef
L0007: STORE           L04,Gef
       STORE           L02,#00
L0008: DIV             L04,#02 -> -(SP)
       JL              L02,(SP)+ [FALSE] L0009
       LOADW           L03,L02 -> -(SP)
       JE              (SP)+,L01 [TRUE] RTRUE
       INC             L02
       JUMP            L0008
L0009: RFALSE          

Routine R0425, 9 locals

       STORE           L04,#00
L0001: JL              L04,#30 [FALSE] L0004
       TEST_ATTR       L01,L04 [FALSE] L0002
       SET_ATTR        L00,L04
       JUMP            L0003
L0002: CLEAR_ATTR      L00,L04
L0003: INC             L04
       JUMP            L0001
L0004: STORE           L04,#01
L0005: JL              L04,#40 [FALSE] L0010
       JE              L04,#03 [TRUE] L0009
       GET_PROP_ADDR   L00,L04 -> L02
       GET_PROP_ADDR   L01,L04 -> L03
       GET_PROP_ADDR   L00,L04 -> Gef
       JZ              Gef [TRUE] L0006
       GET_PROP_LEN    Gef -> Gef
L0006: STORE           L07,Gef
       JZ              L02 [TRUE] L0009
       JZ              L03 [TRUE] L0009
       GET_PROP_ADDR   L01,L04 -> Gef
       JZ              Gef [TRUE] L0007
       GET_PROP_LEN    Gef -> Gef
L0007: PUSH            Gef
       JE              L07,(SP)+ [FALSE] L0009
       STORE           L05,#00
L0008: JL              L05,L07 [FALSE] L0009
       LOADB           L03,L05 -> -(SP)
       STOREB          L02,L05,(SP)+
       INC             L05
       JUMP            L0008
L0009: INC             L04
       JUMP            L0005
L0010: GET_PROP_ADDR   L00,#03 -> -(SP)
       JZ              (SP)+ [TRUE] L0011
       GET_PROP_ADDR   L01,#03 -> -(SP)
       JZ              (SP)+ [FALSE] L0012
L0011: RTRUE           
L0012: GET_PROP        L01,#03 -> L04
       JUMP            L0014
L0013: ADD             L04,L07 -> -(SP)
       ADD             (SP)+,#03 -> L04
L0014: LOADW           L04,#00 -> -(SP)
       JZ              (SP)+ [TRUE] L0020
       LOADW           L04,#00 -> L08
       LOADB           L04,#02 -> L07
       GET_PROP        L00,#03 -> L05
       JUMP            L0016
L0015: LOADB           L05,#02 -> -(SP)
       ADD             L05,(SP)+ -> -(SP)
       ADD             (SP)+,#03 -> L05
L0016: LOADW           L05,#00 -> -(SP)
       JZ              (SP)+ [TRUE] L0019
       LOADW           L05,#00 -> -(SP)
       AND             (SP)+,#7fff -> -(SP)
       AND             L08,#7fff -> -(SP)
       JE              (SP)+,(SP)+ [FALSE] L0018
       LOADB           L05,#02 -> -(SP)
       JE              L07,(SP)+ [FALSE] L0018
       STORE           L06,#03
L0017: ADD             L07,#03 -> -(SP)
       JL              L06,(SP)+ [FALSE] L0018
       LOADB           L04,L06 -> -(SP)
       STOREB          L05,L06,(SP)+
       INC             L06
       JUMP            L0017
L0018: JUMP            L0015
L0019: JUMP            L0013
L0020: RTRUE           

Routine R0426, 5 locals

       PRINT           "
** Run-time error: "
       JE              L00,#01 [FALSE] L0001
       PRINT           "class "
       PRINT_OBJ       L01
       PRINT_PADDR     S469
       NEW_LINE        
       RTRUE           
L0001: JIN             L01,"Class" [FALSE] L0002
       PRINT           "Class "
L0002: PRINT_OBJ       L01
       PRINT           " (object number "
       PRINT_NUM       L01
       PRINT           ") "
       JL              L02,#00 [FALSE] L0003
       PRINT           "is not of class "
       SUB             #00,L02 -> -(SP)
       CALL_2N         R0105 ((SP)+)
       JUMP            L0005
L0003: PRINT           " has no property "
       CALL_2N         R0415 (L02)
       STORE           L04,#238c
       LOADW           L04,#00 -> L03
       JL              L02,#00 [TRUE] L0004
       JL              L02,L03 [TRUE] L0005
L0004: PRINT           " (and nor has any other object)"
L0005: PRINT           " to "
       PRINT_PADDR     L00
       PRINT           " **
"
       RTRUE           

Routine R0427, 1 local

       JZ              L00 [TRUE] RFALSE
       JL              L00,#01 [TRUE] L0001
       SUB             #01b7,#ff -> -(SP)
       JG              L00,(SP)+ [FALSE] RTRUE
L0001: CALL_VS         R0428 (L00,S001) -> -(SP)
       JL              (SP)+,#00 [TRUE] L0002
       RET             #03
L0002: CALL_VS         R0428 (L00,#136a) -> -(SP)
       JL              (SP)+,#00 [TRUE] L0003
       RET             #02
L0003: RFALSE          

Routine R0428, 4 locals

       JE              L00,L01 [FALSE] L0001
       RFALSE          
L0001: JL              L00,#00 [FALSE] L0002
       JL              L01,#00 [TRUE] L0002
       RTRUE           
L0002: JL              L00,#00 [TRUE] L0003
       JL              L01,#00 [FALSE] L0003
       RET             #ffff
L0003: AND             L00,#7fff -> L02
       AND             L01,#7fff -> L03
       JG              L02,L03 [FALSE] L0004
       RTRUE           
L0004: RET             #ffff

Routine R0429, 1 local

       CALL_2S         R0427 (L00) -> -(SP)
       PULL            Gef
       JE              Gef,#02 [FALSE] L0001
       RET             #03
L0001: JE              Gef,#03 [FALSE] L0002
       RET             #04
L0002: JE              Gef,#01 [FALSE] L0005
       JIN             L00,"Class" [TRUE] L0003
       JG              L00,#04 [TRUE] L0004
L0003: RTRUE           
L0004: RET             #02
L0005: RFALSE          

Routine R0430, 4 locals

L0001: LOADB           #00,L00 -> L02
       JZ              L02 [TRUE] L0006
       AND             L02,#80 -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       INC             L00
       LOADB           #00,L00 -> -(SP)
       AND             (SP)+,#3f -> L03
       JUMP            L0004
L0002: AND             L02,#40 -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       STORE           L03,#02
       JUMP            L0004
L0003: STORE           L03,#01
L0004: INC             L00
       AND             L02,#3f -> -(SP)
       JE              (SP)+,L01 [FALSE] L0005
       RET             L00
L0005: ADD             L00,L03 -> L00
       JUMP            L0001
L0006: JL              L01,#00 [FALSE] L0007
       ADD             L00,#01 -> -(SP)
       RET_POPPED      
L0007: RFALSE          

Routine R0431, 8 locals

       STORE           Gef,L01
       JE              Gef,#40 [FALSE] L0009
       STORE           Gef,#00
       GET_CHILD       L00 -> -(SP) [FALSE] L0002
L0001: INC             Gef
       GET_SIBLING     (SP)+ -> -(SP) [TRUE] L0001
L0002: PULL            Gee
       PUSH            Gef
       JG              (SP)+,#01 [FALSE] RFALSE
       GET_CHILD       L00 -> L07 [FALSE] L0003
L0003: REMOVE_OBJ      L07
       CALL_VS         R0423 (L07,#40) -> -(SP)
       JZ              (SP)+ [TRUE] L0008
       JZ              L02 [FALSE] L0004
       CALL_VN         R0418 (L07,#40)
L0004: JE              L02,#01 [FALSE] L0005
       CALL_VN         R0418 (L07,#40,L03)
L0005: JE              L02,#02 [FALSE] L0006
       CALL_VN2        R0418 (L07,#40,L03,L04)
L0006: JG              L02,#03 [FALSE] L0007
       CALL_VN         R0426 (#01,L00)
L0007: JL              L02,#03 [TRUE] L0008
       CALL_VN2        R0418 (L07,#40,L03,L04,L05)
L0008: RET             L07
L0009: JE              Gef,#41 [FALSE] L0017
       CALL_VS         R0424 (L03,L00) -> -(SP)
       JZ              (SP)+ [FALSE] L0010
       SUB             #00,L00 -> -(SP)
       CALL_VN         R0426 (S470,L03,(SP)+)
       RFALSE          
L0010: GET_CHILD       L00 -> -(SP) [FALSE] L0011
L0011: CALL_VN         R0425 (L03,(SP)+)
       CALL_VS         R0423 (L03,#40) -> -(SP)
       JZ              (SP)+ [TRUE] L0016
       JE              L02,#01 [FALSE] L0012
       CALL_VN         R0418 (L03,#40)
L0012: JE              L02,#02 [FALSE] L0013
       CALL_VN         R0418 (L03,#40,L04)
L0013: JE              L02,#03 [FALSE] L0014
       CALL_VN2        R0418 (L03,#40,L04,L05)
L0014: JG              L02,#04 [FALSE] L0015
       CALL_VN         R0426 (#01,L00)
L0015: JL              L02,#04 [TRUE] L0016
       CALL_VN2        R0418 (L03,#40,L04,L05,L06)
L0016: RFALSE          
L0017: JE              Gef,#42 [FALSE] L0021
       CALL_VS         R0424 (L03,L00) -> -(SP)
       JZ              (SP)+ [FALSE] L0018
       SUB             #00,L00 -> -(SP)
       CALL_VN         R0426 (S471,L03,(SP)+)
       RFALSE          
L0018: CALL_VS         R0423 (L03,#42) -> -(SP)
       JZ              (SP)+ [TRUE] L0019
       CALL_VN         R0418 (L03,#42)
L0019: GET_CHILD       L00 -> -(SP) [FALSE] L0020
L0020: CALL_VN         R0425 (L03,(SP)+)
       INSERT_OBJ      L03,L00
       RFALSE          
L0021: JE              Gef,#43 [FALSE] L0024
       STORE           Gef,#00
       GET_CHILD       L00 -> -(SP) [FALSE] L0023
L0022: INC             Gef
       GET_SIBLING     (SP)+ -> -(SP) [TRUE] L0022
L0023: PULL            Gee
       PUSH            Gef
       SUB             (SP)+,#01 -> -(SP)
       RET_POPPED      
L0024: JE              Gef,#44 [FALSE] L0027
       CALL_VS         R0424 (L03,L00) -> -(SP)
       JZ              (SP)+ [FALSE] L0025
       SUB             #00,L00 -> -(SP)
       CALL_VN         R0426 (S472,L03,(SP)+)
       RFALSE          
L0025: CALL_VS         R0424 (L04,L00) -> -(SP)
       JZ              (SP)+ [FALSE] L0026
       SUB             #00,L00 -> -(SP)
       CALL_VN         R0426 (S473,L04,(SP)+)
       RFALSE          
L0026: CALL_VN         R0425 (L03,L04)
       RFALSE          
L0027: RTRUE           

[End of code]

[Start of text]

S001: "The Awakening"
S002: "
Copyright (c) 1998 by Dennis Matheson
(For more information type "HELP", for hints type "HINTS")

"
S003: "970918"
S004: "6/7"
S005: "a"
S006: "---"
S007: "the"
S008: "The "
S009: "the "
S010: "a "
S011: "The "
S012: "the "
S013: "an "
S014: "The "
S015: "the "
S016: "some "
S017: "The "
S018: "the "
S019: "some "
S020: "N = next subject"
S021: "P = previous"
S022: "  Q = resume game"
S023: "Q = previous menu"
S024: "RETURN = read subject"
S025: "Score: "
S026: "Moves: "
S027: "Time: "
S028: "You can't go that way."
S029: "your former self"
S030: "yourself"
S031: "Darkness"
S032: "those things"
S033: "that"
S034: " or "
S035: "nothing"
S036: " is"
S037: " are"
S038: "is "
S039: "are "
S040: " and "
S041: "whom "
S042: "which "
S043: "(considering the first sixteen objects only)
"
S044: "
Would you like to RESTART, RESTORE a saved game"
S045: ", give the FULL score for that game"
S046: ", see some suggestions for AMUSING things to do"
S047: "[Your interpreter does not provide "undo".  Sorry!]"
S048: ""Undo" failed.  [Not all interpreters provide it.]"
S049: "Please give one of the answers above."
S050: "[You can't "undo" what hasn't been done!]"
S051: "[Can't "undo" twice in succession. Sorry!]"
S052: ""Oops" can only correct a single word."
S053: "It is pitch dark, and you can't see a thing."
S054: "To repeat a command like "frog, jump", just say "again", not "frog,
again"."
S055: "You seem to want to talk to someone, but I can't see whom."
S056: "To talk to someone, try "someone, hello" or some such."
S057: "I didn't understand that sentence."
S058: "I only understood you as far as wanting to "
S059: "You seem to have said too little!"
S060: "You can't use multiple objects with that verb."
S061: "You can only use multiple objects once on a line."
S062: "You excepted something not included anyway!"
S063: "You can only do that to something animate."
S064: "That's not something you need to refer to in the course of this game."
S065: "I didn't understand the way that finished."
S066: "Sorry, you can only have one item here. Which exactly?"
S067: "(Since something dramatic has happened, your list of commands has been
cut short.)"
S068: " (closed, empty and providing light)"
S069: "no pronouns are known to the game."
S070: "Are you sure you want to restart? "
S071: "The game file has verified as intact."
S072: "The game file did not verify as intact, and may be corrupt."
S073: "Attempt to begin transcript failed."
S074: "Attempt to end transcript failed."
S075: "You're carrying too many things already."
S076: "You can't put something on top of itself."
S077: "You can't put something inside itself."
S078: " for a while, but don't achieve much."
S079: "You can only get into something freestanding."
S080: "But you aren't in anything at the moment."
S081: "You'll have to say which compass direction to go in."
S082: " is now in its normal "brief" printing mode, which gives long
descriptions of places never before visited and short descriptions otherwise."
S083: " is now in its "verbose" mode, which always gives long descriptions of
locations (even if you've been there before)."
S084: " is now in its "superbrief" mode, which always gives short descriptions
of locations (even if you haven't been there before)."
S085: "Darkness, noun.  An absence of light to see by."
S086: "seem to be something you can unlock."
S087: "seem to be something you can lock."
S088: "This dangerous act would achieve little."
S089: "Nothing practical results from your prayer."
S090: "The dreadful truth is, this is not a dream."
S091: "Digging would achieve nothing here."
S092: "You jump on the spot, fruitlessly."
S093: "You would achieve nothing by this."
S094: "There's nothing suitable to drink here."
S095: "But there's no water here to carry."
S096: "Real adventurers do not use such language."
S097: "Violence isn't the answer to this one."
S098: "There's not enough water to swim in."
S099: "There's nothing sensible to swing here."
S100: "That would be less than courteous."
S101: "Is that the best you can think of?"
S102: "You lack the nerve when it comes to the crucial moment."
S103: "I don't think much is to be achieved by that."
S104: "You aren't feeling especially drowsy."
S105: "You discover nothing of interest in "
S106: "[Gluing in inference with pattern code "
S107: "You find you cannot look down at yourself. It is almost as if you know
what you might find and are afraid to have your fears confirmed."
S108: " "
S109: "


[That's All Folks!]
"
S110: "HINTS disabled."
S111: "(Please Press Any Key)"
S112: "
Sorry, hints have been disabled."
S113: "HINTS disabled."
S114: "InvisiHints"
S115: "
Press ENTER for another hint, Q to return to the menu."
S116: "colorless"
S117: "The bottle is made of a heavy, leaded glass and closed with a cork
stopper sealed with wax. Inside the bottle, an oddly shaped lead weight hangs
like a pendulum from a string. The bottle glows with a "
S118: "The blue bottle is warm to your touch as you pick it up. The warmth
seems to travel up your arm and into the center of your being. It is almost as
if you have found a missing part of yourself."
S119: "You savor the warmth of the blue bottle as you pick it up."
S120: "The green bottle has a sickly feel which matches its color. It feels
like ice, cold and burning at the same time. It is all you can do to keep from
throwing it down."
S121: "You gingerly pick up the green bottle again."
S122: "You peel the wax away from the mouth of the bottle and pull out the
cork.  "
S123: "Rain and muddy water are pouring down on you, making it difficult to see
or even breathe. Sodden earth and mud surrounds you on all sides except
overhead, where flashes of lightning illuminate a storm tossed sky."
S124: "Howling winds and the crashing of thunder assault your senses."
S125: "As you scramble out of the hole the mud collapses downward, filling in
the hole behind you.
"
S126: "You claw helplessly at the mud."
S127: "Torrents of muddy water are pouring in from the opening overhead onto
you."
S128: "The muddy water trickles through your fingers."
S129: "The sides of the hole are made of dark, rich earth, now soaked through
by the torrential downpour.  As you watch, more and more mud is washed away and
into the hole with you."
S130: "You take a handful of muddy soil, but the rain washes it away."
S131: "You would expect the storm to have cleared the air, but over the whole
area hangs a fetid odor of decay."
S132: "It is not yet that time..."
S133: "That is no longer your place."
S134: "You feel that you are unable to.  Some force on you increases as you try
to leave the area."
S135: "
A blast of thunder rattles the ground."
S136: "
With a loud CRACK, a bolt of lightning strikes the steeple of the church."
S137: "
Momentarily, the wind and rain slacken then return with renewed force."
S138: "
Lightning arcs overhead, followed instantly by a blast of thunder."
S139: "
For a brief moment, hail pounds against you then subsides."
S140: "Dozens of stone markers stand here, oblivious to the wind and the rain.
Huge, twisted oaks, their limbs tossed by the wind, draw an unmentionable
sustenance from the moss-covered, moldy ground. An odor of decay, which even
the storm cannot dissipate, hangs over everything. An iron barred fence
surrounds the graveyard, an ivy-covered barrier separating it from the world of
the living. The only exit is through the gate to the east."
S141: "You smell the odors of wet earth, the wild scent of the storm, and,
under it all, the lingering charnel odor of decay."
S142: "The graveyard is surrounded on all sides by an iron-barred fence. The
only exit is through the gate to the east."
S143: "Dozens of stone slabs mark the final resting places of those who have
departed. All are old, the inscriptions worn away and covered with moss and
mold, they tilt at odd angles. Many have fallen and are now half buried in the
mud."
S144: "Few of the inscriptions are legible. Those that remain contain only
those sentiments that are placed there for the benefit of those who gaze upon
the stones, not those buried beneath them."
S145: "The stone topples over into the mud."
S146: "You strain and lift the stone slightly from the mud, then it slips and
falls over with a splash."
S147: "This large branch has broken off from one of the trees and fallen on one
of the graves, shattering it's marker."
S148: " A smaller limb has broken off of the branch and is lying nearby."
S149: "
A large branch has been broken from one of the trees and has crushed the grave
marker below it."
S150: " A smaller limb has broken off of the branch and is lying nearby."
S151: "The branch is too large to move, but a smaller limb has broken off and
is lying nearby."
S152: "You shove the branch around, to no real effect."
S153: "A stout oak limb, about as long as you are tall."
S154: "The marker for this grave has been shattered by the fall of a large
branch from the overhanging tree. The grave itself has been disturbed; the soil
has fallen in to form a shallow pit."
S155: "There is no need to collect the shattered remains of the marker."
S156: "The inscription is no longer legible."
S157: "Mosses and molds cover the ground and the grave markers. There is
something sickly looking about them, as if they are the physical manifestations
of some kind of poisons in the soil. At any rate, they are alone in the
graveyard, as no grasses or weeds grow within its boundaries."
S158: "You pull up a handful and examine it briefly before tossing it back
down. You see no use in carrying it with you."
S159: "The moss and mold is far too wet to burn."
S160: "This side of the church is untended and grasses and weeds have run
rampant. A muddy trail leads back to the graveyard to the west and on to the
southeast and a faint path continues around the church to the northeast."
S161: "There is no entrance into the church on this side."
S162: "Simply a worn trail through the grass, it leads around the church to the
northeast and southeast and west to the graveyard."
S163: "The trees close in here, their storm-tossed branches seeming to reach
clawing limbs towards the back of the church. The weeds have run wild here and
ivy climbs its way up the back of the building.  A faint path continues around
the church to the southeast and the southwest."
S164: "There is no entrance into the church on this side."
S165: "A barely visible rut in the grass leads around the church to the
southeast and southwest."
S166: "This wide, graveled clearing may have once been where the worshippers at
the church left their vehicles while attending services inside. If so, it seems
that the last service was held long ago. Weeds and grasses grow up through the
gravel, which is littered with debris. Dark, looming trees surround the
clearing except for the driveway, which leads to the southwest, and for a
narrow opening to the northwest."
S167: "There is no entrance into the church on this side."
S168: "Dirty chunks of rock mix with mud to create a more or less level
surface."
S169: "You already have a handful of gravel."
S170: "You dig a small hole in the gravel which the storm immediately fills in
with rain and mud."
S171: "A handful of loose, muddy gravel."
S172: "You toss down the gravel which scatters across the ground."
S173: "You toss down the gravel which scatters among the debris on the floor."
S174: "The gravel scatters across the ground and is lost."
S175: "Scattered sticks, leaves and bits of trash cover the gravel clearing."
S176: "You see no need to carry the trash around with you."
S177: "Two massive oak trees which flank the cracked sidewalk dominate the
front of the church. The facade of the church itself rises beyond them, its
steeple silhouetted against the sky. The storm lashes at its faded white
facade, almost as if the storm is trying to wash the church clean; something
you somehow realize will take more than mere water to accomplish. To the north,
a sidewalk leads to the front of the church. A weed-choked driveway runs to the
northeast and down a hill to the south, and a muddy path leads around the
church to the northwest."
S178: "Bristling and growling, the dog blocks your path"
S179: "The tree trunks are too slick with rain to climb."
S180: "These massive trees are easily hundreds of years old. They tower over
the front of the church, climbing almost as high as the steeple. Unlike the
forest surrounding other parts of the grounds they are almost unnaturally
healthy, their branches clean and straight and their leaves a deep rich green."
S181: "The trunk is too rain-slick to climb."
S182: "The dog is slavering and barking wildly as it throws itself at you again
and again."
S183: "This large, solid black dog is chained to one of the oak trees. There is
something disturbing about the shape of it's head; it seems to be too large and
slightly misshapen and an unnatural intelligence can be seen behind its red
eyes."
S184: "A formidable looking guard dog stands here."
S185: "
The dog snarls and snaps at you as you reach for it and you draw your hand back
hurriedly."
S186: "
Angered at your attack, the dog charges at you!"
S187: "
The dog growls and snarls angrily, snapping at your legs."
S188: "
The dog leaps at you, raking your chest with its claws and leaving a trail of
red."
S189: "
You feel a flash of searing pain as the dog latches onto your side with its
teeth."
S190: "
The dog finally manages to latch onto your throat. Your last sight is of your
blood splattering onto its face."
S191: "
The dog growls at you threateningly."
S192: "
Growling faintly, the dog follows you to "
S193: "
The dog lunges after you, but is suddenly jerked to a stop with a yelp.  The
dog has been brought up short by it's chain, which is now completely wrapped
around the church.  It barks wildly but ineffectually at you as you continue on
around the corner."
S194: "
Satisfied, the dog wanders off back to the Front of the Church."
S195: "A heavy steel chain.  It has rusted slightly but is still more than
sturdy enough to hold the dog."
S196: "
The heavy chain stretches from one of the oak trees and around the corner of
the church to the "
S197: "
A heavy chain stretches around the church to the northwest and southwest."
S198: "
A heavy chain is wrapped around the church, disappearing to the northeast and
southeast."
S199: "
A heavy chain disappears around the east and west corners."
S200: "The dog probably wouldn't like you to be pulling on its chain."
S201: "The limbs of the tree are swaying violently from the storm, but near the
trunk it is a little more stable. You have an excellent view from here of the
church grounds and surrounding area. The church seems to be in a clearing on a
hill surrounded by a forest. At the base of the hill a small town can be seen,
its lights glimmering faintly through the storm. 

One of the branches of the tree reaches out to the north towards the steeple of
the church. An open frame can be seen in the steeple near where the branch
ends."
S202: "Throwing caution to the winds, you leap out of the tree and into space.
The wind howls around you as you plummet to the ground. Your last sight is the
church steeple, silhouetted by the lightning against the sky."
S203: "You cannot climb any further up and the trunk of the tree is too slick
to climb down."
S204: " tumbles through the branches to the ground."
S205: "The drop to the ground below is too far for you to jump safely, and the
trunk of the tree is too slick to climb."
S206: "The tree branch sways alarmingly in the wind but seems quite sturdy. It
passes very close to the open window frame in the steeple."
S207: "The branch is securely attached to the tree."
S208: "A wide flagstone path leads between the two oak trees to the front of
the church. The earth has shifted, causing the stones to tilt at odd angles,
and weeds and grass grow in the cracks between the flagstones."
S209: "You attempt to lift one of the flagstones, but it slips and falls back
with a squishing splash."
S210: "A rutted, gravel covered path."
S211: "The ivy is thick and luxuriant and somehow disturbing. The shapes of the
leaves are not quite wholesome and you wonder what strange sustenance it is
drawing from beneath the moldering ground."
S212: "The ivy is sick and yellowed looking but somehow clings to the side of
the church as if it is trying to distance itself from the rocky soil."
S213: "The rain-soaked vines tear loose in your hands, covering you with wet
leaves and sticky sap."
S214: "The vines pull away easily enough, but maintain a tenacious hold on the
ground that you are unable to break."
S215: "These ancient, twisted trees surround and even invade the graveyard. Now
tossed wildly by the storm, their branches reach skyward while their roots suck
unholy nourishment from between the broken slabs."
S216: "The trees wave wildly in the wind, their twisted limbs seeming to reach
out to claw at the side of the church. No birds or forest animals inhabit their
branches; a repellent air surrounds them that seems inimical to any such
invasion."
S217: "The trunk is too wet and rain-slick to do that safely."
S218: "The howling wind sends the clouds racing across the sky. The almost
constant flashing of lightning illuminates the landscape in stark black and
white contrast, while the barrage of thunder joins with the wind in a mad
concaphony."
S219: "The rain pours downward, pelting you painfully and almost blinding you
with its intensity."
S220: "A thin layer of mud covers the rocky soil."
S221: "You take a handful of muddy soil, but the rain washes it away."
S222: "You are only able to dig a few inches before striking rock, and the rain
rapidly washes more mud in to fill up the hole you make."
S223: "Diseased looking grasses and weeds surround the church.  In clumps it
rises to your knees, while in other places it has been beaten to the ground by
the force of the storm."
S224: "You pull up a handful and examine it briefly before tossing it back
down. You see no use in carrying it with you."
S225: "The grass and weeds are far too wet to burn."
S226: "The old church has seen better days. Formerly painted white, the boards
are now faded, peeling and rotted. Most of the windows are boarded up, and
those that aren't have long since been broken out. The shingles have fallen
from the roof, which sags alarmingly. A broken-tipped steeple rises from one
end of the building, and a faint miasma of decay seems to rise from the
structure."
S227: "
A church rises to the east, its boarded up windows giving the impression that
it is covering its eyes from the sight of the graveyard."
S228: "
To the east, the wall of the church breaks some of the force of the wind."
S229: "
The south wall of the church looms blankly overhead."
S230: "
To the west, the church stares out over the clearing."
S231: "
The church and steeple loom to the north, the open window frames seeming to
stare with judgment upon anyone standing before it."
S232: "
The steeple of the church looms to the north."
S233: "Pointing heavenward like some broken, accusing finger, the steeple rises
from the front of the church. The steeple ends in a ragged, blunt tip; whatever
decoration may have once surmounted it is long gone."
S234: "Once, the windows were probably told stories of hope and redemption in
brightly colored stained glass. Now, they are boarded up as if the church has
closed it's eyes to the world outside."
S235: "The boards are nailed firmly in place."
S236: "This wide, covered porch spans the width of the church front. A white
picket railing surrounds the porch on three sides, except to the south where a
short flight of steps leads down to the sidewalk. Two large windows have been
boarded up but the main doors stand slightly ajar."
S237: "The floor here is old, but still pretty solid."
S238: "The railing is too rickety to climb."
S239: "There is no way off the porch in that direction."
S240: "The railing consists of two parallel lengths of wood about an arm's span
apart connected by wooden pickets.  "
S241: "One section of the railing seems fairly unsteady."
S242: "One section of the railing is missing."
S243: "With a jerk, you tear free the loose section of railing."
S244: "The rest of the railing seems fairly steady."
S245: "The railing consists of two parallel lengths of wood about an arm's span
apart connected by wooden pickets. If stood on end, the rail would be about
twice your height."
S246: "
The broken length of railing is propped up under the trap door"
S247: "
The broken length of railing is propped up against the side of the oak tree."
S248: "
The broken length of railing is propped against the wall near the painting."
S249: "The broken length of porch railing is lying here."
S250: "You carefully place the length of railing under the trap door in the
ceiling."
S251: "You lean the length of railing against the side of the oak tree."
S252: "You lean the length of railing against the wall near the painting."
S253: "You carefully climb up the length of railing, using the pickets like a
ladder.
"
S254: "The railing doesn't lead anywhere."
S255: "The railing doesn't lead anywhere."
S256: "The railing consists of two parallel lengths of wood about an arm's span
apart connected by wooden pickets. If stood on end, the rail would be about
twice your height."
S257: "
The top of the broken section of railing is visible sticking up through the
trap door in the floor."
S258: "
The broken length of railing is propped up against a nearby branch."
S259: "
You are precariously balanced on the top of the broken section of railing."
S260: "You attempt to pull the railing up after you, but you cannot get enough
leverage to do so."
S261: "It is not yet that time..."
S262: "That is no longer your place."
S263: "There is no passage in that direction."
S264: "
A blast of thunder rattles the building."
S265: "
You hear a loud crash and see a flash of light through the cracks in the boards
covering the windows."
S266: "
The building shudders under a sudden gust of wind."
S267: "
A flash of lightning can be seen through the cracks between the boards,
followed by a sudden blast of thunder."
S268: "
There is a brief rattle of hail on the roof."
S269: "This small room is the entryway for the church. The years of neglect are
obvious; the floorboards are rotten and warped and what were probably once
stained glass windows are shattered and boarded up. Dirt and debris covers the
floor. A set of double doors leads south back to the outside while a large
archway leads north into the sanctuary. Overhead, there is an open trap door in
the ceiling at about twice your height."
S270: "The opening in the ceiling is too far up for you to reach."
S271: "The opening in the ceiling seems to lead to another room overhead, but
there doesn't seem to be any way to get to it."
S272: "Once the heart of the church this room is now cold, dark and empty.
Debris is scattered among the sagging pews and only shards of broken glass
remain of the stained glass windows. Most of the interior fixtures have been
removed, but a large portrait of Christ stares down at you from above the
archway to the south. The pulpit still stands to the north."
S273: "You pray, with no result. You sense somehow that your prayers are not so
much being unheard as they are ignored."
S274: "A simple raised platform at the front of the church, it supports a
simple wooden podium."
S275: "Once, these rows would have been filled with worshippers. Now, they only
contain dust and debris."
S276: "You sit in the pew. For a moment, the storm seems to retreat and you are
blessed with a brief moment of peace."
S277: "You are standing on top of the railing section near the large painting
of Christ. From this location, you notice that the eyes in the painting are cut
out and there are holes behind them."
S278: ""Down" is really your only option."
S279: "The eyes of the painting are cutouts. There are holes and an open space
behind the eyes."
S280: "You are looking into the small room in the steeple. You can see past a
faded purple curtain to a small table which is holding two heavy glass
bottles."
S281: "You find yourself looking into a small enclosed space covered with a
faded purple curtain."
S282: "The two bottles of heavy glass are sitting on the table. One glows with
a vivid green light and the other with a pale blue light."
S283: "vivid green"
S284: "You can't do anything to the green bottle from here."
S285: "pale blue"
S286: "You can't do anything to the blue bottle from here."
S287: "From this raised platform you can see the entire inside of the church.
The pulpit is empty except for the podium which rises from the center. A small
door is visible behind the podium to the north."
S288: "You pray, with no result. You sense somehow that your prayers are not so
much being unheard as they are ignored."
S289: "This carved wooden podium is where the leader of this church would have
addressed his or her followers. Now, from the podium, you can only see rows of
empty pews and a lone painting of Christ, staring blankly down from the south
wall."
S290: " A large black book is resting open on the podium."
S291: "At first you thought this book was a Bible, but now you realize that you
were mistaken. The large, black, leather-bound tome contains passages you find
disturbing, and uncomfortably familiar."
S292: "Much of the book has been damaged by moisture and rats, but some of the
passages are still legible. One in particular sticks in your mind... "The way
to understand another is through their eyes, because the eyes are the windows
of the soul.  Through the eyes the soul may seen by those who are sensitive,
and through the eyes the soul my be taken by those who have pledged themselves
to the ones who wait beyond.""
S293: "As you look at the painting, a memory seems to float to the surface of
your mind.  You remember standing in this church and looking at that painting.
And you remember it staring back at you, with malevolent, vivid green eyes..."
S294: "The painting is too high up on the wall to do anything with."
S295: "There is something unusual about the eyes of the painting, but it is too
far away to see clearly."
S296: "This small office has the same run-down appearance of the rest of the
church. Debris covers the floor and a trickle of water comes in around the
boards covering a broken window. A desk stands in the middle of the room and an
empty bookshelf sits against one wall. A pile of ashes marks where a fire once
burned in the middle of the floor. A door to the south leads back to the
sanctuary."
S297: "An old wooden desk. Scarred and water-damaged, it has been here for some
time."
S298: "A warped, wooden bookshelf."
S299: "You push the bookshelf to one side, revealing an old book bound in a
strange reddish cover."
S300: "There seems to be something between the bookshelf and the wall."
S301: "A very old volume, bound in some strange reddish material. At first you
thought it was leather but it seems to be more closely akin to snakeskin. The
book seems to be a weird grimoire or spellbook and mostly concerns the soul or
spirit."
S302: "The book contains several rituals and procedures all involving the soul
or spirit.  The first describes a ritual through which the soul can be removed
from a person's body and placed in a specially prepared container. The soul
remains in the container even if the person's body dies.

A second ritual can be employed to use the stored soul as a receptacle for the
sin of another person.  This allows the possessor of another's soul to perform
any acts they wish without having to answer for those acts in the next world."
S303: "An old book lies on the desk."
S304: "A book of blank pages, the kind that would be used to keep a ledger or a
journal. Unfortunately, someone has torn out most of the pages and only blank
sheets remain."
S305: "A book of blank pages, the kind that would be used to keep a ledger or a
journal. Someone has torn out most of the pages, but the ashes have made the
indentations from the last entry legible."
S306: "Looking carefully at the book you notice that the last entry must have
been made with great force. The entry has left indentations on the first blank
page in the book."
S307: "You read the last entry from the journal... "I cannot continue. The more
I come to know her the more I realize that I cannot continue to corrupt her. 
She was pure and innocent before I took her, and that innocence allows her to
continue to trust me even after what I have done.  I only hope that the taint
of that which I have done has not stained her irrevocably and that she will go
to her proper place after I release her... and that I shall go to mine.""
S308: "It seems as if a good sized fire once burned here; it is amazing that
the entire room did not catch fire. From the occasional bit of unburned
material it seems as if whoever built the fire was burning books, probably from
the now empty bookcase. Mixed in with the ashes you find a number of jagged
shards of glass."
S309: "You already have a handful of ashes."
S310: "A handful of old ashes."
S311: "You toss down the ashes, which scatter in the wind."
S312: "You toss down the ashes, which scatter among the debris on the floor."
S313: "As you rub the ashes against the page, the indentations fill in and the
last entry becomes visible."
S314: "A number of shards of broken glass lies mixed in with the ashes. From
the look of the fragments, it was some kind of thick walled bottle that was
smashed into the floor."
S315: " A curious object lies in with the shards of glass. It looks like a
heavy rubber stopper with a chain hanging from it."
S316: "You cut your finger on the glass as you attempt to pick it up."
S317: "A heavy rubber stopper, such as would be used to close a bottle. Bits of
wax still cling to the edge showing where the bottle was sealed with the
stopper in place. A fine chain hangs from the stopper and ends in an oddly
carved lead weight."
S318: "A richly embroidered robe hangs beside the door."
S319: "Richly embroidered red robes, such as might be worn for ceremonial
purposes."
S320: "This small chamber is about halfway up the steeple of the church. Rain
and wind from the storm outside blows in through an open window frame and water
collects in puddles on the warped floor, mixing with the droppings of the
birds, or perhaps bats, which can be heard fluttering around overhead. Looking
up, you can see a maze of beams and supports that form the interior of the
steeple. Rain pours in from an opening higher in the steeple and trickles out
through a trap door in the floor."
S321: "There is no good way to climb upwards from here."
S322: "The drop to the floor of the vestibule below is too far for you to jump
safely."
S323: "Even with the door open and the wind from the storm blowing in this room
is rank with a fetid odor. The floor is piled high with trash and half eaten
scraps of food. There are no windows, only the broken door frame to the south.
An old sofa is pushed against one wall and a heavy table sits in the middle of
the room. A curtained archway is to the north."
S324: "The room smells of urine, sweat and rotting food."
S325: "This heavy wooden door looks to be newer and of more sturdy construction
than the rest of the church. A large, heavy handle is set into the door."
S326: "The door has been wrenched from its opening.  Only the splintered
remains of the frame remain."
S327: "A gaping splintered opening lies to the "
S328: "The heavy wooden door to the north is closed."
S329: "The curtain is an old and faded purple. It looks as if it may have been
a tablecloth initially."
S330: "
A curtain of purple cloth hangs in the archway."
S331: "You push the curtain aside and pause. On the other side of the curtain
is a room much like the one you are in. A figure stands in the archway,
apparently about to enter your room, and it is the sight of this figure which
has brought you up short. It is, or was, human... once. Now, it is a withered
mass of decaying flesh. It's clothing hangs in tatters and it is caked in mud
and grave mold. Patches of hair hang from it's scalp and bones are visible in
places through it's skin. The only thing that remains intact are it's eyes;
pale blue and now wide open and staring.

The creature raises its hand to you, and you find yourself doing the same. You
reach out your arm and touch... 



...a cold unyielding surface of polished glass.



Suddenly, the realization of what you are seeing comes home to you, and you
step back from the mirror with a cry."
S332: "You glance towards the mirror but realize that there is no need to enter
its reality, for the reality in the mirror is your own."
S333: "A highly polished mirror in a plain wooden frame. The mirror reflects
the contents of the room you are in and you find yourself averting your gaze
from what you see there. You note that the mirror frame is hinged on one side."
S334: "A highly polished mirror in a plain wooden frame. The mirror has been
swung away from the wall, revealing two holes at about eye level."
S335: "The mirror doesn't swing any further from the wall."
S336: "You swing the mirror away from the wall, revealing a pair of holes cut
in the wall behind it."
S337: "The mirror is firmly against the wall."
S338: "You swing the mirror back against the wall."
S339: "The holes are small, about the size of your thumb, and are at about eye
level."
S340: "You look through the holes and find yourself looking down into the
sanctuary of the church with a clear view of the pulpit. From the angle, you
realize that you are looking down through the eyes of the painting of Christ."
S341: "You find yourself looking down into the sanctuary of a church. Rows of
dust covered benches face a raised pulpit and podium."
S342: "A heavy table of rough cut wooden planks.  Curious symbols are carved
into the wood and the top is oddly stained."
S343: "The table is too heavy for you to move."
S344: "A sudden desire to rearrange the furniture?"
S345: "A old oil-burning lantern. Possibly brass, but very tarnished.  The
glass chimney is almost opaque with soot and grime."
S346: "A pair of heavy glass bottles sit on the table."
S347: "The bottles are made of a heavy, leaded glass and closed with a cork
stopper sealed with wax. Inside the bottles, an oddly shaped lead weight hangs
like a pendulum from a string. The bottles glow faintly."
S348: "pale blue"
S349: "A cloud of faintly glowing blue mist rises from the bottle and hangs in
the air before you. You feel a brief moment of freedom, of release.

Then, you realize that "
S350: " has started chuckling to himself. The first jolt of pain hits. The
cloud suddenly jerks and starts moving downward, as if drawn by a strong
suction. The pain intensifies and you drop first to your knees, then flat onto
the ground as if trying to follow the mist, which is now soaking into the
earth. The pain becomes excruciating. The last thing you see, as everything
fades to black, is "
S351: "vivid green"
S352: " suddenly realizes what you are doing.  With a scream of "Noooo!", he
throws himself towards you"
S353: " knocking over the lantern in the process"
S354: " knocking the lantern from your hands in the process"
S355: ". As he collapses at your feet, a glowing green mist rises from the
bottle and hangs before him. "No!", he whispers.

Then, the mist starts moving slowly downward as he doubles over and screams in
agony. As the mist soaks into the ground, he looks up at you and screams, "I'll
get my revenge"  I'll see you in hell.  I'LL SEE YOU IN HELL! Ia! Ia! Fthagn...
 Aaaaagh...!"

His body collapses to the ground.  As you watch the body blackens and decays
until, within only a few moments, what is left appears to be a many-months old
corpse.

"
S356: "You hear a sudden *Whumph!* and look around. The spilled oil from the
broken lantern has ignited.  "
S357: "With a loud *CRAK*, lightning strikes the steeple of the church.  With a
roar, the wooden structure catches fire.  "
S358: "Clutching the second bottle to you, you race outside.  "
S359: "You grab the blue bottle from the table and race outside.  "
S360: "Responding to an urge you cannot explain, you run to "
S361: ", grab it, and then run away from the church. "
S362: "You watch for a moment as flames consume the church. With a crackling
roar, the steeple collapses inward and a plume of flame shoots skyward.

Clutching the bottle to you, you make your way down the hill."
S363: "An old sofa, so patched, faded and stained that its original color can
no longer be determined. An unidentifiable odor rises from it."
S364: " is drawn and pale, his hair long and wild and his clothing filthy, torn
and unkempt. But, an active intelligence burns behind the vivid green eyes with
which he watches you; eyes which also contain a taint of madness."
S365: " draws back as you approach. "Don't be foolish!" he hisses."
S366: " laughs softly. "Do you think your opinions matter to me anymore?""
S367: " looks around. "Yes.. I knew you would return here. This is your home...
only one you have left. The villagers would not have welcomed you before; they
certainly will not now. And besides, the bottle will keep you here. *I* will
keep you here.""
S368: ""Fools!  Pathetic weaklings! They cannot understand. *Will* not
understand.  They would rather stay with their pathetic, safe god than open
their eyes to the true masters of the universe. You understood. You saw. Then,
they caused you to doubt yourself. Caused you to doubt your decision.""
S369: ""Why, to become immortal, of course! But, you changed your mind. You
freed her; freed her soul. But she had already absorbed too much of your sin,
hadn't she? She went to eternal punishment, for *your* sins. And so, you tried
to to kill yourself. But, you forgot about this, didn't you? You forgot where
*your* soul was."
S370: ""I still don't know what your fascination with her was. Certainly the
other villagers never approved of your 'relationship'.""
S371: " laughs. "What did you expect? After you saw what happened to *her* and
realized that *you* were the one responsible you went, shall we say, mad? You
always were weak. There was only one thing to be done, wasn't there?""
S372: ""Beautiful, aren't they? That's what *you* used to say. I remember how
you used to stare at them for hours. How you used to try to understand them..."
S373: ""Yes. That is you. Or, should I say, *was* you. It's *mine* now. The
receptacle for *my* sin."
S374: ""You see, I am safe now... I have transferred my sin to your soul. *If*
I ever decide to release it, I will go to *your* reward, while you will go to
*my* punishment.""
S375: "Safe, I promise you. They are safe."
S376: "You never had the stomach to read it before. Why the interest now?"
S377: "A useful creature. Quite intelligent, you know."
S378: "What?  You've forgotten me? How could you forget Silas? Your servant...
your colleague... your... teacher...?"
S379: " easily avoids your blows. He stares at you with his vivid green eyes.
"You were no match for me before... You are certainly no match for me now!""
S380: "The belfry of the church, high up inside the steeple. You are hanging
from a maze of support beams and trusses with the nearest solid floor far below
you. Large open frames give a view of the surrounding forest and of the town at
the base of the hill. They also allow the fury of the storm to pass in
unimpeded. You can see the branch of an oak tree just outside the southern
frame."
S381: "You leap off of the support and plummet to the floor below. The last
thing you hear is the peal of thunder outside."
S382: "You climb around on the supports a bit, but are unable to move much
further up or down the steeple."
S383: " tumbles through the beams to the floor below."
S384: "The rope swings freely from the bell again."
S385: "There doesn't seem to be any way to climb higher into the steeple."
S386: "The drop to the floor below is too far for you to climb safely."
S387: "You climb around on the supports a bit, but are unable to make much
progress in that direction."
S388: "This massive bell once summoned worshippers to the church. Now, it only
serves as the home for birds and rodents. The mount for the bell has broken on
one side, and the other is barely holding on. You are surprised that it has not
broken free and plummeted from the steeple before this."
S389: "The bell lies half buried in the mud. The fall has cracked and dented it
to the point where it will obviously never ring again."
S390: "
A massive bell hangs here, from a damaged mount."
S391: "
A heavy rope is attached to the bell and "
S392: "hangs through the beams to the room below."
S393: "
A broken bell lies half-buried in the mud."
S394: "The bell is far too heavy to move."
S395: "You shove against the bell. For a few seconds, the support takes the
strain. Then, with a loud cracking noise, the bell tears loose from the beam
and falls from the steeple. You hear the sound of splintering wood from below
and then duck aside as the splintered remains of the door are pulled past you
and out the open window. A metallic crash is heard from the ground outside."
S396: "A good shove would probably cause the bell to plummet from the steeple.
Of course, if it did, you would never be able to get it back up here again so
you decide against it for now."
S397: "The bell has buried itself too far in the mud to move."
S398: "
A frayed but heavy rope hangs from somewhere overhead."
S399: " hanging from the end of the rope."
S400: " The rope is tied to the handle of the door."
S401: "A frayed but heavy section of rope."
S402: "Trust me, suicide is *not* the answer here..."
S403: "The rope is already securely attached to the bell."
S404: "But, the rope isn't tied to anything!"
S405: "You are unable to loosen the rope from where it is attached to the
bell."
S406: "You release the rope, but it remains attached to "
S407: " which you are holding and doesn't fall very far."
S408: "You hear a metallic <CLANK> from somewhere overhead."
S409: "The bell moves slightly in its mount and emits a metallic <CLANK>."
S410: "The rope is securely attached and you can't go very far while holding
it."
S411: ", which you are holding, is tied to the rope which prevents you from
moving very far."
S412: "Rough hewn from wood, the beams and trusses are dirty and covered with
bird and animal droppings which make footing treacherous."
S413: "The small town huddles at the base of the hill. A few lights shine
defiantly against the storm but for the most part it seems quiet, as if its
inhabitants are waiting inside their homes for the fury to pass them by."
S414: "Sticks, leaves, unidentifiable trash and scraps of paper litter the
floor.  Some of it looks as if it has been here for years and none of it
appears useful."
S415: "You have no use for any of the trash."
S416: "Once these frames may have contained magnificent stained glass windows,
each showing in imagery some tale of religious significance. Now, only
fragments of colored glass remain. The frames are boarded up and the wind
whistles mournfully through the cracks."
S417: "The boards are nailed firmly in place."
S418: ""The Awakening" is a text adventure game. You interact with the game by
typing phrases like EXAMINE CHAIR or OPEN DOOR and the game responds by
describing the world around you and the results of your actions.

"
S419: "There are certain commands which are common to all adventure games. You
move around by giving the compass direction in which you want to go; for
example NORTH or SOUTHEAST. All directions can be shortened to one or two
letters; in this case N or SE. You can also go UP or DOWN (U or D). In some
locations IN or OUT work. You can also ENTER or CLIMB things.

"
S420: "When you first enter a location, the game will describe the location to
you. After that, it will only tell you the name of the location. You can see
the full description at any time by typing LOOK (or L). You can tell the game
to always give the full description by entering VERBOSE.

"
S421: "You interact with the environment in many ways. You GET items to pick
them up and DROP items to put them down. You can also PUT items IN things or
GET items FROM others. Fairly complex sentences are possible, for example GET
THE RED BRICK AND THE BLUE BALL FROM THE METAL BOX THEN THROW THE BRICK AT THE
WINDOW is a valid input.

"
S422: "You may encounter people or other creatures while exploring the world of
the game. You can ask these people questions by typing ASK person ABOUT topic
and tell them things by saying TELL person ABOUT topic. You can also SHOW them
things. You can ask them to do things with PERSON, COMMAND. For example, to ask
Bob to pick up the book, type BOB, GET THE BOOK.

"
S423: "To look at an item more closely, EXAMINE it. (EXAMINE can be abbreviated
as X) To get a list of everything you are carrying type INVENTORY (or I). Some
other useful commands you can try are PUSH, SEARCH, SHAKE, THROW, RUB, KICK,
CLIMB or READ. A part of any text adventure is learning what words the game
knows. "The Awakening" knows hundreds of words, so feel free to try anything.

"
S424: "If you get really stuck, you can access a hint menu at any time by
typing HINTS. If you would rather not be tempted, you can turn the hint feature
off by entering HINTS OFF."
S425: ""The Awakening" is my first piece of interactive fiction. It is based
(very) loosely on several stories by H.P. Lovecraft, most notably "The
Outsider", "The Terrible Old Man" and "The Two Black Bottles".

"
S426: "I mainly wrote "The Awakening" as a learning exercise. I had started
several other games, but they were all too big and I found myself becoming
overwhelmed by the scope of the game along with learning the language. I was
inspired to try a smaller game by the Textfire games which came out in April of
1998. "The Awakening" became much larger than any Textfire, but the inspiration
was there.

"
S427: "It took longer to finish the game than I expected. My main problem
involved the rope that is encountered in the game. Originally, it was far more
complex than what is now implemented. Even what is there now doesn't work quite
as well as I would have liked.

"
S428: "I hope you enjoy the game. Since it is my first game, feedback is
especially welcome. At this time (July 1998) my most stable e-mail address is:

Dennis_Matheson@compuserve.com

or, you can reach me by snail mail at:

Dennis Matheson
4068 Maxanne Dr.
Kennesaw, GA  30144

Enjoy!"
S429: "This game would not exist without the help and efforts of several people

"
S430: "First, credit must be given to Graham Nelson for developing the Inform
compiler without which this game would not have been possible. Inform, a
language for developing interactive fiction games, is available via ftp from:

ftp.gmd.de/if-archive/inform

"
S431: "Second, the menus used in this game (including this one) are developed
using L. Ross Raszewski's menu libraries.  These libraries (AltMenu.h, DoMenu.h
and Hints.h) are also available from ftp.gmd.de.

"
S432: "And finally, thanks must be given to the many fine people on
rec.arts.int-fiction who have answered so many of my questions. Thanks go to
Andrew Plotkin, L. Ross Raszewski, Joe Mason, Joyce Haslam, Mary Kuhner,
Michael Gentry, "FemaleDeer/Doeadeer3" and all the others whose names I have
misplaced. Thanks, all of you."
S433: "1) Copyright: "The Awakening" is copyright 1998 by Dennis Matheson.

"
S434: "2) Distribution: "The Awakening" may be distributed freely by any means
so long as a) This notice remains intact and b) no charge other than a nominal
fee to cover the cost of distribution is made. It may be included as part of a
commercial distribution provided that my permission is given first.

"
S435: "3) Derivative Works: "The Awakening" is distributed with its source
code. Derivative works are permitted of "The Awakening" so long as a) They are
clearly identified as such and reference is made back to this original version
and b) such works must freely redistributable under the same terms as stated
above.

"
S436: "4) Support: "The Awakening" is distributed without any support of any
kind. Feel free to contact me at the address given, but I make no guarantee
that I will respond.

"
S437: "5) Warranty: "The Awakening" is distributed totally without any warranty
of any kind. The entire risk of using this program is totally assumed by the
user."
S438: "Well, things could be starting off better here. Let's start by going UP
to get out of this hole. Now, let's take a look around. Hmmm... Not much here.
Maybe the church to the east has something. So, let's go EAST.

"
S439: "Not much here either. The main path seems to go to the southeast so
let's follow it to the SOUTHEAST.

"
S440: "Nice doggie! Head NORTH to the front door. Oops! Guess that won't work.
How can we get past this dog? Maybe if we ATTACK THE DOG it will leave.

"
S441: "That wasn't our best idea, was it? Better get out of here! Head off to
the NORTHEAST. The dog is still following us so let's go on around the church
to the NORTHWEST, SOUTHWEST and SOUTHEAST.

"
S442: "Hey, that worked pretty well! While the dog is tangled up let's take the
opportunity and go NORTH.

"
S443: "All right! Our first points! Let's look around here a bit then go NORTH
again. Not much better inside than out, is it? What's that trap door in the
ceiling for? Doesn't seem to be any way to get up there so let's explore down
here some more. Go on NORTH into the sanctuary.

"
S444: "What a dump. Not much left except a painting so let's EXAMINE THE
PAINTING. That's interesting; apparently we've been here before. Head on to the
NORTH some more and let's see what else we can remember.

"
S445: "EXAMINE THE PODIUM. Ah, a book. READ THE BOOK and see what else we can
discover. I don't know about you, but I'm getting the impression that this is
an unusual church. Let's head NORTH and check out the rest of the ground floor.

"
S446: "This room looks interesting. EXAMINE THE JOURNAL on the desk then try to
READ THE JOURNAL. Well, somebody didn't like something they had written. SEARCH
THE JOURNAL and see if we can find out anything. Indentations... Well, I've
seen enough detective movies to know what to do next. EXAMINE THE ASHES then
GET THE ASHES. OK, now RUB THE ASHES ON THE JOURNAL. Now we're getting
somewhere! READ THE JOURNAL again.

"
S447: "Starting to get a bad feeling about this? Too bad those books were
burned, they might have told us something. Think they (whoever "they" were)
missed anything? SEARCH THE BOOKCASE. Ah ha! PUSH THE BOOKCASE then READ THE
BOOK we have found.

"
S448: "I'm starting to get a feel for what is happening here. EXAMINE THE GLASS
on the floor. Wonder what that was for? Well, there doesn't seem to be much
more to do here so let's go back SOUTH a few times until we reach the Vestibule
again. That trap door still looks inviting but we haven't found a ladder. Or
have we?

"
S449: "Go SOUTH again to the Porch. EXAMINE THE RAILING. Well, it looks kind of
ladder-like, doesn't it? GET THE RAILING. Good thing this church is in such bad
shape. Now, go back NORTH and PUT THE RAILING UNDER THE TRAP DOOR. Now, CLIMB
THE RAILING.

"
S450: "Hey, that worked! Let's see what we have here. Another door, let's try
and OPEN THE DOOR. Locked? Now what? Not much here except for this rope. I
guess it's a bell rope. PULL THE ROPE. Yep, a bell. I wonder if there's
anything else up there? CLIMB THE ROPE and find out.

"
S451: "EXAMINE THE BELL. Well, maybe climbing that rope wasn't the best idea. I
mean, the rope seem sturdy enough but this bell seems ready to fall at any
point. PUSH THE BELL. Yes, fairly unstable. And that gives me an idea.

"
S452: "First we need another way out of here. Let's check to the SOUTH. OK,
we're out on a limb. We can't get down from here without a ladder but we know
where one of those is, don't we?

"
S453: "Let's go back NORTH then CLIMB THE ROPE again. Now, TIE THE ROPE TO THE
DOOR. Good idea, huh? Go DOWN then GET THE RAILING. Now, go SOUTH twice and PUT
THE LADDER AGAINST THE TREE. CLIMB THE LADDER and go NORTH.

"
S454: "Now, PUSH THE BELL and duck. That worked better than I had hoped! Go
back SOUTH then DOWN. GET THE LADDER, go NORTH twice and PUT THE LADDER UNDER
THE TRAP DOOR again. Now go back UP. Looks like we can go NORTH now.

"
S455: "Well, *this* is an interesting room, isn't it? Let's talk to the man in
here for a while. ASK THE MAN ABOUT... a few things. Doesn't seem too helpful,
does he? Well, let's do some more exploring on our own. Let's start by going
NORTH.



"
S456: "Let's stop and reflect on this latest discovery a bit. Things are
apparently a little worse than we thought. Let's EXAMINE THE MIRROR again then
OPEN THE MIRROR. Now, LOOK THROUGH THE HOLES. Well, we know what was going on
with that painting now.

"
S457: "OK, now let's EXAMINE THE BOTTLES on the table. EXAMINE THE BLUE BOTTLE
and EXAMINE THE GREEN BOTTLE. Now, think about what we've read, the broken
bottle we found, our "condition" and the distinctive feature of our "friend" on
the sofa. Well, there seems to be only one thing to do; OPEN THE GREEN BOTTLE
or BREAK THE GREEN BOTTLE.

"
S458: "Guess he wasn't expecting *that*! Now, what do we do about *our*
situation? Looks like that will have to wait for the next game for that...

"
S459: "Select a hint..."
S460: "The Awakening"
S461: "

You remember darkness. And the cold. Cold and darkness. And silence. Those
memories are all that you have. That, and a feeling that something you never
knew you possessed has been lost.

Suddenly, oblivion is split by a blinding light and a crash of sound. You
awaken to the roar of a storm and a deluge of rain and mud.
"
S462: "A word comes to you, and you shout it out...  "XYXXY!". The storm
responds with a roar and a crash of thunder. It is a word of power. Once, you
feel, you knew many such words. Now, only this one remains."
S463: "write to"
S464: "read"
S465: "send message"
S466: "increment"
S467: "decrement"
S468: "apply 'ofclass' for"
S469: ": 'create' can have 0 to 3 parameters only **"
S470: "recreate"
S471: "destroy"
S472: "copy"
S473: "copy"
S474: "<unknown attribute>"
S475: "name"
S476: "create"
S477: "recreate"
S478: "destroy"
S479: "remaining"
S480: "copy"
S481: "call"
S482: "print"
S483: "print_to_array"
S484: "animate"
S485: "absent"
S486: "clothing"
S487: "concealed"
S488: "container"
S489: "door"
S490: "edible"
S491: "enterable"
S492: "general"
S493: "light"
S494: "lockable"
S495: "locked"
S496: "moved"
S497: "on"
S498: "open"
S499: "openable"
S500: "proper"
S501: "scenery"
S502: "scored"
S503: "static"
S504: "supporter"
S505: "switchable"
S506: "talkable"
S507: "transparent"
S508: "visited"
S509: "workflag"
S510: "worn"
S511: "male"
S512: "female"
S513: "neuter"
S514: "pluralname"
S515: "before"
S516: "after"
S517: "life"
S518: "n_to"
S519: "s_to"
S520: "e_to"
S521: "w_to"
S522: "ne_to"
S523: "se_to"
S524: "nw_to"
S525: "sw_to"
S526: "u_to"
S527: "d_to"
S528: "in_to"
S529: "out_to"
S530: "door_to"
S531: "with_key"
S532: "door_dir"
S533: "invent"
S534: "plural"
S535: "add_to_scope"
S536: "list_together"
S537: "react_before"
S538: "react_after"
S539: "grammar"
S540: "orders"
S541: "initial"
S542: "when_open"
S543: "when_closed"
S544: "when_on"
S545: "when_off"
S546: "description"
S547: "describe"
S548: "article"
S549: "cant_go"
S550: "found_in"
S551: "time_left"
S552: "number"
S553: "time_out"
S554: "daemon"
S555: "each_turn"
S556: "capacity"
S557: "short_name"
S558: "short_name_indef"
S559: "parse_name"
S560: "articles"
S561: "inside_description"
S562: "play"
S563: "Pronouns"
S564: "Quit"
S565: "Restart"
S566: "Restore"
S567: "Save"
S568: "Verify"
S569: "ScriptOn"
S570: "ScriptOff"
S571: "NotifyOn"
S572: "NotifyOff"
S573: "Places"
S574: "Objects"
S575: "Score"
S576: "FullScore"
S577: "Inv"
S578: "Take"
S579: "Drop"
S580: "Remove"
S581: "PutOn"
S582: "Insert"
S583: "EmptyT"
S584: "Give"
S585: "Show"
S586: "Enter"
S587: "GetOff"
S588: "Exit"
S589: "VagueGo"
S590: "Go"
S591: "LMode1"
S592: "LMode2"
S593: "LMode3"
S594: "Look"
S595: "Examine"
S596: "LookUnder"
S597: "Search"
S598: "Unlock"
S599: "Lock"
S600: "SwitchOn"
S601: "SwitchOff"
S602: "Open"
S603: "Close"
S604: "Disrobe"
S605: "Wear"
S606: "Eat"
S607: "Yes"
S608: "No"
S609: "Burn"
S610: "Pray"
S611: "Wake"
S612: "WakeOther"
S613: "Kiss"
S614: "Think"
S615: "Smell"
S616: "Listen"
S617: "Taste"
S618: "Touch"
S619: "Dig"
S620: "Cut"
S621: "Jump"
S622: "JumpOver"
S623: "Tie"
S624: "Drink"
S625: "Fill"
S626: "Sorry"
S627: "Strong"
S628: "Mild"
S629: "Attack"
S630: "Swim"
S631: "Swing"
S632: "Blow"
S633: "Rub"
S634: "Set"
S635: "SetTo"
S636: "WaveHands"
S637: "Wave"
S638: "Pull"
S639: "Push"
S640: "Turn"
S641: "PushDir"
S642: "Squeeze"
S643: "ThrowAt"
S644: "Tell"
S645: "Answer"
S646: "Ask"
S647: "Buy"
S648: "Sing"
S649: "Climb"
S650: "Wait"
S651: "Sleep"
S652: "Consult"
S653: "parse_input"
S654: "AskFor"
S655: "GiveR"
S656: "ShowR"
S657: "begin_action"
S658: "end_turn_sequence"
S659: "Transfer"
S660: "select"
S661: "sup_bar"
S662: "label"
S663: "toggle"
S664: "title_bar"
S665: "emblazon"
S666: "titles"
S667: "execute"
S668: "doname"
S669: "selection_name"
S670: "printsn"
S671: "GiveHint"
S672: "HintOff"
S673: "Hint"
S674: "color"
S675: "open_bottle"
S676: "Read"
S677: "is_under"
S678: "is_mad"
S679: "is_following"
S680: "temper"
S681: "chain_length"
S682: "is_over"
S683: "PutUnder"
S684: "is_tied_to"
S685: "Ring"
S686: "UnTie"
S687: "Version"
S688: "Empty"
S689: "InvTall"
S690: "InvWide"
S691: "GoIn"
S692: "Xyzzy"
S693: "Help"

[End of text]

[End of file]
